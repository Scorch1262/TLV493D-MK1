

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Thu Sep 30 09:26:18 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F46K20
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     7                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=3
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=3
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=3
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=3
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=3
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=3
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=2
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=2
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=2
    38                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=2
    39                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=2
    40                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=3
    41                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=3
    42                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=3
    43                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=2
    44                           	psect	text29,global,reloc=2,class=CODE,delta=1
    45                           	psect	text30,global,reloc=2,class=CODE,delta=1
    46                           	psect	text31,global,reloc=2,class=CODE,delta=1
    47                           	psect	text32,global,reloc=2,class=CODE,delta=1
    48                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=2
    49                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=2
    50                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=2
    51                           	psect	text36,global,reloc=2,class=CODE,delta=1
    52                           	psect	text37,global,reloc=2,class=CODE,delta=1
    53                           	psect	text38,global,reloc=2,class=CODE,delta=1
    54                           	psect	text39,global,reloc=2,class=CODE,delta=1
    55                           	psect	text40,global,reloc=2,class=CODE,delta=1
    56                           	psect	text41,global,reloc=2,class=CODE,delta=1
    57                           	psect	text42,global,reloc=2,class=CODE,delta=1
    58                           	psect	text43,global,reloc=2,class=CODE,delta=1,inline
    59                           	psect	text44,global,reloc=2,class=CODE,delta=1
    60                           	psect	text45,global,reloc=2,class=CODE,delta=1
    61                           	psect	text46,global,reloc=2,class=CODE,delta=1
    62                           	psect	text47,global,reloc=2,class=CODE,delta=1,inline
    63                           	psect	text48,global,reloc=2,class=CODE,delta=1,inline
    64                           	psect	text49,global,reloc=2,class=CODE,delta=1
    65                           	psect	text50,global,reloc=2,class=CODE,delta=1
    66                           	psect	text51,global,reloc=2,class=CODE,delta=1
    67                           	psect	text52,global,reloc=2,class=CODE,delta=1
    68                           	psect	text53,global,reloc=2,class=CODE,delta=1
    69                           	psect	text54,global,reloc=2,class=CODE,delta=1
    70                           	psect	text55,global,reloc=2,class=CODE,delta=1
    71                           	psect	text56,global,reloc=2,class=CODE,delta=1
    72                           	psect	text57,global,reloc=2,class=CODE,delta=1
    73                           	psect	text58,global,reloc=2,class=CODE,delta=1
    74                           	psect	text59,global,reloc=2,class=CODE,delta=1
    75                           	psect	text60,global,reloc=2,class=CODE,delta=1
    76                           	psect	text61,global,reloc=2,class=CODE,delta=1
    77                           	psect	text62,global,reloc=2,class=CODE,delta=1
    78                           	psect	text63,global,reloc=2,class=CODE,delta=1
    79                           	psect	text64,global,reloc=2,class=CODE,delta=1
    80                           	psect	text65,global,reloc=2,class=CODE,delta=1,inline
    81                           	psect	text66,global,reloc=2,class=CODE,delta=1,inline
    82                           	psect	text67,global,reloc=2,class=CODE,delta=1,inline
    83                           	psect	text68,global,reloc=2,class=CODE,delta=1,inline
    84                           	psect	text69,global,reloc=2,class=CODE,delta=1,inline
    85                           	psect	text70,global,reloc=2,class=CODE,delta=1,inline
    86                           	psect	text71,global,reloc=2,class=CODE,delta=1,inline
    87                           	psect	text72,global,reloc=2,class=CODE,delta=1
    88                           	psect	text73,global,reloc=2,class=CODE,delta=1
    89                           	psect	text74,global,reloc=2,class=CODE,delta=1
    90                           	psect	text75,global,reloc=2,class=CODE,delta=1
    91                           	psect	text76,global,reloc=2,class=CODE,delta=1
    92                           	psect	text77,global,reloc=2,class=CODE,delta=1
    93                           	psect	text78,global,reloc=2,class=CODE,delta=1
    94                           	psect	text79,global,reloc=2,class=CODE,delta=1
    95                           	psect	text80,global,reloc=2,class=CODE,delta=1
    96                           	psect	text81,global,reloc=2,class=CODE,delta=1
    97                           	psect	text82,global,reloc=2,class=CODE,delta=1,inline
    98                           	psect	text83,global,reloc=2,class=CODE,delta=1,inline
    99                           	psect	text84,global,reloc=2,class=CODE,delta=1,inline
   100                           	psect	text85,global,reloc=2,class=CODE,delta=1
   101                           	psect	text86,global,reloc=2,class=CODE,delta=1,inline
   102                           	psect	text87,global,reloc=2,class=CODE,delta=1,inline
   103                           	psect	text88,global,reloc=2,class=CODE,delta=1,inline
   104                           	psect	text89,global,reloc=2,class=CODE,delta=1
   105                           	psect	text90,global,reloc=2,class=CODE,delta=1
   106                           	psect	text91,global,reloc=2,class=CODE,delta=1
   107                           	psect	text92,global,reloc=2,class=CODE,delta=1
   108                           	psect	text93,global,reloc=2,class=CODE,delta=1
   109                           	psect	text94,global,reloc=2,class=CODE,delta=1
   110                           	psect	text95,global,reloc=2,class=CODE,delta=1
   111                           	psect	text96,global,reloc=2,class=CODE,delta=1
   112                           	psect	text97,global,reloc=2,class=CODE,delta=1
   113                           	psect	text98,global,reloc=2,class=CODE,delta=1
   114                           	psect	text99,global,reloc=2,class=CODE,delta=1
   115                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   116                           	psect	text101,global,reloc=2,class=CODE,delta=1
   117                           	psect	text102,global,reloc=2,class=CODE,delta=1
   118                           	psect	text103,global,reloc=2,class=CODE,delta=1
   119                           	psect	text104,global,reloc=2,class=CODE,delta=1
   120                           	psect	text105,global,reloc=2,class=CODE,delta=1
   121                           	psect	text106,global,reloc=2,class=CODE,delta=1
   122                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   123                           	psect	text107,global,reloc=2,class=CODE,delta=1
   124                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   125                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   126                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
   127                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
   128  0000                     
   129                           ; Version 2.20
   130                           ; Generated 05/05/2020 GMT
   131                           ; 
   132                           ; Copyright © 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
   133                           ; All rights reserved.
   134                           ; 
   135                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   136                           ; 
   137                           ; Redistribution and use in source and binary forms, with or without modification, are
   138                           ; permitted provided that the following conditions are met:
   139                           ; 
   140                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   141                           ;        conditions and the following disclaimer.
   142                           ; 
   143                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   144                           ;        of conditions and the following disclaimer in the documentation and/or other
   145                           ;        materials provided with the distribution.
   146                           ; 
   147                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   148                           ;        software without specific prior written permission.
   149                           ; 
   150                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   151                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   152                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   153                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   154                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   155                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   156                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   157                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   158                           ; 
   159                           ; 
   160                           ; Code-generator required, PIC18F46K20 Definitions
   161                           ; 
   162                           ; SFR Addresses
   163  0000                     
   164                           	psect	smallconst
   165  001000                     __psmallconst:
   166                           	callstack 0
   167  001000  00                 	db	0
   168  001001                     _fsmStateTable:
   169                           	callstack 0
   170  001001  4A                 	db	low _I2C_DO_IDLE
   171  001002  4D                 	db	high _I2C_DO_IDLE
   172  001003  22                 	db	low _I2C_DO_SEND_ADR_READ
   173  001004  4D                 	db	high _I2C_DO_SEND_ADR_READ
   174  001005  12                 	db	low _I2C_DO_SEND_ADR_WRITE
   175  001006  4D                 	db	high _I2C_DO_SEND_ADR_WRITE
   176  001007  AC                 	db	low _I2C_DO_TX
   177  001008  3C                 	db	high _I2C_DO_TX
   178  001009  C0                 	db	low _I2C_DO_RX
   179  00100A  41                 	db	high _I2C_DO_RX
   180  00100B  3E                 	db	low _I2C_DO_RCEN
   181  00100C  4D                 	db	high _I2C_DO_RCEN
   182  00100D  8A                 	db	low _I2C_DO_TX_EMPTY
   183  00100E  43                 	db	high _I2C_DO_TX_EMPTY
   184  00100F  DC                 	db	low _I2C_DO_SEND_RESTART_READ
   185  001010  4D                 	db	high _I2C_DO_SEND_RESTART_READ
   186  001011  D4                 	db	low _I2C_DO_SEND_RESTART_WRITE
   187  001012  4D                 	db	high _I2C_DO_SEND_RESTART_WRITE
   188  001013  CC                 	db	low _I2C_DO_SEND_RESTART
   189  001014  4D                 	db	high _I2C_DO_SEND_RESTART
   190  001015  C4                 	db	low _I2C_DO_SEND_STOP
   191  001016  4D                 	db	high _I2C_DO_SEND_STOP
   192  001017  BC                 	db	low _I2C_DO_RX_ACK
   193  001018  4D                 	db	high _I2C_DO_RX_ACK
   194  001019  B4                 	db	low _I2C_DO_RX_NACK_STOP
   195  00101A  4D                 	db	high _I2C_DO_RX_NACK_STOP
   196  00101B  AC                 	db	low _I2C_DO_RX_NACK_RESTART
   197  00101C  4D                 	db	high _I2C_DO_RX_NACK_RESTART
   198  00101D  32                 	db	low _I2C_DO_RESET
   199  00101E  4D                 	db	high _I2C_DO_RESET
   200  00101F  66                 	db	low _I2C_DO_ADDRESS_NACK
   201  001020  45                 	db	high _I2C_DO_ADDRESS_NACK
   202  001021                     __end_of_fsmStateTable:
   203                           	callstack 0
   204  001021                     STR_4:
   205  001021  54                 	db	84	;'T'
   206  001022  65                 	db	101	;'e'
   207  001023  6D                 	db	109	;'m'
   208  001024  70                 	db	112	;'p'
   209  001025  20                 	db	32
   210  001026  3D                 	db	61	;'='
   211  001027  20                 	db	32
   212  001028  25                 	db	37
   213  001029  30                 	db	48	;'0'
   214  00102A  2E                 	db	46
   215  00102B  32                 	db	50	;'2'
   216  00102C  66                 	db	102	;'f'
   217  00102D  43                 	db	67	;'C'
   218  00102E  0D                 	db	13
   219  00102F  0A                 	db	10
   220  001030  00                 	db	0
   221  001031                     STR_1:
   222  001031  58                 	db	88	;'X'
   223  001032  20                 	db	32
   224  001033  3D                 	db	61	;'='
   225  001034  20                 	db	32
   226  001035  25                 	db	37
   227  001036  30                 	db	48	;'0'
   228  001037  2E                 	db	46
   229  001038  34                 	db	52	;'4'
   230  001039  66                 	db	102	;'f'
   231  00103A  6D                 	db	109	;'m'
   232  00103B  54                 	db	84	;'T'
   233  00103C  20                 	db	32
   234  00103D  20                 	db	32
   235  00103E  20                 	db	32
   236  00103F  00                 	db	0
   237  001040                     STR_2:
   238  001040  59                 	db	89	;'Y'
   239  001041  20                 	db	32
   240  001042  3D                 	db	61	;'='
   241  001043  20                 	db	32
   242  001044  25                 	db	37
   243  001045  30                 	db	48	;'0'
   244  001046  2E                 	db	46
   245  001047  34                 	db	52	;'4'
   246  001048  66                 	db	102	;'f'
   247  001049  6D                 	db	109	;'m'
   248  00104A  54                 	db	84	;'T'
   249  00104B  20                 	db	32
   250  00104C  20                 	db	32
   251  00104D  20                 	db	32
   252  00104E  00                 	db	0
   253  00104F                     STR_3:
   254  00104F  5A                 	db	90	;'Z'
   255  001050  20                 	db	32
   256  001051  3D                 	db	61	;'='
   257  001052  20                 	db	32
   258  001053  25                 	db	37
   259  001054  30                 	db	48	;'0'
   260  001055  2E                 	db	46
   261  001056  34                 	db	52	;'4'
   262  001057  66                 	db	102	;'f'
   263  001058  6D                 	db	109	;'m'
   264  001059  54                 	db	84	;'T'
   265  00105A  20                 	db	32
   266  00105B  20                 	db	32
   267  00105C  20                 	db	32
   268  00105D  00                 	db	0
   269  00105E                     STR_5:
   270  00105E  49                 	db	73	;'I'
   271  00105F  4E                 	db	78	;'N'
   272  001060  46                 	db	70	;'F'
   273  001061  00                 	db	0
   274  001062                     STR_9:
   275  001062  4E                 	db	78	;'N'
   276  001063  41                 	db	65	;'A'
   277  001064  4E                 	db	78	;'N'
   278  001065  00                 	db	0
   279  001066                     STR_6:
   280  001066  69                 	db	105	;'i'
   281  001067  6E                 	db	110	;'n'
   282  001068  66                 	db	102	;'f'
   283  001069  00                 	db	0
   284  00106A                     STR_10:
   285  00106A  6E                 	db	110	;'n'
   286  00106B  61                 	db	97	;'a'
   287  00106C  6E                 	db	110	;'n'
   288  00106D  00                 	db	0
   289  00106E                     STR_13:
   290  00106E  6C                 	db	108	;'l'
   291  00106F  66                 	db	102	;'f'
   292  001070  00                 	db	0
   293  001071  00                 	db	0	; dummy byte at the end
   294  0000                     
   295                           	psect	nvBANK0
   296  0000FD                     __pnvBANK0:
   297                           	callstack 0
   298  0000FD                     _EUSART_TxDefaultInterruptHandler:
   299                           	callstack 0
   300  0000FD                     	ds	2
   301  0000FF                     _eusartTxBufferRemaining:
   302                           	callstack 0
   303  0000FF                     	ds	1
   304                           
   305                           	psect	nvBANK1
   306  00017C                     __pnvBANK1:
   307                           	callstack 0
   308  00017C                     _EUSART_ErrorHandler:
   309                           	callstack 0
   310  00017C                     	ds	2
   311  00017E                     _EUSART_OverrunErrorHandler:
   312                           	callstack 0
   313  00017E                     	ds	2
   314  000180                     _EUSART_FramingErrorHandler:
   315                           	callstack 0
   316  000180                     	ds	2
   317  000182                     _EUSART_RxDefaultInterruptHandler:
   318                           	callstack 0
   319  000182                     	ds	2
   320  0000                     _RCONbits	set	4048
   321  0000                     _RCREG	set	4014
   322  0000                     _RCSTAbits	set	4011
   323  0000                     _TXREG	set	4013
   324  0000                     _TXSTAbits	set	4012
   325  0000                     _SPBRGH	set	4016
   326  0000                     _SPBRG	set	4015
   327  0000                     _TXSTA	set	4012
   328  0000                     _RCSTA	set	4011
   329  0000                     _BAUDCON	set	4024
   330  0000                     _INTCONbits	set	4082
   331  0000                     _INTCON2bits	set	4081
   332  0000                     _WPUB	set	3964
   333  0000                     _ANSELH	set	3967
   334  0000                     _ANSEL	set	3966
   335  0000                     _TRISD	set	3989
   336  0000                     _TRISC	set	3988
   337  0000                     _TRISB	set	3987
   338  0000                     _TRISA	set	3986
   339  0000                     _TRISE	set	3990
   340  0000                     _LATC	set	3979
   341  0000                     _LATB	set	3978
   342  0000                     _LATA	set	3977
   343  0000                     _LATD	set	3980
   344  0000                     _LATE	set	3981
   345  0000                     _OSCTUNE	set	3995
   346  0000                     _OSCCON	set	4051
   347  0000                     _PIR1bits	set	3998
   348  0000                     _PIE1bits	set	3997
   349  0000                     _SSPSTATbits	set	4039
   350  0000                     _PIR2bits	set	4001
   351  0000                     _SSPCON2bits	set	4037
   352  0000                     _SSPBUF	set	4041
   353  0000                     _SSPCON1bits	set	4038
   354  0000                     _SSPADD	set	4040
   355  0000                     _SSPCON2	set	4037
   356  0000                     _SSPCON1	set	4038
   357  0000                     _SSPSTAT	set	4039
   358                           
   359                           ; #config settings
   360                           
   361                           	psect	cinit
   362  004A96                     __pcinit:
   363                           	callstack 0
   364  004A96                     start_initialization:
   365                           	callstack 0
   366  004A96                     __initialization:
   367                           	callstack 0
   368                           
   369                           ; Clear objects allocated to BANK1 (124 bytes)
   370  004A96  EE01  F000         	lfsr	0,__pbssBANK1
   371  004A9A  0E7C               	movlw	124
   372  004A9C                     clear_0:
   373  004A9C  6AEE               	clrf	postinc0,c
   374  004A9E  06E8               	decf	wreg,f,c
   375  004AA0  E1FD               	bnz	clear_0
   376                           
   377                           ; Clear objects allocated to BANK0 (69 bytes)
   378  004AA2  EE00  F0B8         	lfsr	0,__pbssBANK0
   379  004AA6  0E45               	movlw	69
   380  004AA8                     clear_1:
   381  004AA8  6AEE               	clrf	postinc0,c
   382  004AAA  06E8               	decf	wreg,f,c
   383  004AAC  E1FD               	bnz	clear_1
   384                           
   385                           ; Clear objects allocated to COMRAM (5 bytes)
   386  004AAE  6A5A               	clrf	(__pbssCOMRAM+4)& (0+255),c
   387  004AB0  6A59               	clrf	(__pbssCOMRAM+3)& (0+255),c
   388  004AB2  6A58               	clrf	(__pbssCOMRAM+2)& (0+255),c
   389  004AB4  6A57               	clrf	(__pbssCOMRAM+1)& (0+255),c
   390  004AB6  6A56               	clrf	__pbssCOMRAM& (0+255),c
   391  004AB8                     end_of_initialization:
   392                           	callstack 0
   393  004AB8                     __end_of__initialization:
   394                           	callstack 0
   395  004AB8  905B               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   396  004ABA  925B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   397  004ABC  0100               	movlb	0
   398  004ABE  EF31  F01A         	goto	_main	;jump to C main() function
   399                           
   400                           	psect	bssCOMRAM
   401  000056                     __pbssCOMRAM:
   402                           	callstack 0
   403  000056                     _eusartRxCount:
   404                           	callstack 0
   405  000056                     	ds	1
   406  000057                     _eusartRxTail:
   407                           	callstack 0
   408  000057                     	ds	1
   409  000058                     _eusartRxHead:
   410                           	callstack 0
   411  000058                     	ds	1
   412  000059                     _eusartTxTail:
   413                           	callstack 0
   414  000059                     	ds	1
   415  00005A                     _eusartTxHead:
   416                           	callstack 0
   417  00005A                     	ds	1
   418                           
   419                           	psect	bssBANK0
   420  0000B8                     __pbssBANK0:
   421                           	callstack 0
   422  0000B8                     _I2C_Status:
   423                           	callstack 0
   424  0000B8                     	ds	36
   425  0000DC                     floorf@F527:
   426                           	callstack 0
   427  0000DC                     	ds	4
   428  0000E0                     ___fpclassifyf@F465:
   429                           	callstack 0
   430  0000E0                     	ds	4
   431  0000E4                     _TempDataAnz:
   432                           	callstack 0
   433  0000E4                     	ds	4
   434  0000E8                     _ZDataAnz:
   435                           	callstack 0
   436  0000E8                     	ds	4
   437  0000EC                     _YDataAnz:
   438                           	callstack 0
   439  0000EC                     	ds	4
   440  0000F0                     _XDataAnz:
   441                           	callstack 0
   442  0000F0                     	ds	4
   443  0000F4                     _nout:
   444                           	callstack 0
   445  0000F4                     	ds	2
   446  0000F6                     _width:
   447                           	callstack 0
   448  0000F6                     	ds	2
   449  0000F8                     _prec:
   450                           	callstack 0
   451  0000F8                     	ds	2
   452  0000FA                     _flags:
   453                           	callstack 0
   454  0000FA                     	ds	2
   455  0000FC                     _eusartRxLastError:
   456                           	callstack 0
   457  0000FC                     	ds	1
   458                           
   459                           	psect	bssBANK1
   460  000100                     __pbssBANK1:
   461                           	callstack 0
   462  000100                     _eusartRxStatusBuffer:
   463                           	callstack 0
   464  000100                     	ds	8
   465  000108                     _eusartRxBuffer:
   466                           	callstack 0
   467  000108                     	ds	8
   468  000110                     _eusartTxBuffer:
   469                           	callstack 0
   470  000110                     	ds	8
   471  000118                     _dbuf:
   472                           	callstack 0
   473  000118                     	ds	80
   474  000168                     _readBuffer:
   475                           	callstack 0
   476  000168                     	ds	10
   477  000172                     _writeBuffer:
   478                           	callstack 0
   479  000172                     	ds	10
   480                           
   481                           	psect	cstackBANK1
   482  000184                     __pcstackBANK1:
   483                           	callstack 0
   484  000184                     printf@ap:
   485                           	callstack 0
   486                           
   487                           ; 2 bytes @ 0x0
   488  000184                     	ds	2
   489  000186                     ??_main:
   490                           
   491                           ; 1 bytes @ 0x2
   492  000186                     	ds	2
   493                           
   494                           	psect	cstackBANK0
   495  000060                     __pcstackBANK0:
   496                           	callstack 0
   497  000060                     _efgtoa$2123:
   498                           	callstack 0
   499                           
   500                           ; 2 bytes @ 0x0
   501  000060                     	ds	2
   502  000062                     _efgtoa$2124:
   503                           	callstack 0
   504                           
   505                           ; 2 bytes @ 0x2
   506  000062                     	ds	2
   507  000064                     _efgtoa$2129:
   508                           	callstack 0
   509                           
   510                           ; 2 bytes @ 0x4
   511  000064                     	ds	2
   512  000066                     _efgtoa$2133:
   513                           	callstack 0
   514                           
   515                           ; 2 bytes @ 0x6
   516  000066                     	ds	2
   517  000068                     _efgtoa$2134:
   518                           	callstack 0
   519                           
   520                           ; 2 bytes @ 0x8
   521  000068                     	ds	2
   522  00006A                     _efgtoa$2135:
   523                           	callstack 0
   524                           
   525                           ; 2 bytes @ 0xA
   526  00006A                     	ds	2
   527  00006C                     efgtoa@t:
   528                           	callstack 0
   529                           
   530                           ; 2 bytes @ 0xC
   531  00006C                     	ds	2
   532  00006E                     efgtoa@pp:
   533                           	callstack 0
   534                           
   535                           ; 2 bytes @ 0xE
   536  00006E                     	ds	2
   537  000070                     efgtoa@ne:
   538                           	callstack 0
   539                           
   540                           ; 2 bytes @ 0x10
   541  000070                     	ds	2
   542  000072                     efgtoa@m:
   543                           	callstack 0
   544                           
   545                           ; 2 bytes @ 0x12
   546  000072                     	ds	2
   547  000074                     efgtoa@ou:
   548                           	callstack 0
   549                           
   550                           ; 4 bytes @ 0x14
   551  000074                     	ds	4
   552  000078                     efgtoa@d:
   553                           	callstack 0
   554                           
   555                           ; 2 bytes @ 0x18
   556  000078                     	ds	2
   557  00007A                     efgtoa@sign:
   558                           	callstack 0
   559                           
   560                           ; 2 bytes @ 0x1A
   561  00007A                     	ds	2
   562  00007C                     efgtoa@p:
   563                           	callstack 0
   564                           
   565                           ; 2 bytes @ 0x1C
   566  00007C                     	ds	2
   567  00007E                     efgtoa@w:
   568                           	callstack 0
   569                           
   570                           ; 2 bytes @ 0x1E
   571  00007E                     	ds	2
   572  000080                     efgtoa@nmode:
   573                           	callstack 0
   574                           
   575                           ; 1 bytes @ 0x20
   576  000080                     	ds	1
   577  000081                     efgtoa@mode:
   578                           	callstack 0
   579                           
   580                           ; 1 bytes @ 0x21
   581  000081                     	ds	1
   582  000082                     efgtoa@h:
   583                           	callstack 0
   584                           
   585                           ; 4 bytes @ 0x22
   586  000082                     	ds	4
   587  000086                     efgtoa@l:
   588                           	callstack 0
   589                           
   590                           ; 4 bytes @ 0x26
   591  000086                     	ds	4
   592  00008A                     efgtoa@i:
   593                           	callstack 0
   594                           
   595                           ; 2 bytes @ 0x2A
   596  00008A                     	ds	2
   597  00008C                     efgtoa@g:
   598                           	callstack 0
   599                           
   600                           ; 4 bytes @ 0x2C
   601  00008C                     	ds	4
   602  000090                     efgtoa@e:
   603                           	callstack 0
   604                           
   605                           ; 2 bytes @ 0x30
   606  000090                     	ds	2
   607  000092                     efgtoa@n:
   608                           	callstack 0
   609                           
   610                           ; 2 bytes @ 0x32
   611  000092                     	ds	2
   612  000094                     efgtoa@u:
   613                           	callstack 0
   614                           
   615                           ; 4 bytes @ 0x34
   616  000094                     	ds	4
   617  000098                     ??_vfpfcnvrt:
   618                           
   619                           ; 1 bytes @ 0x38
   620  000098                     	ds	4
   621  00009C                     vfpfcnvrt@done:
   622                           	callstack 0
   623                           
   624                           ; 2 bytes @ 0x3C
   625  00009C                     	ds	2
   626  00009E                     _vfpfcnvrt$2149:
   627                           	callstack 0
   628                           
   629                           ; 2 bytes @ 0x3E
   630  00009E                     	ds	2
   631  0000A0                     _vfpfcnvrt$2153:
   632                           	callstack 0
   633                           
   634                           ; 2 bytes @ 0x40
   635  0000A0                     	ds	2
   636  0000A2                     vfpfcnvrt@f:
   637                           	callstack 0
   638                           
   639                           ; 4 bytes @ 0x42
   640  0000A2                     	ds	4
   641  0000A6                     vfpfcnvrt@ct:
   642                           	callstack 0
   643                           
   644                           ; 3 bytes @ 0x46
   645  0000A6                     	ds	3
   646  0000A9                     vfpfcnvrt@c:
   647                           	callstack 0
   648                           
   649                           ; 1 bytes @ 0x49
   650  0000A9                     	ds	1
   651  0000AA                     ?_vfprintf:
   652                           	callstack 0
   653  0000AA                     vfprintf@fp:
   654                           	callstack 0
   655                           
   656                           ; 2 bytes @ 0x4A
   657  0000AA                     	ds	2
   658  0000AC                     vfprintf@fmt:
   659                           	callstack 0
   660                           
   661                           ; 2 bytes @ 0x4C
   662  0000AC                     	ds	2
   663  0000AE                     vfprintf@ap:
   664                           	callstack 0
   665                           
   666                           ; 2 bytes @ 0x4E
   667  0000AE                     	ds	2
   668  0000B0                     vfprintf@cfmt:
   669                           	callstack 0
   670                           
   671                           ; 2 bytes @ 0x50
   672  0000B0                     	ds	2
   673  0000B2                     ?_printf:
   674                           	callstack 0
   675  0000B2                     printf@fmt:
   676                           	callstack 0
   677                           
   678                           ; 2 bytes @ 0x52
   679  0000B2                     	ds	6
   680                           
   681                           	psect	cstackCOMRAM
   682  000001                     __pcstackCOMRAM:
   683                           	callstack 0
   684  000001                     ??_INTERRUPT_InterruptManager:
   685  000001                     
   686                           ; 1 bytes @ 0x0
   687  000001                     	ds	4
   688  000005                     ?_strlen:
   689                           	callstack 0
   690  000005                     ?___fpclassifyf:
   691                           	callstack 0
   692  000005                     ?_isupper:
   693                           	callstack 0
   694  000005                     ?_isdigit:
   695                           	callstack 0
   696  000005                     ?_strncmp:
   697                           	callstack 0
   698  000005                     ?_isspace:
   699                           	callstack 0
   700  000005                     ?___wmul:
   701                           	callstack 0
   702  000005                     ?___awdiv:
   703                           	callstack 0
   704  000005                     ?___awmod:
   705                           	callstack 0
   706  000005                     ?___fldiv:
   707                           	callstack 0
   708  000005                     ?___flneg:
   709                           	callstack 0
   710  000005                     ?___fltol:
   711                           	callstack 0
   712  000005                     ?___xxtofl:
   713                           	callstack 0
   714  000005                     I2C_Open@address:
   715                           	callstack 0
   716  000005                     I2C_Close@returnValue:
   717                           	callstack 0
   718  000005                     I2C_MasterSendTxData@data:
   719                           	callstack 0
   720  000005                     EUSART_Write@txData:
   721                           	callstack 0
   722  000005                     I2C_SetBuffer@buffer:
   723                           	callstack 0
   724  000005                     I2C_SetCallback@cb:
   725                           	callstack 0
   726  000005                     EUSART_SetFramingErrorHandler@interruptHandler:
   727                           	callstack 0
   728  000005                     EUSART_SetOverrunErrorHandler@interruptHandler:
   729                           	callstack 0
   730  000005                     EUSART_SetErrorHandler@interruptHandler:
   731                           	callstack 0
   732  000005                     EUSART_SetTxInterruptHandler@interruptHandler:
   733                           	callstack 0
   734  000005                     EUSART_SetRxInterruptHandler@interruptHandler:
   735                           	callstack 0
   736  000005                     ___wmul@multiplier:
   737                           	callstack 0
   738  000005                     ___awdiv@dividend:
   739                           	callstack 0
   740  000005                     ___awmod@dividend:
   741                           	callstack 0
   742  000005                     isdigit@c:
   743                           	callstack 0
   744  000005                     isspace@c:
   745                           	callstack 0
   746  000005                     isupper@c:
   747                           	callstack 0
   748  000005                     strcpy@dest:
   749                           	callstack 0
   750  000005                     strlen@s:
   751                           	callstack 0
   752  000005                     strncmp@_l:
   753                           	callstack 0
   754  000005                     ___fleq@ff1:
   755                           	callstack 0
   756  000005                     ___flneg@f1:
   757                           	callstack 0
   758  000005                     ___fltol@f1:
   759                           	callstack 0
   760  000005                     ___fldiv@b:
   761                           	callstack 0
   762  000005                     ___xxtofl@val:
   763                           	callstack 0
   764  000005                     ___fpclassifyf@x:
   765                           	callstack 0
   766                           
   767                           ; 4 bytes @ 0x4
   768  000005                     	ds	1
   769  000006                     I2C_Open@returnValue:
   770                           	callstack 0
   771  000006                     putch@txData:
   772                           	callstack 0
   773                           
   774                           ; 1 bytes @ 0x5
   775  000006                     	ds	1
   776  000007                     ??_isupper:
   777  000007                     ??_isdigit:
   778  000007                     ??_isspace:
   779  000007                     I2C_SetBuffer@bufferSize:
   780                           	callstack 0
   781  000007                     I2C_SetCallback@ptr:
   782                           	callstack 0
   783  000007                     ___wmul@multiplicand:
   784                           	callstack 0
   785  000007                     ___awdiv@divisor:
   786                           	callstack 0
   787  000007                     ___awmod@divisor:
   788                           	callstack 0
   789  000007                     fputc@c:
   790                           	callstack 0
   791  000007                     strcpy@src:
   792                           	callstack 0
   793  000007                     strlen@a:
   794                           	callstack 0
   795  000007                     strncmp@_r:
   796                           	callstack 0
   797                           
   798                           ; 2 bytes @ 0x6
   799  000007                     	ds	2
   800  000009                     ??___fpclassifyf:
   801  000009                     ??_strcpy:
   802  000009                     ??___fltol:
   803  000009                     ??___xxtofl:
   804  000009                     I2C_SetCallback@idx:
   805                           	callstack 0
   806  000009                     ___awdiv@counter:
   807                           	callstack 0
   808  000009                     ___awmod@counter:
   809                           	callstack 0
   810  000009                     ___wmul@product:
   811                           	callstack 0
   812  000009                     fputc@fp:
   813                           	callstack 0
   814  000009                     strncmp@n:
   815                           	callstack 0
   816  000009                     ___fleq@ff2:
   817                           	callstack 0
   818  000009                     ___fldiv@a:
   819                           	callstack 0
   820                           
   821                           ; 4 bytes @ 0x8
   822  000009                     	ds	1
   823  00000A                     ___awdiv@sign:
   824                           	callstack 0
   825  00000A                     ___awmod@sign:
   826                           	callstack 0
   827  00000A                     I2C_SetDataCompleteCallback@cb:
   828                           	callstack 0
   829  00000A                     I2C_SetAddressNackCallback@cb:
   830                           	callstack 0
   831                           
   832                           ; 2 bytes @ 0x9
   833  00000A                     	ds	1
   834  00000B                     ??_fputc:
   835  00000B                     ??_strncmp:
   836  00000B                     ?_tolower:
   837                           	callstack 0
   838  00000B                     _isspace$2218:
   839                           	callstack 0
   840  00000B                     ___awdiv@quotient:
   841                           	callstack 0
   842  00000B                     strcpy@s:
   843                           	callstack 0
   844  00000B                     tolower@c:
   845                           	callstack 0
   846                           
   847                           ; 2 bytes @ 0xA
   848  00000B                     	ds	1
   849  00000C                     ?_atoi:
   850                           	callstack 0
   851  00000C                     I2C_SetDataCompleteCallback@ptr:
   852                           	callstack 0
   853  00000C                     I2C_SetAddressNackCallback@ptr:
   854                           	callstack 0
   855  00000C                     atoi@s:
   856                           	callstack 0
   857  00000C                     strncmp@l:
   858                           	callstack 0
   859                           
   860                           ; 2 bytes @ 0xB
   861  00000C                     	ds	1
   862  00000D                     ??___fldiv:
   863  00000D                     ??_tolower:
   864  00000D                     ??___fleq:
   865  00000D                     ___fltol@sign1:
   866                           	callstack 0
   867  00000D                     ___xxtofl@sign:
   868                           	callstack 0
   869  00000D                     ___fpclassifyf@e:
   870                           	callstack 0
   871  00000D                     strcpy@d:
   872                           	callstack 0
   873                           
   874                           ; 2 bytes @ 0xC
   875  00000D                     	ds	1
   876  00000E                     ??_atoi:
   877  00000E                     ___fltol@exp1:
   878                           	callstack 0
   879  00000E                     ___xxtofl@exp:
   880                           	callstack 0
   881  00000E                     rd1RegCompleteHandler@ptr:
   882                           	callstack 0
   883  00000E                     rd2RegCompleteHandler@ptr:
   884                           	callstack 0
   885  00000E                     wr1RegCompleteHandler@ptr:
   886                           	callstack 0
   887  00000E                     wr2RegCompleteHandler@ptr:
   888                           	callstack 0
   889  00000E                     rdBlkRegCompleteHandler@ptr:
   890                           	callstack 0
   891  00000E                     I2C_CallbackReturnReset@funPtr:
   892                           	callstack 0
   893  00000E                     strncmp@r:
   894                           	callstack 0
   895                           
   896                           ; 2 bytes @ 0xD
   897  00000E                     	ds	1
   898  00000F                     ___xxtofl@arg:
   899                           	callstack 0
   900  00000F                     ___fpclassifyf@u:
   901                           	callstack 0
   902                           
   903                           ; 4 bytes @ 0xE
   904  00000F                     	ds	1
   905  000010                     ??_I2C_DO_TX:
   906  000010                     ??_I2C_DO_RX:
   907  000010                     ??_I2C_DO_TX_EMPTY:
   908  000010                     ??_I2C_DO_ADDRESS_NACK:
   909  000010                     fputs@s:
   910                           	callstack 0
   911                           
   912                           ; 2 bytes @ 0xF
   913  000010                     	ds	1
   914  000011                     _tolower$2276:
   915                           	callstack 0
   916  000011                     ___fldiv@rem:
   917                           	callstack 0
   918                           
   919                           ; 4 bytes @ 0x10
   920  000011                     	ds	1
   921  000012                     ??_I2C_MasterFsm:
   922  000012                     atoi@neg:
   923                           	callstack 0
   924  000012                     fputs@fp:
   925                           	callstack 0
   926                           
   927                           ; 2 bytes @ 0x11
   928  000012                     	ds	1
   929  000013                     ?___flmul:
   930                           	callstack 0
   931  000013                     ___flmul@b:
   932                           	callstack 0
   933                           
   934                           ; 4 bytes @ 0x12
   935  000013                     	ds	1
   936  000014                     I2C_MasterOperation@read:
   937                           	callstack 0
   938  000014                     fputs@c:
   939                           	callstack 0
   940  000014                     _atoi$2187:
   941                           	callstack 0
   942                           
   943                           ; 2 bytes @ 0x13
   944  000014                     	ds	1
   945  000015                     I2C_MasterOperation@returnValue:
   946                           	callstack 0
   947  000015                     ___fldiv@sign:
   948                           	callstack 0
   949  000015                     fputs@i:
   950                           	callstack 0
   951                           
   952                           ; 2 bytes @ 0x14
   953  000015                     	ds	1
   954  000016                     I2C_WriteNBytes@data:
   955                           	callstack 0
   956  000016                     I2C_ReadNBytes@data:
   957                           	callstack 0
   958  000016                     ___fldiv@new_exp:
   959                           	callstack 0
   960  000016                     _atoi$2189:
   961                           	callstack 0
   962                           
   963                           ; 2 bytes @ 0x15
   964  000016                     	ds	1
   965  000017                     ?_pad:
   966                           	callstack 0
   967  000017                     pad@fp:
   968                           	callstack 0
   969  000017                     ___flmul@a:
   970                           	callstack 0
   971                           
   972                           ; 4 bytes @ 0x16
   973  000017                     	ds	1
   974  000018                     _atoi$2188:
   975                           	callstack 0
   976  000018                     I2C_WriteNBytes@len:
   977                           	callstack 0
   978  000018                     I2C_ReadNBytes@len:
   979                           	callstack 0
   980  000018                     ___fldiv@grs:
   981                           	callstack 0
   982                           
   983                           ; 4 bytes @ 0x17
   984  000018                     	ds	1
   985  000019                     pad@buf:
   986                           	callstack 0
   987  000019                     atoi@n:
   988                           	callstack 0
   989                           
   990                           ; 2 bytes @ 0x18
   991  000019                     	ds	1
   992  00001A                     I2C_WriteNBytes@address:
   993                           	callstack 0
   994  00001A                     I2C_ReadNBytes@address:
   995                           	callstack 0
   996                           
   997                           ; 1 bytes @ 0x19
   998  00001A                     	ds	1
   999  00001B                     ??_TLV493_Init:
  1000  00001B                     ??___flmul:
  1001  00001B                     pad@p:
  1002                           	callstack 0
  1003                           
  1004                           ; 2 bytes @ 0x1A
  1005  00001B                     	ds	1
  1006  00001C                     ___fldiv@bexp:
  1007                           	callstack 0
  1008                           
  1009                           ; 1 bytes @ 0x1B
  1010  00001C                     	ds	1
  1011  00001D                     ??_pad:
  1012  00001D                     _TLV493_Init$1548:
  1013                           	callstack 0
  1014  00001D                     ___fldiv@aexp:
  1015                           	callstack 0
  1016                           
  1017                           ; 1 bytes @ 0x1C
  1018  00001D                     	ds	1
  1019  00001E                     ?_floorf:
  1020                           	callstack 0
  1021  00001E                     _TLV493_Init$1549:
  1022                           	callstack 0
  1023  00001E                     pad@i:
  1024                           	callstack 0
  1025  00001E                     floorf@x:
  1026                           	callstack 0
  1027                           
  1028                           ; 4 bytes @ 0x1D
  1029  00001E                     	ds	1
  1030  00001F                     _TLV493_Init$1550:
  1031                           	callstack 0
  1032  00001F                     ___flmul@sign:
  1033                           	callstack 0
  1034                           
  1035                           ; 1 bytes @ 0x1E
  1036  00001F                     	ds	1
  1037  000020                     _TLV493_Init$1551:
  1038                           	callstack 0
  1039  000020                     ___flmul@aexp:
  1040                           	callstack 0
  1041  000020                     pad@w:
  1042                           	callstack 0
  1043                           
  1044                           ; 2 bytes @ 0x1F
  1045  000020                     	ds	1
  1046  000021                     ___flmul@grs:
  1047                           	callstack 0
  1048                           
  1049                           ; 4 bytes @ 0x20
  1050  000021                     	ds	1
  1051  000022                     ??_floorf:
  1052                           
  1053                           ; 1 bytes @ 0x21
  1054  000022                     	ds	3
  1055  000025                     ___flmul@bexp:
  1056                           	callstack 0
  1057                           
  1058                           ; 1 bytes @ 0x24
  1059  000025                     	ds	1
  1060  000026                     ___flmul@prod:
  1061                           	callstack 0
  1062                           
  1063                           ; 4 bytes @ 0x25
  1064  000026                     	ds	2
  1065  000028                     floorf@m:
  1066                           	callstack 0
  1067                           
  1068                           ; 4 bytes @ 0x27
  1069  000028                     	ds	2
  1070  00002A                     ___flmul@temp:
  1071                           	callstack 0
  1072                           
  1073                           ; 2 bytes @ 0x29
  1074  00002A                     	ds	2
  1075  00002C                     ?_TLV493_X_GetValue:
  1076                           	callstack 0
  1077  00002C                     ?_TLV493_Y_GetValue:
  1078                           	callstack 0
  1079  00002C                     ?_TLV493_Z_GetValue:
  1080                           	callstack 0
  1081  00002C                     ?___fladd:
  1082                           	callstack 0
  1083  00002C                     floorf@e:
  1084                           	callstack 0
  1085  00002C                     ___flge@ff1:
  1086                           	callstack 0
  1087  00002C                     ___fladd@b:
  1088                           	callstack 0
  1089                           
  1090                           ; 4 bytes @ 0x2B
  1091  00002C                     	ds	2
  1092  00002E                     floorf@u:
  1093                           	callstack 0
  1094                           
  1095                           ; 4 bytes @ 0x2D
  1096  00002E                     	ds	2
  1097  000030                     ??_TLV493_X_GetValue:
  1098  000030                     ??_TLV493_Y_GetValue:
  1099  000030                     ??_TLV493_Z_GetValue:
  1100  000030                     ___flge@ff2:
  1101                           	callstack 0
  1102  000030                     ___fladd@a:
  1103                           	callstack 0
  1104                           
  1105                           ; 4 bytes @ 0x2F
  1106  000030                     	ds	2
  1107  000032                     TLV493_X_GetValue@XDataAnz:
  1108                           	callstack 0
  1109  000032                     TLV493_Y_GetValue@YDataAnz:
  1110                           	callstack 0
  1111  000032                     TLV493_Z_GetValue@ZDataAnz:
  1112                           	callstack 0
  1113                           
  1114                           ; 4 bytes @ 0x31
  1115  000032                     	ds	2
  1116  000034                     ??___fladd:
  1117  000034                     ??___flge:
  1118                           
  1119                           ; 1 bytes @ 0x33
  1120  000034                     	ds	2
  1121  000036                     TLV493_X_GetValue@x_axis:
  1122                           	callstack 0
  1123  000036                     TLV493_Y_GetValue@y_axis:
  1124                           	callstack 0
  1125  000036                     TLV493_Z_GetValue@z_axis:
  1126                           	callstack 0
  1127                           
  1128                           ; 2 bytes @ 0x35
  1129  000036                     	ds	2
  1130  000038                     ___fladd@signs:
  1131                           	callstack 0
  1132                           
  1133                           ; 1 bytes @ 0x37
  1134  000038                     	ds	1
  1135  000039                     ___fladd@aexp:
  1136                           	callstack 0
  1137                           
  1138                           ; 1 bytes @ 0x38
  1139  000039                     	ds	1
  1140  00003A                     ___fladd@bexp:
  1141                           	callstack 0
  1142                           
  1143                           ; 1 bytes @ 0x39
  1144  00003A                     	ds	1
  1145  00003B                     ___fladd@grs:
  1146                           	callstack 0
  1147                           
  1148                           ; 1 bytes @ 0x3A
  1149  00003B                     	ds	1
  1150  00003C                     ?_TLV493_Temp_GetValue:
  1151                           	callstack 0
  1152  00003C                     ?___flsub:
  1153                           	callstack 0
  1154  00003C                     ___flsub@b:
  1155                           	callstack 0
  1156                           
  1157                           ; 4 bytes @ 0x3B
  1158  00003C                     	ds	4
  1159  000040                     ??_TLV493_Temp_GetValue:
  1160  000040                     ___flsub@a:
  1161                           	callstack 0
  1162                           
  1163                           ; 4 bytes @ 0x3F
  1164  000040                     	ds	2
  1165  000042                     TLV493_Temp_GetValue@TempDataAnz:
  1166                           	callstack 0
  1167                           
  1168                           ; 4 bytes @ 0x41
  1169  000042                     	ds	2
  1170  000044                     ?_efgtoa:
  1171                           	callstack 0
  1172  000044                     efgtoa@fp:
  1173                           	callstack 0
  1174                           
  1175                           ; 2 bytes @ 0x43
  1176  000044                     	ds	2
  1177  000046                     TLV493_Temp_GetValue@temp:
  1178                           	callstack 0
  1179  000046                     efgtoa@f:
  1180                           	callstack 0
  1181                           
  1182                           ; 4 bytes @ 0x45
  1183  000046                     	ds	4
  1184  00004A                     efgtoa@c:
  1185                           	callstack 0
  1186                           
  1187                           ; 1 bytes @ 0x49
  1188  00004A                     	ds	1
  1189  00004B                     ??_efgtoa:
  1190                           
  1191                           ; 1 bytes @ 0x4A
  1192  00004B                     	ds	5
  1193  000050                     ?_vfpfcnvrt:
  1194                           	callstack 0
  1195  000050                     vfpfcnvrt@fp:
  1196                           	callstack 0
  1197                           
  1198                           ; 2 bytes @ 0x4F
  1199  000050                     	ds	2
  1200  000052                     vfpfcnvrt@fmt:
  1201                           	callstack 0
  1202                           
  1203                           ; 2 bytes @ 0x51
  1204  000052                     	ds	2
  1205  000054                     vfpfcnvrt@ap:
  1206                           	callstack 0
  1207                           
  1208                           ; 2 bytes @ 0x53
  1209  000054                     	ds	2
  1210  000056                     
  1211                           ; 1 bytes @ 0x55
  1212 ;;
  1213 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1214 ;;
  1215 ;; *************** function _main *****************
  1216 ;; Defined at:
  1217 ;;		line 56 in file "main.c"
  1218 ;; Parameters:    Size  Location     Type
  1219 ;;		None
  1220 ;; Auto vars:     Size  Location     Type
  1221 ;;		None
  1222 ;; Return value:  Size  Location     Type
  1223 ;;                  1    wreg      void 
  1224 ;; Registers used:
  1225 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
  1226 ;; Tracked objects:
  1227 ;;		On entry : 0/0
  1228 ;;		On exit  : 0/0
  1229 ;;		Unchanged: 0/0
  1230 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1231 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1232 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1233 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1234 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1235 ;;Total ram usage:        2 bytes
  1236 ;; Hardware stack levels required when called: 15
  1237 ;; This function calls:
  1238 ;;		_SYSTEM_Initialize
  1239 ;;		_TLV493_Init
  1240 ;;		_TLV493_Temp_GetValue
  1241 ;;		_TLV493_X_GetValue
  1242 ;;		_TLV493_Y_GetValue
  1243 ;;		_TLV493_Z_GetValue
  1244 ;;		_printf
  1245 ;; This function is called by:
  1246 ;;		Startup code after reset
  1247 ;; This function uses a non-reentrant model
  1248 ;;
  1249                           
  1250                           	psect	text0
  1251  003462                     __ptext0:
  1252                           	callstack 0
  1253  003462                     _main:
  1254                           	callstack 16
  1255  003462                     
  1256                           ;main.c: 58:     SYSTEM_Initialize();
  1257  003462  EC62  F026         	call	_SYSTEM_Initialize	;wreg free
  1258  003466                     
  1259                           ;main.c: 59:     TLV493_Init();
  1260  003466  EC23  F01D         	call	_TLV493_Init	;wreg free
  1261  00346A                     
  1262                           ;main.c: 60:     _delay((unsigned long)((500)*(8000000/4000.0)));
  1263  00346A  0E06               	movlw	6
  1264  00346C  0101               	movlb	1	; () banked
  1265  00346E  6F87               	movwf	(??_main+1)& (0+255),b
  1266  003470  0E13               	movlw	19
  1267  003472  6F86               	movwf	??_main& (0+255),b
  1268  003474  0EAD               	movlw	173
  1269  003476                     u8487:
  1270  003476  2EE8               	decfsz	wreg,f,c
  1271  003478  D7FE               	bra	u8487
  1272  00347A  2F86               	decfsz	??_main& (0+255),f,b
  1273  00347C  D7FC               	bra	u8487
  1274  00347E  2F87               	decfsz	(??_main+1)& (0+255),f,b
  1275  003480  D7FA               	bra	u8487
  1276  003482  F000 F000          	nop2	
  1277  003486                     
  1278                           ;main.c: 67:     (INTCONbits.GIE = 1);
  1279  003486  8EF2               	bsf	242,7,c	;volatile
  1280  003488                     
  1281                           ;main.c: 73:     (INTCONbits.PEIE = 1);
  1282  003488  8CF2               	bsf	242,6,c	;volatile
  1283  00348A                     l7809:
  1284                           
  1285                           ;main.c: 79:         XDataAnz = TLV493_X_GetValue();
  1286  00348A  ECB8  F01E         	call	_TLV493_X_GetValue	;wreg free
  1287  00348E  C02C  F0F0         	movff	?_TLV493_X_GetValue,_XDataAnz
  1288  003492  C02D  F0F1         	movff	?_TLV493_X_GetValue+1,_XDataAnz+1
  1289  003496  C02E  F0F2         	movff	?_TLV493_X_GetValue+2,_XDataAnz+2
  1290  00349A  C02F  F0F3         	movff	?_TLV493_X_GetValue+3,_XDataAnz+3
  1291  00349E                     
  1292                           ;main.c: 80:         YDataAnz = TLV493_Y_GetValue();
  1293  00349E  EC77  F01F         	call	_TLV493_Y_GetValue	;wreg free
  1294  0034A2  C02C  F0EC         	movff	?_TLV493_Y_GetValue,_YDataAnz
  1295  0034A6  C02D  F0ED         	movff	?_TLV493_Y_GetValue+1,_YDataAnz+1
  1296  0034AA  C02E  F0EE         	movff	?_TLV493_Y_GetValue+2,_YDataAnz+2
  1297  0034AE  C02F  F0EF         	movff	?_TLV493_Y_GetValue+3,_YDataAnz+3
  1298  0034B2                     
  1299                           ;main.c: 81:         ZDataAnz = TLV493_Z_GetValue();
  1300  0034B2  EC19  F01F         	call	_TLV493_Z_GetValue	;wreg free
  1301  0034B6  C02C  F0E8         	movff	?_TLV493_Z_GetValue,_ZDataAnz
  1302  0034BA  C02D  F0E9         	movff	?_TLV493_Z_GetValue+1,_ZDataAnz+1
  1303  0034BE  C02E  F0EA         	movff	?_TLV493_Z_GetValue+2,_ZDataAnz+2
  1304  0034C2  C02F  F0EB         	movff	?_TLV493_Z_GetValue+3,_ZDataAnz+3
  1305  0034C6                     
  1306                           ;main.c: 82:         TempDataAnz = TLV493_Temp_GetValue();
  1307  0034C6  EC3F  F01C         	call	_TLV493_Temp_GetValue	;wreg free
  1308  0034CA  C03C  F0E4         	movff	?_TLV493_Temp_GetValue,_TempDataAnz
  1309  0034CE  C03D  F0E5         	movff	?_TLV493_Temp_GetValue+1,_TempDataAnz+1
  1310  0034D2  C03E  F0E6         	movff	?_TLV493_Temp_GetValue+2,_TempDataAnz+2
  1311  0034D6  C03F  F0E7         	movff	?_TLV493_Temp_GetValue+3,_TempDataAnz+3
  1312  0034DA                     
  1313                           ;main.c: 83:         printf("X = %0.4fmT   ", XDataAnz);
  1314  0034DA  0E31               	movlw	low STR_1
  1315  0034DC  0100               	movlb	0	; () banked
  1316  0034DE  6FB2               	movwf	printf@fmt& (0+255),b
  1317  0034E0  0E10               	movlw	high STR_1
  1318  0034E2  6FB3               	movwf	(printf@fmt+1)& (0+255),b
  1319  0034E4  C0F0  F0B4         	movff	_XDataAnz,?_printf+2
  1320  0034E8  C0F1  F0B5         	movff	_XDataAnz+1,?_printf+3
  1321  0034EC  C0F2  F0B6         	movff	_XDataAnz+2,?_printf+4
  1322  0034F0  C0F3  F0B7         	movff	_XDataAnz+3,?_printf+5
  1323  0034F4  ECCF  F025         	call	_printf	;wreg free
  1324  0034F8                     
  1325                           ;main.c: 84:         printf("Y = %0.4fmT   ", YDataAnz);
  1326  0034F8  0E40               	movlw	low STR_2
  1327  0034FA  0100               	movlb	0	; () banked
  1328  0034FC  6FB2               	movwf	printf@fmt& (0+255),b
  1329  0034FE  0E10               	movlw	high STR_2
  1330  003500  6FB3               	movwf	(printf@fmt+1)& (0+255),b
  1331  003502  C0EC  F0B4         	movff	_YDataAnz,?_printf+2
  1332  003506  C0ED  F0B5         	movff	_YDataAnz+1,?_printf+3
  1333  00350A  C0EE  F0B6         	movff	_YDataAnz+2,?_printf+4
  1334  00350E  C0EF  F0B7         	movff	_YDataAnz+3,?_printf+5
  1335  003512  ECCF  F025         	call	_printf	;wreg free
  1336  003516                     
  1337                           ;main.c: 85:         printf("Z = %0.4fmT   ",ZDataAnz);
  1338  003516  0E4F               	movlw	low STR_3
  1339  003518  0100               	movlb	0	; () banked
  1340  00351A  6FB2               	movwf	printf@fmt& (0+255),b
  1341  00351C  0E10               	movlw	high STR_3
  1342  00351E  6FB3               	movwf	(printf@fmt+1)& (0+255),b
  1343  003520  C0E8  F0B4         	movff	_ZDataAnz,?_printf+2
  1344  003524  C0E9  F0B5         	movff	_ZDataAnz+1,?_printf+3
  1345  003528  C0EA  F0B6         	movff	_ZDataAnz+2,?_printf+4
  1346  00352C  C0EB  F0B7         	movff	_ZDataAnz+3,?_printf+5
  1347  003530  ECCF  F025         	call	_printf	;wreg free
  1348  003534                     
  1349                           ;main.c: 86:         printf("Temp = %0.2fC\r\n",TempDataAnz);
  1350  003534  0E21               	movlw	low STR_4
  1351  003536  0100               	movlb	0	; () banked
  1352  003538  6FB2               	movwf	printf@fmt& (0+255),b
  1353  00353A  0E10               	movlw	high STR_4
  1354  00353C  6FB3               	movwf	(printf@fmt+1)& (0+255),b
  1355  00353E  C0E4  F0B4         	movff	_TempDataAnz,?_printf+2
  1356  003542  C0E5  F0B5         	movff	_TempDataAnz+1,?_printf+3
  1357  003546  C0E6  F0B6         	movff	_TempDataAnz+2,?_printf+4
  1358  00354A  C0E7  F0B7         	movff	_TempDataAnz+3,?_printf+5
  1359  00354E  ECCF  F025         	call	_printf	;wreg free
  1360  003552                     
  1361                           ;main.c: 87:         _delay((unsigned long)((500)*(8000000/4000.0)));
  1362  003552  0E06               	movlw	6
  1363  003554  0101               	movlb	1	; () banked
  1364  003556  6F87               	movwf	(??_main+1)& (0+255),b
  1365  003558  0E13               	movlw	19
  1366  00355A  6F86               	movwf	??_main& (0+255),b
  1367  00355C  0EAD               	movlw	173
  1368  00355E                     u8497:
  1369  00355E  2EE8               	decfsz	wreg,f,c
  1370  003560  D7FE               	bra	u8497
  1371  003562  2F86               	decfsz	??_main& (0+255),f,b
  1372  003564  D7FC               	bra	u8497
  1373  003566  2F87               	decfsz	(??_main+1)& (0+255),f,b
  1374  003568  D7FA               	bra	u8497
  1375  00356A  F000 F000          	nop2	
  1376  00356E  EF45  F01A         	goto	l7809
  1377  003572  EF58  F000         	goto	start
  1378  003576                     __end_of_main:
  1379                           	callstack 0
  1380                           
  1381 ;; *************** function _printf *****************
  1382 ;; Defined at:
  1383 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\printf.c"
  1384 ;; Parameters:    Size  Location     Type
  1385 ;;  fmt             2   82[BANK0 ] PTR const unsigned char 
  1386 ;;		 -> STR_4(16), STR_3(15), STR_2(15), STR_1(15), 
  1387 ;; Auto vars:     Size  Location     Type
  1388 ;;  ap              2    0[BANK1 ] PTR void [1]
  1389 ;;		 -> ?_printf(2), 
  1390 ;;  ret             2    0        int 
  1391 ;; Return value:  Size  Location     Type
  1392 ;;                  2   82[BANK0 ] int 
  1393 ;; Registers used:
  1394 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1395 ;; Tracked objects:
  1396 ;;		On entry : 0/0
  1397 ;;		On exit  : 0/0
  1398 ;;		Unchanged: 0/0
  1399 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1400 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1401 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1402 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1403 ;;      Totals:         0       6       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1404 ;;Total ram usage:        8 bytes
  1405 ;; Hardware stack levels used: 1
  1406 ;; Hardware stack levels required when called: 12
  1407 ;; This function calls:
  1408 ;;		_vfprintf
  1409 ;; This function is called by:
  1410 ;;		_main
  1411 ;; This function uses a non-reentrant model
  1412 ;;
  1413                           
  1414                           	psect	text1
  1415  004B9E                     __ptext1:
  1416                           	callstack 0
  1417  004B9E                     _printf:
  1418                           	callstack 18
  1419  004B9E  0EB4               	movlw	low (?_printf+2)
  1420  004BA0  0101               	movlb	1	; () banked
  1421  004BA2  6F84               	movwf	printf@ap& (0+255),b
  1422  004BA4  0E00               	movlw	high (?_printf+2)
  1423  004BA6  6F85               	movwf	(printf@ap+1)& (0+255),b
  1424  004BA8                     
  1425                           ; BSR set to: 1
  1426  004BA8  0E00               	movlw	0
  1427  004BAA  0100               	movlb	0	; () banked
  1428  004BAC  6FAA               	movwf	vfprintf@fp& (0+255),b
  1429  004BAE  0E00               	movlw	0
  1430  004BB0  6FAB               	movwf	(vfprintf@fp+1)& (0+255),b
  1431  004BB2  C0B2  F0AC         	movff	printf@fmt,vfprintf@fmt
  1432  004BB6  C0B3  F0AD         	movff	printf@fmt+1,vfprintf@fmt+1
  1433  004BBA  0E84               	movlw	low printf@ap
  1434  004BBC  6FAE               	movwf	vfprintf@ap& (0+255),b
  1435  004BBE  0E01               	movlw	high printf@ap
  1436  004BC0  6FAF               	movwf	(vfprintf@ap+1)& (0+255),b
  1437  004BC2  ECE6  F022         	call	_vfprintf	;wreg free
  1438  004BC6  0012               	return		;funcret
  1439  004BC8                     __end_of_printf:
  1440                           	callstack 0
  1441                           
  1442 ;; *************** function _vfprintf *****************
  1443 ;; Defined at:
  1444 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  1445 ;; Parameters:    Size  Location     Type
  1446 ;;  fp              2   74[BANK0 ] PTR struct _IO_FILE
  1447 ;;		 -> NULL(0), 
  1448 ;;  fmt             2   76[BANK0 ] PTR const unsigned char 
  1449 ;;		 -> STR_4(16), STR_3(15), STR_2(15), STR_1(15), 
  1450 ;;  ap              2   78[BANK0 ] PTR PTR void 
  1451 ;;		 -> printf@ap(2), 
  1452 ;; Auto vars:     Size  Location     Type
  1453 ;;  cfmt            2   80[BANK0 ] PTR unsigned char 
  1454 ;;		 -> STR_4(16), STR_3(15), STR_2(15), STR_1(15), 
  1455 ;; Return value:  Size  Location     Type
  1456 ;;                  2   74[BANK0 ] int 
  1457 ;; Registers used:
  1458 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1459 ;; Tracked objects:
  1460 ;;		On entry : 0/0
  1461 ;;		On exit  : 0/0
  1462 ;;		Unchanged: 0/0
  1463 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1464 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1465 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1466 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1467 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1468 ;;Total ram usage:        8 bytes
  1469 ;; Hardware stack levels used: 1
  1470 ;; Hardware stack levels required when called: 11
  1471 ;; This function calls:
  1472 ;;		_vfpfcnvrt
  1473 ;; This function is called by:
  1474 ;;		_printf
  1475 ;; This function uses a non-reentrant model
  1476 ;;
  1477                           
  1478                           	psect	text2
  1479  0045CC                     __ptext2:
  1480                           	callstack 0
  1481  0045CC                     _vfprintf:
  1482                           	callstack 18
  1483  0045CC                     
  1484                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  1485  0045CC  C0AC  F0B0         	movff	vfprintf@fmt,vfprintf@cfmt
  1486  0045D0  C0AD  F0B1         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  1487  0045D4                     
  1488                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  1489  0045D4  0E00               	movlw	0
  1490  0045D6  0100               	movlb	0	; () banked
  1491  0045D8  6FF5               	movwf	(_nout+1)& (0+255),b
  1492  0045DA  0E00               	movlw	0
  1493  0045DC  6FF4               	movwf	_nout& (0+255),b
  1494                           
  1495                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  1496  0045DE  EF04  F023         	goto	l7717
  1497  0045E2                     l7715:
  1498                           
  1499                           ; BSR set to: 0
  1500                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  1501  0045E2  C0AA  F050         	movff	vfprintf@fp,vfpfcnvrt@fp
  1502  0045E6  C0AB  F051         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  1503  0045EA  0EB0               	movlw	low vfprintf@cfmt
  1504  0045EC  6E52               	movwf	vfpfcnvrt@fmt^0,c
  1505  0045EE  0E00               	movlw	high vfprintf@cfmt
  1506  0045F0  6E53               	movwf	(vfpfcnvrt@fmt+1)^0,c
  1507  0045F2  C0AE  F054         	movff	vfprintf@ap,vfpfcnvrt@ap
  1508  0045F6  C0AF  F055         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  1509  0045FA  EC8C  F00E         	call	_vfpfcnvrt	;wreg free
  1510  0045FE  5050               	movf	?_vfpfcnvrt^0,w,c
  1511  004600  0100               	movlb	0	; () banked
  1512  004602  27F4               	addwf	_nout& (0+255),f,b
  1513  004604  5051               	movf	(?_vfpfcnvrt+1)^0,w,c
  1514  004606  23F5               	addwfc	(_nout+1)& (0+255),f,b
  1515  004608                     l7717:
  1516                           
  1517                           ; BSR set to: 0
  1518                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  1519  004608  C0B0  FFF6         	movff	vfprintf@cfmt,tblptrl
  1520  00460C  C0B1  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  1521  004610                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  1522  004610  6AF8               	clrf	tblptru,c
  1523  004612                     	endif
  1524  004612                     	if	0	;tblptru may be non-zero
  1525  004612                     	endif
  1526  004612  0008               	tblrd		*
  1527  004614  50F5               	movf	tablat,w,c
  1528  004616  0900               	iorlw	0
  1529  004618  A4D8               	btfss	status,2,c
  1530  00461A  EF11  F023         	goto	u8431
  1531  00461E  EF13  F023         	goto	u8430
  1532  004622                     u8431:
  1533  004622  EFF1  F022         	goto	l7715
  1534  004626                     u8430:
  1535  004626                     
  1536                           ; BSR set to: 0
  1537                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  1538  004626  C0F4  F0AA         	movff	_nout,?_vfprintf
  1539  00462A  C0F5  F0AB         	movff	_nout+1,?_vfprintf+1
  1540  00462E                     
  1541                           ; BSR set to: 0
  1542  00462E  0012               	return		;funcret
  1543  004630                     __end_of_vfprintf:
  1544                           	callstack 0
  1545                           
  1546 ;; *************** function _vfpfcnvrt *****************
  1547 ;; Defined at:
  1548 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  1549 ;; Parameters:    Size  Location     Type
  1550 ;;  fp              2   79[COMRAM] PTR struct _IO_FILE
  1551 ;;		 -> NULL(0), 
  1552 ;;  fmt             2   81[COMRAM] PTR PTR unsigned char 
  1553 ;;		 -> vfprintf@cfmt(2), 
  1554 ;;  ap              2   83[COMRAM] PTR PTR void 
  1555 ;;		 -> printf@ap(2), 
  1556 ;; Auto vars:     Size  Location     Type
  1557 ;;  llu             8    0        unsigned long long 
  1558 ;;  ll              8    0        long long 
  1559 ;;  f               4   66[BANK0 ] long long 
  1560 ;;  ct              3   70[BANK0 ] unsigned char [3]
  1561 ;;  vp              3    0        PTR void 
  1562 ;;  cp              3    0        PTR unsigned char 
  1563 ;;  done            2   60[BANK0 ] int 
  1564 ;;  i               2    0        int 
  1565 ;;  c               1   73[BANK0 ] unsigned char 
  1566 ;; Return value:  Size  Location     Type
  1567 ;;                  2   79[COMRAM] int 
  1568 ;; Registers used:
  1569 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1570 ;; Tracked objects:
  1571 ;;		On entry : 0/0
  1572 ;;		On exit  : 0/0
  1573 ;;		Unchanged: 0/0
  1574 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1575 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1576 ;;      Locals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1577 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1578 ;;      Totals:         6      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1579 ;;Total ram usage:       24 bytes
  1580 ;; Hardware stack levels used: 1
  1581 ;; Hardware stack levels required when called: 10
  1582 ;; This function calls:
  1583 ;;		_atoi
  1584 ;;		_efgtoa
  1585 ;;		_fputc
  1586 ;;		_isdigit
  1587 ;;		_isupper
  1588 ;;		_strncmp
  1589 ;;		_tolower
  1590 ;; This function is called by:
  1591 ;;		_vfprintf
  1592 ;; This function uses a non-reentrant model
  1593 ;;
  1594                           
  1595                           	psect	text3
  1596  001D18                     __ptext3:
  1597                           	callstack 0
  1598  001D18                     _vfpfcnvrt:
  1599                           	callstack 18
  1600  001D18                     
  1601                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.32\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          2\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  1602  001D18  C052  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1603  001D1C  C053  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1604  001D20  CFDE FFF6          	movff	postinc2,tblptrl
  1605  001D24  CFDD FFF7          	movff	postdec2,tblptrh
  1606  001D28                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  1607  001D28  6AF8               	clrf	tblptru,c
  1608  001D2A                     	endif
  1609  001D2A                     	if	0	;tblptru may be non-zero
  1610  001D2A                     	endif
  1611  001D2A  0008               	tblrd		*
  1612  001D2C  50F5               	movf	tablat,w,c
  1613  001D2E  0A25               	xorlw	37
  1614  001D30  A4D8               	btfss	status,2,c
  1615  001D32  EF9D  F00E         	goto	u8271
  1616  001D36  EF9F  F00E         	goto	u8270
  1617  001D3A                     u8271:
  1618  001D3A  EF22  F011         	goto	l7697
  1619  001D3E                     u8270:
  1620  001D3E                     
  1621                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  1622  001D3E  C052  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1623  001D42  C053  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1624  001D46  2ADE               	incf	postinc2,f,c
  1625  001D48  0E00               	movlw	0
  1626  001D4A  22DD               	addwfc	postdec2,f,c
  1627  001D4C                     
  1628                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  1629  001D4C  0E00               	movlw	0
  1630  001D4E  0100               	movlb	0	; () banked
  1631  001D50  6FF7               	movwf	(_width+1)& (0+255),b
  1632  001D52  0E00               	movlw	0
  1633  001D54  6FF6               	movwf	_width& (0+255),b
  1634  001D56  C0F6  F0FA         	movff	_width,_flags
  1635  001D5A  C0F7  F0FB         	movff	_width+1,_flags+1
  1636  001D5E                     
  1637                           ; BSR set to: 0
  1638                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  1639  001D5E  69F8               	setf	_prec& (0+255),b
  1640  001D60  69F9               	setf	(_prec+1)& (0+255),b
  1641  001D62                     
  1642                           ; BSR set to: 0
  1643                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 710:         done
      +                           = 0;
  1644  001D62  0E00               	movlw	0
  1645  001D64  6F9D               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  1646  001D66  0E00               	movlw	0
  1647  001D68  6F9C               	movwf	vfpfcnvrt@done& (0+255),b
  1648                           
  1649                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 711:         whil
      +                          e (!done) {
  1650  001D6A  EFFE  F00E         	goto	l7619
  1651  001D6E                     l7593:
  1652                           
  1653                           ; BSR set to: 0
  1654                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 714:             
      +                                  flags |= (1 << 0);
  1655  001D6E  81FA               	bsf	_flags& (0+255),0,b
  1656  001D70                     l7595:
  1657                           
  1658                           ; BSR set to: 0
  1659                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 715:             
      +                                  ++*fmt;
  1660  001D70  C052  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1661  001D74  C053  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1662  001D78  2ADE               	incf	postinc2,f,c
  1663  001D7A  0E00               	movlw	0
  1664  001D7C  22DD               	addwfc	postdec2,f,c
  1665                           
  1666                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 716:             
      +                                  break;
  1667  001D7E  EFFE  F00E         	goto	l7619
  1668  001D82                     l7597:
  1669                           
  1670                           ; BSR set to: 0
  1671                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 718:             
      +                                  flags |= (1 << 1);
  1672  001D82  83FA               	bsf	_flags& (0+255),1,b
  1673  001D84  EFB8  F00E         	goto	l7595
  1674  001D88                     l7601:
  1675                           
  1676                           ; BSR set to: 0
  1677                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 722:             
      +                                  flags |= (1 << 2);
  1678  001D88  85FA               	bsf	_flags& (0+255),2,b
  1679  001D8A  EFB8  F00E         	goto	l7595
  1680  001D8E                     l7605:
  1681                           
  1682                           ; BSR set to: 0
  1683                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 726:             
      +                                  flags |= (1 << 3);
  1684  001D8E  87FA               	bsf	_flags& (0+255),3,b
  1685  001D90  EFB8  F00E         	goto	l7595
  1686  001D94                     l7609:
  1687                           
  1688                           ; BSR set to: 0
  1689                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 730:             
      +                                  flags |= (1 << 4);
  1690  001D94  89FA               	bsf	_flags& (0+255),4,b
  1691  001D96  EFB8  F00E         	goto	l7595
  1692  001D9A                     l7613:
  1693                           
  1694                           ; BSR set to: 0
  1695                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 734:             
      +                                  done = 1;
  1696  001D9A  0E00               	movlw	0
  1697  001D9C  6F9D               	movwf	(vfpfcnvrt@done+1)& (0+255),b
  1698  001D9E  0E01               	movlw	1
  1699  001DA0  6F9C               	movwf	vfpfcnvrt@done& (0+255),b
  1700                           
  1701                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 735:             
      +                                  break;
  1702  001DA2  EFFE  F00E         	goto	l7619
  1703  001DA6                     l7617:
  1704                           
  1705                           ; BSR set to: 0
  1706  001DA6  C052  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1707  001DAA  C053  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1708  001DAE  CFDE FFF6          	movff	postinc2,tblptrl
  1709  001DB2  CFDD FFF7          	movff	postdec2,tblptrh
  1710  001DB6                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  1711  001DB6  6AF8               	clrf	tblptru,c
  1712  001DB8                     	endif
  1713  001DB8                     	if	0	;tblptru may be non-zero
  1714  001DB8                     	endif
  1715  001DB8  0008               	tblrd		*
  1716  001DBA  50F5               	movf	tablat,w,c
  1717  001DBC  6F98               	movwf	??_vfpfcnvrt& (0+255),b
  1718  001DBE  6B99               	clrf	(??_vfpfcnvrt+1)& (0+255),b
  1719                           
  1720                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1721                           ; Switch size 1, requested type "simple"
  1722                           ; Number of cases is 1, Range of values is 0 to 0
  1723                           ; switch strategies available:
  1724                           ; Name         Instructions Cycles
  1725                           ; simple_byte            4     3 (average)
  1726                           ;	Chosen strategy is simple_byte
  1727  001DC0  5199               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  1728  001DC2  0A00               	xorlw	0	; case 0
  1729  001DC4  B4D8               	btfsc	status,2,c
  1730  001DC6  EFE7  F00E         	goto	l7957
  1731  001DCA  EFCD  F00E         	goto	l7613
  1732  001DCE                     l7957:
  1733                           
  1734                           ; BSR set to: 0
  1735                           ; Switch size 1, requested type "simple"
  1736                           ; Number of cases is 5, Range of values is 32 to 48
  1737                           ; switch strategies available:
  1738                           ; Name         Instructions Cycles
  1739                           ; simple_byte           16     9 (average)
  1740                           ;	Chosen strategy is simple_byte
  1741  001DCE  5198               	movf	??_vfpfcnvrt& (0+255),w,b
  1742  001DD0  0A20               	xorlw	32	; case 32
  1743  001DD2  B4D8               	btfsc	status,2,c
  1744  001DD4  EFC7  F00E         	goto	l7605
  1745  001DD8  0A03               	xorlw	3	; case 35
  1746  001DDA  B4D8               	btfsc	status,2,c
  1747  001DDC  EFCA  F00E         	goto	l7609
  1748  001DE0  0A08               	xorlw	8	; case 43
  1749  001DE2  B4D8               	btfsc	status,2,c
  1750  001DE4  EFC4  F00E         	goto	l7601
  1751  001DE8  0A06               	xorlw	6	; case 45
  1752  001DEA  B4D8               	btfsc	status,2,c
  1753  001DEC  EFB7  F00E         	goto	l7593
  1754  001DF0  0A1D               	xorlw	29	; case 48
  1755  001DF2  B4D8               	btfsc	status,2,c
  1756  001DF4  EFC1  F00E         	goto	l7597
  1757  001DF8  EFCD  F00E         	goto	l7613
  1758  001DFC                     l7619:
  1759                           
  1760                           ; BSR set to: 0
  1761                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 711:         whil
      +                          e (!done) {
  1762  001DFC  519C               	movf	vfpfcnvrt@done& (0+255),w,b
  1763  001DFE  119D               	iorwf	(vfpfcnvrt@done+1)& (0+255),w,b
  1764  001E00  B4D8               	btfsc	status,2,c
  1765  001E02  EF05  F00F         	goto	u8281
  1766  001E06  EF07  F00F         	goto	u8280
  1767  001E0A                     u8281:
  1768  001E0A  EFD3  F00E         	goto	l7617
  1769  001E0E                     u8280:
  1770  001E0E                     
  1771                           ; BSR set to: 0
  1772                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 738:         if (
      +                          flags & (1 << 0)) {
  1773  001E0E  A1FA               	btfss	_flags& (0+255),0,b
  1774  001E10  EF0C  F00F         	goto	u8291
  1775  001E14  EF0E  F00F         	goto	u8290
  1776  001E18                     u8291:
  1777  001E18  EF0F  F00F         	goto	l7623
  1778  001E1C                     u8290:
  1779  001E1C                     
  1780                           ; BSR set to: 0
  1781                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 739:             
      +                          flags &= ~(1 << 1);
  1782  001E1C  93FA               	bcf	_flags& (0+255),1,b
  1783  001E1E                     l7623:
  1784                           
  1785                           ; BSR set to: 0
  1786                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 762:         if (
      +                          (*fmt)[0] == '.') {
  1787  001E1E  C052  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1788  001E22  C053  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1789  001E26  CFDE FFF6          	movff	postinc2,tblptrl
  1790  001E2A  CFDD FFF7          	movff	postdec2,tblptrh
  1791  001E2E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  1792  001E2E  6AF8               	clrf	tblptru,c
  1793  001E30                     	endif
  1794  001E30                     	if	0	;tblptru may be non-zero
  1795  001E30                     	endif
  1796  001E30  0008               	tblrd		*
  1797  001E32  50F5               	movf	tablat,w,c
  1798  001E34  0A2E               	xorlw	46
  1799  001E36  A4D8               	btfss	status,2,c
  1800  001E38  EF20  F00F         	goto	u8301
  1801  001E3C  EF22  F00F         	goto	u8300
  1802  001E40                     u8301:
  1803  001E40  EFA2  F00F         	goto	l7643
  1804  001E44                     u8300:
  1805  001E44                     
  1806                           ; BSR set to: 0
  1807                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 763:             
      +                          prec = 0;
  1808  001E44  0E00               	movlw	0
  1809  001E46  6FF9               	movwf	(_prec+1)& (0+255),b
  1810  001E48  0E00               	movlw	0
  1811  001E4A  6FF8               	movwf	_prec& (0+255),b
  1812  001E4C                     
  1813                           ; BSR set to: 0
  1814                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 764:             
      +                          ++*fmt;
  1815  001E4C  C052  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1816  001E50  C053  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1817  001E54  2ADE               	incf	postinc2,f,c
  1818  001E56  0E00               	movlw	0
  1819  001E58  22DD               	addwfc	postdec2,f,c
  1820  001E5A                     
  1821                           ; BSR set to: 0
  1822                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 765:             
      +                          if ((*fmt)[0] == '*') {
  1823  001E5A  C052  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1824  001E5E  C053  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1825  001E62  CFDE FFF6          	movff	postinc2,tblptrl
  1826  001E66  CFDD FFF7          	movff	postdec2,tblptrh
  1827  001E6A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  1828  001E6A  6AF8               	clrf	tblptru,c
  1829  001E6C                     	endif
  1830  001E6C                     	if	0	;tblptru may be non-zero
  1831  001E6C                     	endif
  1832  001E6C  0008               	tblrd		*
  1833  001E6E  50F5               	movf	tablat,w,c
  1834  001E70  0A2A               	xorlw	42
  1835  001E72  A4D8               	btfss	status,2,c
  1836  001E74  EF3E  F00F         	goto	u8311
  1837  001E78  EF40  F00F         	goto	u8310
  1838  001E7C                     u8311:
  1839  001E7C  EF5D  F00F         	goto	l7633
  1840  001E80                     u8310:
  1841  001E80                     
  1842                           ; BSR set to: 0
  1843                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 766:             
      +                              ++*fmt;
  1844  001E80  C052  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1845  001E84  C053  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1846  001E88  2ADE               	incf	postinc2,f,c
  1847  001E8A  0E00               	movlw	0
  1848  001E8C  22DD               	addwfc	postdec2,f,c
  1849                           
  1850                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 767:             
      +                              prec = (*(int *)__va_arg(*(int **)ap, (int)0));
  1851  001E8E  C054  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  1852  001E92  C055  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  1853  001E96  CFDF F098          	movff	indf2,??_vfpfcnvrt
  1854  001E9A  0E02               	movlw	2
  1855  001E9C  26DE               	addwf	postinc2,f,c
  1856  001E9E  CFDF F099          	movff	indf2,??_vfpfcnvrt+1
  1857  001EA2  0E00               	movlw	0
  1858  001EA4  22DD               	addwfc	postdec2,f,c
  1859  001EA6  C098  FFD9         	movff	??_vfpfcnvrt,fsr2l
  1860  001EAA  C099  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  1861  001EAE  CFDE F0F8          	movff	postinc2,_prec
  1862  001EB2  CFDD F0F9          	movff	postdec2,_prec+1
  1863                           
  1864                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 768:             
      +                          } else {
  1865  001EB6  EFA2  F00F         	goto	l7643
  1866  001EBA                     l7633:
  1867                           
  1868                           ; BSR set to: 0
  1869                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 769:             
      +                              prec = atoi(*fmt);
  1870  001EBA  C052  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1871  001EBE  C053  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1872  001EC2  CFDE F00C          	movff	postinc2,atoi@s
  1873  001EC6  CFDD F00D          	movff	postdec2,atoi@s+1
  1874  001ECA  EC64  F019         	call	_atoi	;wreg free
  1875  001ECE  C00C  F0F8         	movff	?_atoi,_prec
  1876  001ED2  C00D  F0F9         	movff	?_atoi+1,_prec+1
  1877                           
  1878                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 770:             
      +                              while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  1879  001ED6  EF74  F00F         	goto	l7637
  1880  001EDA                     l7635:
  1881                           
  1882                           ; BSR set to: 0
  1883                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 771:             
      +                                  ++*fmt;
  1884  001EDA  C052  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1885  001EDE  C053  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1886  001EE2  2ADE               	incf	postinc2,f,c
  1887  001EE4  0E00               	movlw	0
  1888  001EE6  22DD               	addwfc	postdec2,f,c
  1889  001EE8                     l7637:
  1890  001EE8  0ED0               	movlw	208
  1891  001EEA  0100               	movlb	0	; () banked
  1892  001EEC  6F98               	movwf	??_vfpfcnvrt& (0+255),b
  1893  001EEE  0EFF               	movlw	255
  1894  001EF0  6F99               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  1895  001EF2  C052  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1896  001EF6  C053  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1897  001EFA  CFDE FFF6          	movff	postinc2,tblptrl
  1898  001EFE  CFDD FFF7          	movff	postdec2,tblptrh
  1899  001F02                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  1900  001F02  6AF8               	clrf	tblptru,c
  1901  001F04                     	endif
  1902  001F04                     	if	0	;tblptru may be non-zero
  1903  001F04                     	endif
  1904  001F04  0008               	tblrd		*
  1905  001F06  50F5               	movf	tablat,w,c
  1906  001F08  6F9A               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  1907  001F0A  6B9B               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  1908  001F0C  5198               	movf	??_vfpfcnvrt& (0+255),w,b
  1909  001F0E  279A               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  1910  001F10  5199               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  1911  001F12  239B               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  1912  001F14  519B               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  1913  001F16  E10A               	bnz	u8320
  1914  001F18  0E0A               	movlw	10
  1915  001F1A  5D9A               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  1916  001F1C  A0D8               	btfss	status,0,c
  1917  001F1E  EF93  F00F         	goto	u8321
  1918  001F22  EF96  F00F         	goto	u8320
  1919  001F26                     u8321:
  1920  001F26  0E01               	movlw	1
  1921  001F28  EF97  F00F         	goto	u8330
  1922  001F2C                     u8320:
  1923  001F2C  0E00               	movlw	0
  1924  001F2E                     u8330:
  1925  001F2E  6F9E               	movwf	_vfpfcnvrt$2149& (0+255),b
  1926  001F30  6B9F               	clrf	(_vfpfcnvrt$2149+1)& (0+255),b
  1927  001F32                     
  1928                           ; BSR set to: 0
  1929  001F32  519E               	movf	_vfpfcnvrt$2149& (0+255),w,b
  1930  001F34  119F               	iorwf	(_vfpfcnvrt$2149+1)& (0+255),w,b
  1931  001F36  A4D8               	btfss	status,2,c
  1932  001F38  EFA0  F00F         	goto	u8341
  1933  001F3C  EFA2  F00F         	goto	u8340
  1934  001F40                     u8341:
  1935  001F40  EF6D  F00F         	goto	l7635
  1936  001F44                     u8340:
  1937  001F44                     l7643:
  1938                           
  1939                           ; BSR set to: 0
  1940                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 779:         ct[0
      +                          ] = (char)tolower((int)(*fmt)[0]);
  1941  001F44  C052  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1942  001F48  C053  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1943  001F4C  CFDE FFF6          	movff	postinc2,tblptrl
  1944  001F50  CFDD FFF7          	movff	postdec2,tblptrh
  1945  001F54                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  1946  001F54  6AF8               	clrf	tblptru,c
  1947  001F56                     	endif
  1948  001F56                     	if	0	;tblptru may be non-zero
  1949  001F56                     	endif
  1950  001F56  0008               	tblrd		*
  1951  001F58  50F5               	movf	tablat,w,c
  1952  001F5A  6E0B               	movwf	tolower@c^0,c
  1953  001F5C  6A0C               	clrf	(tolower@c+1)^0,c
  1954  001F5E  EC18  F023         	call	_tolower	;wreg free
  1955  001F62  500B               	movf	?_tolower^0,w,c
  1956  001F64  0100               	movlb	0	; () banked
  1957  001F66  6FA6               	movwf	vfpfcnvrt@ct& (0+255),b
  1958  001F68                     
  1959                           ; BSR set to: 0
  1960                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 780:         if (
      +                          ct[0]) {
  1961  001F68  51A6               	movf	vfpfcnvrt@ct& (0+255),w,b
  1962  001F6A  B4D8               	btfsc	status,2,c
  1963  001F6C  EFBA  F00F         	goto	u8351
  1964  001F70  EFBC  F00F         	goto	u8350
  1965  001F74                     u8351:
  1966  001F74  EFF8  F00F         	goto	l7653
  1967  001F78                     u8350:
  1968  001F78                     
  1969                           ; BSR set to: 0
  1970                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 781:             
      +                          ct[1] = (char)tolower((int)(*fmt)[1]);
  1971  001F78  C052  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  1972  001F7C  C053  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  1973  001F80  CFDE F098          	movff	postinc2,??_vfpfcnvrt
  1974  001F84  CFDD F099          	movff	postdec2,??_vfpfcnvrt+1
  1975  001F88  0E01               	movlw	1
  1976  001F8A  2798               	addwf	??_vfpfcnvrt& (0+255),f,b
  1977  001F8C  0E00               	movlw	0
  1978  001F8E  2399               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  1979  001F90  C098  FFF6         	movff	??_vfpfcnvrt,tblptrl
  1980  001F94  C099  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  1981  001F98                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  1982  001F98  6AF8               	clrf	tblptru,c
  1983  001F9A                     	endif
  1984  001F9A                     	if	0	;tblptru may be non-zero
  1985  001F9A                     	endif
  1986  001F9A  0008               	tblrd		*
  1987  001F9C  50F5               	movf	tablat,w,c
  1988  001F9E  6E0B               	movwf	tolower@c^0,c
  1989  001FA0  6A0C               	clrf	(tolower@c+1)^0,c
  1990  001FA2  EC18  F023         	call	_tolower	;wreg free
  1991  001FA6  500B               	movf	?_tolower^0,w,c
  1992  001FA8  0100               	movlb	0	; () banked
  1993  001FAA  6FA7               	movwf	(vfpfcnvrt@ct+1)& (0+255),b
  1994  001FAC                     
  1995                           ; BSR set to: 0
  1996                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 782:             
      +                          if (ct[1]) {
  1997  001FAC  51A7               	movf	(vfpfcnvrt@ct+1)& (0+255),w,b
  1998  001FAE  B4D8               	btfsc	status,2,c
  1999  001FB0  EFDC  F00F         	goto	u8361
  2000  001FB4  EFDE  F00F         	goto	u8360
  2001  001FB8                     u8361:
  2002  001FB8  EFF8  F00F         	goto	l7653
  2003  001FBC                     u8360:
  2004  001FBC                     
  2005                           ; BSR set to: 0
  2006                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 783:             
      +                              ct[2] = (char)tolower((int)(*fmt)[2]);
  2007  001FBC  C052  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2008  001FC0  C053  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2009  001FC4  CFDE F098          	movff	postinc2,??_vfpfcnvrt
  2010  001FC8  CFDD F099          	movff	postdec2,??_vfpfcnvrt+1
  2011  001FCC  0E02               	movlw	2
  2012  001FCE  2798               	addwf	??_vfpfcnvrt& (0+255),f,b
  2013  001FD0  0E00               	movlw	0
  2014  001FD2  2399               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  2015  001FD4  C098  FFF6         	movff	??_vfpfcnvrt,tblptrl
  2016  001FD8  C099  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  2017  001FDC                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2018  001FDC  6AF8               	clrf	tblptru,c
  2019  001FDE                     	endif
  2020  001FDE                     	if	0	;tblptru may be non-zero
  2021  001FDE                     	endif
  2022  001FDE  0008               	tblrd		*
  2023  001FE0  50F5               	movf	tablat,w,c
  2024  001FE2  6E0B               	movwf	tolower@c^0,c
  2025  001FE4  6A0C               	clrf	(tolower@c+1)^0,c
  2026  001FE6  EC18  F023         	call	_tolower	;wreg free
  2027  001FEA  500B               	movf	?_tolower^0,w,c
  2028  001FEC  0100               	movlb	0	; () banked
  2029  001FEE  6FA8               	movwf	(vfpfcnvrt@ct+2)& (0+255),b
  2030  001FF0                     l7653:
  2031                           
  2032                           ; BSR set to: 0
  2033                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 942:         if (
      +                          ct[0] == 'f') {
  2034  001FF0  0E66               	movlw	102
  2035  001FF2  19A6               	xorwf	vfpfcnvrt@ct& (0+255),w,b
  2036  001FF4  A4D8               	btfss	status,2,c
  2037  001FF6  EFFF  F00F         	goto	u8371
  2038  001FFA  EF01  F010         	goto	u8370
  2039  001FFE                     u8371:
  2040  001FFE  EF42  F010         	goto	l7665
  2041  002002                     u8370:
  2042  002002                     
  2043                           ; BSR set to: 0
  2044                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 944:             
      +                          c = (*fmt)[0];
  2045  002002  C052  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2046  002006  C053  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2047  00200A  CFDE FFF6          	movff	postinc2,tblptrl
  2048  00200E  CFDD FFF7          	movff	postdec2,tblptrh
  2049  002012                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2050  002012  6AF8               	clrf	tblptru,c
  2051  002014                     	endif
  2052  002014                     	if	0	;tblptru may be non-zero
  2053  002014                     	endif
  2054  002014  0008               	tblrd		*
  2055  002016  CFF5 F0A9          	movff	tablat,vfpfcnvrt@c
  2056  00201A                     
  2057                           ; BSR set to: 0
  2058                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 945:             
      +                          ++*fmt;
  2059  00201A  C052  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2060  00201E  C053  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2061  002022  2ADE               	incf	postinc2,f,c
  2062  002024  0E00               	movlw	0
  2063  002026  22DD               	addwfc	postdec2,f,c
  2064  002028                     
  2065                           ; BSR set to: 0
  2066                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 946:             
      +                          f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  2067  002028  C054  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2068  00202C  C055  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2069  002030  CFDF F098          	movff	indf2,??_vfpfcnvrt
  2070  002034  0E04               	movlw	4
  2071  002036  26DE               	addwf	postinc2,f,c
  2072  002038  CFDF F099          	movff	indf2,??_vfpfcnvrt+1
  2073  00203C  0E00               	movlw	0
  2074  00203E  22DD               	addwfc	postdec2,f,c
  2075  002040  C098  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2076  002044  C099  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2077  002048  CFDE F0A2          	movff	postinc2,vfpfcnvrt@f
  2078  00204C  CFDE F0A3          	movff	postinc2,vfpfcnvrt@f+1
  2079  002050  CFDE F0A4          	movff	postinc2,vfpfcnvrt@f+2
  2080  002054  CFDE F0A5          	movff	postinc2,vfpfcnvrt@f+3
  2081  002058                     
  2082                           ; BSR set to: 0
  2083                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 948:             
      +                          return efgtoa(fp, f, c);
  2084  002058  C050  F044         	movff	vfpfcnvrt@fp,efgtoa@fp
  2085  00205C  C051  F045         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  2086  002060  C0A2  F046         	movff	vfpfcnvrt@f,efgtoa@f
  2087  002064  C0A3  F047         	movff	vfpfcnvrt@f+1,efgtoa@f+1
  2088  002068  C0A4  F048         	movff	vfpfcnvrt@f+2,efgtoa@f+2
  2089  00206C  C0A5  F049         	movff	vfpfcnvrt@f+3,efgtoa@f+3
  2090  002070  C0A9  F04A         	movff	vfpfcnvrt@c,efgtoa@c
  2091  002074  EC39  F008         	call	_efgtoa	;wreg free
  2092  002078  C044  F050         	movff	?_efgtoa,?_vfpfcnvrt
  2093  00207C  C045  F051         	movff	?_efgtoa+1,?_vfpfcnvrt+1
  2094  002080  EF3E  F011         	goto	l1594
  2095  002084                     l7665:
  2096                           
  2097                           ; BSR set to: 0
  2098                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 950:         if (
      +                          !strncmp(ct, "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
  2099  002084  0EA6               	movlw	low vfpfcnvrt@ct
  2100  002086  6E05               	movwf	strncmp@_l^0,c
  2101  002088  0E00               	movlw	high vfpfcnvrt@ct
  2102  00208A  6E06               	movwf	(strncmp@_l+1)^0,c
  2103  00208C  0E6E               	movlw	low STR_13
  2104  00208E  6E07               	movwf	strncmp@_r^0,c
  2105  002090  0E10               	movlw	high STR_13
  2106  002092  6E08               	movwf	(strncmp@_r+1)^0,c
  2107  002094  0E00               	movlw	0
  2108  002096  6E0A               	movwf	(strncmp@n+1)^0,c
  2109  002098  0E02               	movlw	2
  2110  00209A  6E09               	movwf	strncmp@n^0,c
  2111  00209C  ECB5  F01C         	call	_strncmp	;wreg free
  2112  0020A0  5005               	movf	?_strncmp^0,w,c
  2113  0020A2  1006               	iorwf	(?_strncmp+1)^0,w,c
  2114  0020A4  A4D8               	btfss	status,2,c
  2115  0020A6  EF57  F010         	goto	u8381
  2116  0020AA  EF59  F010         	goto	u8380
  2117  0020AE                     u8381:
  2118  0020AE  EFEB  F010         	goto	l7681
  2119  0020B2                     u8380:
  2120  0020B2                     
  2121                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 953:             
      +                          if ((0 ? isupper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
  2122  0020B2  C052  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2123  0020B6  C053  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2124  0020BA  CFDE F098          	movff	postinc2,??_vfpfcnvrt
  2125  0020BE  CFDD F099          	movff	postdec2,??_vfpfcnvrt+1
  2126  0020C2  0E01               	movlw	1
  2127  0020C4  0100               	movlb	0	; () banked
  2128  0020C6  2798               	addwf	??_vfpfcnvrt& (0+255),f,b
  2129  0020C8  0E00               	movlw	0
  2130  0020CA  2399               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  2131  0020CC  C098  FFF6         	movff	??_vfpfcnvrt,tblptrl
  2132  0020D0  C099  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  2133  0020D4                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2134  0020D4  6AF8               	clrf	tblptru,c
  2135  0020D6                     	endif
  2136  0020D6                     	if	0	;tblptru may be non-zero
  2137  0020D6                     	endif
  2138  0020D6  0008               	tblrd		*
  2139  0020D8  CFF5 F0A9          	movff	tablat,vfpfcnvrt@c
  2140  0020DC  0EBF               	movlw	191
  2141  0020DE  6F98               	movwf	??_vfpfcnvrt& (0+255),b
  2142  0020E0  0EFF               	movlw	255
  2143  0020E2  6F99               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  2144  0020E4  C052  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2145  0020E8  C053  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2146  0020EC  CFDE FFF6          	movff	postinc2,tblptrl
  2147  0020F0  CFDD FFF7          	movff	postdec2,tblptrh
  2148  0020F4                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2149  0020F4  6AF8               	clrf	tblptru,c
  2150  0020F6                     	endif
  2151  0020F6                     	if	0	;tblptru may be non-zero
  2152  0020F6                     	endif
  2153  0020F6  0008               	tblrd		*
  2154  0020F8  50F5               	movf	tablat,w,c
  2155  0020FA  6F9A               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  2156  0020FC  6B9B               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  2157  0020FE  5198               	movf	??_vfpfcnvrt& (0+255),w,b
  2158  002100  279A               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  2159  002102  5199               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  2160  002104  239B               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  2161  002106  519B               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  2162  002108  E10A               	bnz	u8390
  2163  00210A  0E1A               	movlw	26
  2164  00210C  5D9A               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  2165  00210E  A0D8               	btfss	status,0,c
  2166  002110  EF8C  F010         	goto	u8391
  2167  002114  EF8F  F010         	goto	u8390
  2168  002118                     u8391:
  2169  002118  0E01               	movlw	1
  2170  00211A  EF90  F010         	goto	u8400
  2171  00211E                     u8390:
  2172  00211E  0E00               	movlw	0
  2173  002120                     u8400:
  2174  002120  6FA0               	movwf	_vfpfcnvrt$2153& (0+255),b
  2175  002122  6BA1               	clrf	(_vfpfcnvrt$2153+1)& (0+255),b
  2176  002124                     
  2177                           ; BSR set to: 0
  2178  002124  51A0               	movf	_vfpfcnvrt$2153& (0+255),w,b
  2179  002126  11A1               	iorwf	(_vfpfcnvrt$2153+1)& (0+255),w,b
  2180  002128  B4D8               	btfsc	status,2,c
  2181  00212A  EF99  F010         	goto	u8411
  2182  00212E  EF9B  F010         	goto	u8410
  2183  002132                     u8411:
  2184  002132  EFB5  F010         	goto	l7675
  2185  002136                     u8410:
  2186  002136                     
  2187                           ; BSR set to: 0
  2188                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 954:             
      +                              f = (*(long double *)__va_arg(*(long double **)ap, (long double)0));
  2189  002136  C054  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2190  00213A  C055  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2191  00213E  CFDF F098          	movff	indf2,??_vfpfcnvrt
  2192  002142  0E04               	movlw	4
  2193  002144  26DE               	addwf	postinc2,f,c
  2194  002146  CFDF F099          	movff	indf2,??_vfpfcnvrt+1
  2195  00214A  0E00               	movlw	0
  2196  00214C  22DD               	addwfc	postdec2,f,c
  2197  00214E  C098  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2198  002152  C099  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2199  002156  CFDE F0A2          	movff	postinc2,vfpfcnvrt@f
  2200  00215A  CFDE F0A3          	movff	postinc2,vfpfcnvrt@f+1
  2201  00215E  CFDE F0A4          	movff	postinc2,vfpfcnvrt@f+2
  2202  002162  CFDE F0A5          	movff	postinc2,vfpfcnvrt@f+3
  2203                           
  2204                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 955:             
      +                          } else {
  2205  002166  EFCD  F010         	goto	l1601
  2206  00216A                     l7675:
  2207                           
  2208                           ; BSR set to: 0
  2209                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 956:             
      +                              f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  2210  00216A  C054  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2211  00216E  C055  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2212  002172  CFDF F098          	movff	indf2,??_vfpfcnvrt
  2213  002176  0E04               	movlw	4
  2214  002178  26DE               	addwf	postinc2,f,c
  2215  00217A  CFDF F099          	movff	indf2,??_vfpfcnvrt+1
  2216  00217E  0E00               	movlw	0
  2217  002180  22DD               	addwfc	postdec2,f,c
  2218  002182  C098  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2219  002186  C099  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2220  00218A  CFDE F0A2          	movff	postinc2,vfpfcnvrt@f
  2221  00218E  CFDE F0A3          	movff	postinc2,vfpfcnvrt@f+1
  2222  002192  CFDE F0A4          	movff	postinc2,vfpfcnvrt@f+2
  2223  002196  CFDE F0A5          	movff	postinc2,vfpfcnvrt@f+3
  2224  00219A                     l1601:
  2225                           
  2226                           ; BSR set to: 0
  2227                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 958:             
      +                          *fmt += ((sizeof("lf")/sizeof("lf"[0]))-1);
  2228  00219A  0E02               	movlw	2
  2229  00219C  C052  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2230  0021A0  C053  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2231  0021A4  26DE               	addwf	postinc2,f,c
  2232  0021A6  0E00               	movlw	0
  2233  0021A8  22DD               	addwfc	postdec2,f,c
  2234  0021AA                     
  2235                           ; BSR set to: 0
  2236                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 960:             
      +                          return efgtoa(fp, f, c);
  2237  0021AA  C050  F044         	movff	vfpfcnvrt@fp,efgtoa@fp
  2238  0021AE  C051  F045         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  2239  0021B2  C0A2  F046         	movff	vfpfcnvrt@f,efgtoa@f
  2240  0021B6  C0A3  F047         	movff	vfpfcnvrt@f+1,efgtoa@f+1
  2241  0021BA  C0A4  F048         	movff	vfpfcnvrt@f+2,efgtoa@f+2
  2242  0021BE  C0A5  F049         	movff	vfpfcnvrt@f+3,efgtoa@f+3
  2243  0021C2  C0A9  F04A         	movff	vfpfcnvrt@c,efgtoa@c
  2244  0021C6  EC39  F008         	call	_efgtoa	;wreg free
  2245  0021CA  C044  F050         	movff	?_efgtoa,?_vfpfcnvrt
  2246  0021CE  C045  F051         	movff	?_efgtoa+1,?_vfpfcnvrt+1
  2247  0021D2  EF3E  F011         	goto	l1594
  2248  0021D6                     l7681:
  2249                           
  2250                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  2251  0021D6  C052  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2252  0021DA  C053  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2253  0021DE  CFDE FFF6          	movff	postinc2,tblptrl
  2254  0021E2  CFDD FFF7          	movff	postdec2,tblptrh
  2255  0021E6                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2256  0021E6  6AF8               	clrf	tblptru,c
  2257  0021E8                     	endif
  2258  0021E8                     	if	0	;tblptru may be non-zero
  2259  0021E8                     	endif
  2260  0021E8  0008               	tblrd		*
  2261  0021EA  50F5               	movf	tablat,w,c
  2262  0021EC  0A25               	xorlw	37
  2263  0021EE  A4D8               	btfss	status,2,c
  2264  0021F0  EFFC  F010         	goto	u8421
  2265  0021F4  EFFE  F010         	goto	u8420
  2266  0021F8                     u8421:
  2267  0021F8  EF15  F011         	goto	l7691
  2268  0021FC                     u8420:
  2269  0021FC                     
  2270                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  2271  0021FC  C052  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2272  002200  C053  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2273  002204  2ADE               	incf	postinc2,f,c
  2274  002206  0E00               	movlw	0
  2275  002208  22DD               	addwfc	postdec2,f,c
  2276  00220A                     
  2277                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  2278  00220A  0E00               	movlw	0
  2279  00220C  6E08               	movwf	(fputc@c+1)^0,c
  2280  00220E  0E25               	movlw	37
  2281  002210  6E07               	movwf	fputc@c^0,c
  2282  002212  C050  F009         	movff	vfpfcnvrt@fp,fputc@fp
  2283  002216  C051  F00A         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2284  00221A  EC33  F021         	call	_fputc	;wreg free
  2285  00221E                     l7687:
  2286                           
  2287                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  2288  00221E  0E00               	movlw	0
  2289  002220  6E51               	movwf	(?_vfpfcnvrt+1)^0,c
  2290  002222  0E01               	movlw	1
  2291  002224  6E50               	movwf	?_vfpfcnvrt^0,c
  2292  002226  EF3E  F011         	goto	l1594
  2293  00222A                     l7691:
  2294                           
  2295                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  2296  00222A  C052  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2297  00222E  C053  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2298  002232  2ADE               	incf	postinc2,f,c
  2299  002234  0E00               	movlw	0
  2300  002236  22DD               	addwfc	postdec2,f,c
  2301  002238                     
  2302                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  2303  002238  0E00               	movlw	0
  2304  00223A  6E51               	movwf	(?_vfpfcnvrt+1)^0,c
  2305  00223C  0E00               	movlw	0
  2306  00223E  6E50               	movwf	?_vfpfcnvrt^0,c
  2307  002240  EF3E  F011         	goto	l1594
  2308  002244                     l7697:
  2309                           
  2310                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  2311  002244  C052  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2312  002248  C053  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2313  00224C  CFDE FFF6          	movff	postinc2,tblptrl
  2314  002250  CFDD FFF7          	movff	postdec2,tblptrh
  2315  002254                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2316  002254  6AF8               	clrf	tblptru,c
  2317  002256                     	endif
  2318  002256                     	if	0	;tblptru may be non-zero
  2319  002256                     	endif
  2320  002256  0008               	tblrd		*
  2321  002258  50F5               	movf	tablat,w,c
  2322  00225A  6E07               	movwf	fputc@c^0,c
  2323  00225C  6A08               	clrf	(fputc@c+1)^0,c
  2324  00225E  C050  F009         	movff	vfpfcnvrt@fp,fputc@fp
  2325  002262  C051  F00A         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2326  002266  EC33  F021         	call	_fputc	;wreg free
  2327  00226A                     
  2328                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  2329  00226A  C052  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2330  00226E  C053  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2331  002272  2ADE               	incf	postinc2,f,c
  2332  002274  0E00               	movlw	0
  2333  002276  22DD               	addwfc	postdec2,f,c
  2334  002278  EF0F  F011         	goto	l7687
  2335  00227C                     l1594:
  2336  00227C  0012               	return		;funcret
  2337  00227E                     __end_of_vfpfcnvrt:
  2338                           	callstack 0
  2339                           
  2340 ;; *************** function _strncmp *****************
  2341 ;; Defined at:
  2342 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strncmp.c"
  2343 ;; Parameters:    Size  Location     Type
  2344 ;;  _l              2    4[COMRAM] PTR const unsigned char 
  2345 ;;		 -> vfpfcnvrt@ct(3), 
  2346 ;;  _r              2    6[COMRAM] PTR const unsigned char 
  2347 ;;		 -> STR_15(3), 
  2348 ;;  n               2    8[COMRAM] unsigned int 
  2349 ;; Auto vars:     Size  Location     Type
  2350 ;;  r               2   13[COMRAM] PTR const unsigned char 
  2351 ;;		 -> STR_15(3), 
  2352 ;;  l               2   11[COMRAM] PTR const unsigned char 
  2353 ;;		 -> vfpfcnvrt@ct(3), 
  2354 ;; Return value:  Size  Location     Type
  2355 ;;                  2    4[COMRAM] int 
  2356 ;; Registers used:
  2357 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  2358 ;; Tracked objects:
  2359 ;;		On entry : 0/0
  2360 ;;		On exit  : 0/0
  2361 ;;		Unchanged: 0/0
  2362 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2363 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2364 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2365 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2366 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2367 ;;Total ram usage:       11 bytes
  2368 ;; Hardware stack levels used: 1
  2369 ;; Hardware stack levels required when called: 4
  2370 ;; This function calls:
  2371 ;;		Nothing
  2372 ;; This function is called by:
  2373 ;;		_vfpfcnvrt
  2374 ;; This function uses a non-reentrant model
  2375 ;;
  2376                           
  2377                           	psect	text4
  2378  00396A                     __ptext4:
  2379                           	callstack 0
  2380  00396A                     _strncmp:
  2381                           	callstack 23
  2382  00396A  C005  F00C         	movff	strncmp@_l,strncmp@l
  2383  00396E  C006  F00D         	movff	strncmp@_l+1,strncmp@l+1
  2384  003972  C007  F00E         	movff	strncmp@_r,strncmp@r
  2385  003976  C008  F00F         	movff	strncmp@_r+1,strncmp@r+1
  2386  00397A  0609               	decf	strncmp@n^0,f,c
  2387  00397C  A0D8               	btfss	status,0,c
  2388  00397E  060A               	decf	(strncmp@n+1)^0,f,c
  2389  003980  2809               	incf	strncmp@n^0,w,c
  2390  003982  E106               	bnz	u8221
  2391  003984  280A               	incf	(strncmp@n+1)^0,w,c
  2392  003986  A4D8               	btfss	status,2,c
  2393  003988  EFC8  F01C         	goto	u8221
  2394  00398C  EFCA  F01C         	goto	u8220
  2395  003990                     u8221:
  2396  003990  EFD7  F01C         	goto	l7571
  2397  003994                     u8220:
  2398  003994  0E00               	movlw	0
  2399  003996  6E06               	movwf	(?_strncmp+1)^0,c
  2400  003998  0E00               	movlw	0
  2401  00399A  6E05               	movwf	?_strncmp^0,c
  2402  00399C  EF22  F01D         	goto	l1719
  2403  0039A0                     l7569:
  2404  0039A0  4A0C               	infsnz	strncmp@l^0,f,c
  2405  0039A2  2A0D               	incf	(strncmp@l+1)^0,f,c
  2406  0039A4  4A0E               	infsnz	strncmp@r^0,f,c
  2407  0039A6  2A0F               	incf	(strncmp@r+1)^0,f,c
  2408  0039A8  0609               	decf	strncmp@n^0,f,c
  2409  0039AA  A0D8               	btfss	status,0,c
  2410  0039AC  060A               	decf	(strncmp@n+1)^0,f,c
  2411  0039AE                     l7571:
  2412  0039AE  C00C  FFD9         	movff	strncmp@l,fsr2l
  2413  0039B2  C00D  FFDA         	movff	strncmp@l+1,fsr2h
  2414  0039B6  50DF               	movf	indf2,w,c
  2415  0039B8  B4D8               	btfsc	status,2,c
  2416  0039BA  EFE1  F01C         	goto	u8231
  2417  0039BE  EFE3  F01C         	goto	u8230
  2418  0039C2                     u8231:
  2419  0039C2  EF10  F01D         	goto	l7579
  2420  0039C6                     u8230:
  2421  0039C6  C00E  FFF6         	movff	strncmp@r,tblptrl
  2422  0039CA  C00F  FFF7         	movff	strncmp@r+1,tblptrh
  2423  0039CE                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2424  0039CE  6AF8               	clrf	tblptru,c
  2425  0039D0                     	endif
  2426  0039D0                     	if	0	;tblptru may be non-zero
  2427  0039D0                     	endif
  2428  0039D0  0008               	tblrd		*
  2429  0039D2  50F5               	movf	tablat,w,c
  2430  0039D4  0900               	iorlw	0
  2431  0039D6  B4D8               	btfsc	status,2,c
  2432  0039D8  EFF0  F01C         	goto	u8241
  2433  0039DC  EFF2  F01C         	goto	u8240
  2434  0039E0                     u8241:
  2435  0039E0  EF10  F01D         	goto	l7579
  2436  0039E4                     u8240:
  2437  0039E4  5009               	movf	strncmp@n^0,w,c
  2438  0039E6  100A               	iorwf	(strncmp@n+1)^0,w,c
  2439  0039E8  B4D8               	btfsc	status,2,c
  2440  0039EA  EFF9  F01C         	goto	u8251
  2441  0039EE  EFFB  F01C         	goto	u8250
  2442  0039F2                     u8251:
  2443  0039F2  EF10  F01D         	goto	l7579
  2444  0039F6                     u8250:
  2445  0039F6  C00C  FFD9         	movff	strncmp@l,fsr2l
  2446  0039FA  C00D  FFDA         	movff	strncmp@l+1,fsr2h
  2447  0039FE  50DF               	movf	indf2,w,c
  2448  003A00  6E0B               	movwf	??_strncmp^0,c
  2449  003A02  C00E  FFF6         	movff	strncmp@r,tblptrl
  2450  003A06  C00F  FFF7         	movff	strncmp@r+1,tblptrh
  2451  003A0A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2452  003A0A  6AF8               	clrf	tblptru,c
  2453  003A0C                     	endif
  2454  003A0C                     	if	0	;tblptru may be non-zero
  2455  003A0C                     	endif
  2456  003A0C  0008               	tblrd		*
  2457  003A0E  50F5               	movf	tablat,w,c
  2458  003A10  180B               	xorwf	??_strncmp^0,w,c
  2459  003A12  B4D8               	btfsc	status,2,c
  2460  003A14  EF0E  F01D         	goto	u8261
  2461  003A18  EF10  F01D         	goto	u8260
  2462  003A1C                     u8261:
  2463  003A1C  EFD0  F01C         	goto	l7569
  2464  003A20                     u8260:
  2465  003A20                     l7579:
  2466  003A20  C00C  FFD9         	movff	strncmp@l,fsr2l
  2467  003A24  C00D  FFDA         	movff	strncmp@l+1,fsr2h
  2468  003A28  50DF               	movf	indf2,w,c
  2469  003A2A  6E0B               	movwf	??_strncmp^0,c
  2470  003A2C  C00E  FFF6         	movff	strncmp@r,tblptrl
  2471  003A30  C00F  FFF7         	movff	strncmp@r+1,tblptrh
  2472  003A34                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2473  003A34  6AF8               	clrf	tblptru,c
  2474  003A36                     	endif
  2475  003A36                     	if	0	;tblptru may be non-zero
  2476  003A36                     	endif
  2477  003A36  0008               	tblrd		*
  2478  003A38  50F5               	movf	tablat,w,c
  2479  003A3A  5C0B               	subwf	??_strncmp^0,w,c
  2480  003A3C  6E05               	movwf	?_strncmp^0,c
  2481  003A3E  6A06               	clrf	(?_strncmp+1)^0,c
  2482  003A40  A0D8               	btfss	status,0,c
  2483  003A42  0606               	decf	(?_strncmp+1)^0,f,c
  2484  003A44                     l1719:
  2485  003A44  0012               	return		;funcret
  2486  003A46                     __end_of_strncmp:
  2487                           	callstack 0
  2488                           
  2489 ;; *************** function _efgtoa *****************
  2490 ;; Defined at:
  2491 ;;		line 332 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  2492 ;; Parameters:    Size  Location     Type
  2493 ;;  fp              2   67[COMRAM] PTR struct _IO_FILE
  2494 ;;		 -> NULL(0), 
  2495 ;;  f               4   69[COMRAM] PTR struct _IO_FILE
  2496 ;;  c               1   73[COMRAM] unsigned char 
  2497 ;; Auto vars:     Size  Location     Type
  2498 ;;  u               4   52[BANK0 ] unsigned char 
  2499 ;;  g               4   44[BANK0 ] unsigned char 
  2500 ;;  l               4   38[BANK0 ] unsigned char 
  2501 ;;  h               4   34[BANK0 ] unsigned char 
  2502 ;;  ou              4   20[BANK0 ] unsigned char 
  2503 ;;  n               2   50[BANK0 ] int 
  2504 ;;  e               2   48[BANK0 ] int 
  2505 ;;  i               2   42[BANK0 ] int 
  2506 ;;  w               2   30[BANK0 ] int 
  2507 ;;  p               2   28[BANK0 ] int 
  2508 ;;  sign            2   26[BANK0 ] int 
  2509 ;;  d               2   24[BANK0 ] int 
  2510 ;;  m               2   18[BANK0 ] int 
  2511 ;;  ne              2   16[BANK0 ] int 
  2512 ;;  pp              2   14[BANK0 ] int 
  2513 ;;  t               2   12[BANK0 ] int 
  2514 ;;  mode            1   33[BANK0 ] unsigned char 
  2515 ;;  nmode           1   32[BANK0 ] unsigned char 
  2516 ;; Return value:  Size  Location     Type
  2517 ;;                  2   67[COMRAM] int 
  2518 ;; Registers used:
  2519 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2520 ;; Tracked objects:
  2521 ;;		On entry : 0/0
  2522 ;;		On exit  : 0/0
  2523 ;;		Unchanged: 0/0
  2524 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2525 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2526 ;;      Locals:         0      56       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2527 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2528 ;;      Totals:        12      56       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2529 ;;Total ram usage:       68 bytes
  2530 ;; Hardware stack levels used: 1
  2531 ;; Hardware stack levels required when called: 9
  2532 ;; This function calls:
  2533 ;;		___awdiv
  2534 ;;		___awmod
  2535 ;;		___fladd
  2536 ;;		___fldiv
  2537 ;;		___fleq
  2538 ;;		___flge
  2539 ;;		___flmul
  2540 ;;		___flneg
  2541 ;;		___flsub
  2542 ;;		___fltol
  2543 ;;		___fpclassifyf
  2544 ;;		_floorf
  2545 ;;		_isupper
  2546 ;;		_pad
  2547 ;;		_strcpy
  2548 ;;		_tolower
  2549 ;; This function is called by:
  2550 ;;		_vfpfcnvrt
  2551 ;; This function uses a non-reentrant model
  2552 ;;
  2553                           
  2554                           	psect	text5
  2555  001072                     __ptext5:
  2556                           	callstack 0
  2557  001072                     _efgtoa:
  2558                           	callstack 18
  2559  001072                     
  2560                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 332: static int e
      +                          fgtoa(FILE *fp, long double f, char c);C:\Program Files\Microchip\xc8\v2.32\pic\sources\
      +                          c99\common\doprnt.c: 333: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\
      +                          doprnt.c: 334:     char mode, nmode;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c9
      +                          9\common\doprnt.c: 335:     int d, e, i, m, n, ne, p, pp, sign, t, w;;C:\Program Files\M
      +                          icrochip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 336:     long double g, h, l, ou, u;
  2561  001072  0E00               	movlw	0
  2562  001074  0100               	movlb	0	; () banked
  2563  001076  6F7B               	movwf	(efgtoa@sign+1)& (0+255),b
  2564  001078  0E00               	movlw	0
  2565  00107A  6F7A               	movwf	efgtoa@sign& (0+255),b
  2566  00107C                     
  2567                           ; BSR set to: 0
  2568                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 340:     g = f;
  2569  00107C  C046  F08C         	movff	efgtoa@f,efgtoa@g
  2570  001080  C047  F08D         	movff	efgtoa@f+1,efgtoa@g+1
  2571  001084  C048  F08E         	movff	efgtoa@f+2,efgtoa@g+2
  2572  001088  C049  F08F         	movff	efgtoa@f+3,efgtoa@g+3
  2573  00108C                     
  2574                           ; BSR set to: 0
  2575                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 341:     if (g < 
      +                          0.0) {
  2576  00108C  BF8F               	btfsc	(efgtoa@g+3)& (0+255),7,b
  2577  00108E  EF4D  F008         	goto	u7610
  2578  001092  EF4B  F008         	goto	u7611
  2579  001096                     u7611:
  2580  001096  EF63  F008         	goto	l7223
  2581  00109A                     u7610:
  2582  00109A                     
  2583                           ; BSR set to: 0
  2584                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 342:         sign
      +                           = 1;
  2585  00109A  0E00               	movlw	0
  2586  00109C  6F7B               	movwf	(efgtoa@sign+1)& (0+255),b
  2587  00109E  0E01               	movlw	1
  2588  0010A0  6F7A               	movwf	efgtoa@sign& (0+255),b
  2589  0010A2                     
  2590                           ; BSR set to: 0
  2591                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 343:         g = 
      +                          -g;
  2592  0010A2  C08C  F005         	movff	efgtoa@g,___flneg@f1
  2593  0010A6  C08D  F006         	movff	efgtoa@g+1,___flneg@f1+1
  2594  0010AA  C08E  F007         	movff	efgtoa@g+2,___flneg@f1+2
  2595  0010AE  C08F  F008         	movff	efgtoa@g+3,___flneg@f1+3
  2596  0010B2  ECE0  F024         	call	___flneg	;wreg free
  2597  0010B6  C005  F08C         	movff	?___flneg,efgtoa@g
  2598  0010BA  C006  F08D         	movff	?___flneg+1,efgtoa@g+1
  2599  0010BE  C007  F08E         	movff	?___flneg+2,efgtoa@g+2
  2600  0010C2  C008  F08F         	movff	?___flneg+3,efgtoa@g+3
  2601  0010C6                     l7223:
  2602                           
  2603                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 347:     n = 0;
  2604  0010C6  0E00               	movlw	0
  2605  0010C8  0100               	movlb	0	; () banked
  2606  0010CA  6F93               	movwf	(efgtoa@n+1)& (0+255),b
  2607  0010CC  0E00               	movlw	0
  2608  0010CE  6F92               	movwf	efgtoa@n& (0+255),b
  2609  0010D0                     
  2610                           ; BSR set to: 0
  2611                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 348:     w = widt
      +                          h;
  2612  0010D0  C0F6  F07E         	movff	_width,efgtoa@w
  2613  0010D4  C0F7  F07F         	movff	_width+1,efgtoa@w+1
  2614  0010D8                     
  2615                           ; BSR set to: 0
  2616                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 349:     if (sign
      +                           || (flags & (1 << 2))) {
  2617  0010D8  517A               	movf	efgtoa@sign& (0+255),w,b
  2618  0010DA  117B               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  2619  0010DC  A4D8               	btfss	status,2,c
  2620  0010DE  EF73  F008         	goto	u7621
  2621  0010E2  EF75  F008         	goto	u7620
  2622  0010E6                     u7621:
  2623  0010E6  EF7C  F008         	goto	l7231
  2624  0010EA                     u7620:
  2625  0010EA                     
  2626                           ; BSR set to: 0
  2627  0010EA  A5FA               	btfss	_flags& (0+255),2,b
  2628  0010EC  EF7A  F008         	goto	u7631
  2629  0010F0  EF7C  F008         	goto	u7630
  2630  0010F4                     u7631:
  2631  0010F4  EF96  F008         	goto	l7243
  2632  0010F8                     u7630:
  2633  0010F8                     l7231:
  2634                           
  2635                           ; BSR set to: 0
  2636                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 350:         dbuf
      +                          [n] = sign ? '-' : '+';
  2637  0010F8  517A               	movf	efgtoa@sign& (0+255),w,b
  2638  0010FA  117B               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  2639  0010FC  A4D8               	btfss	status,2,c
  2640  0010FE  EF83  F008         	goto	u7641
  2641  001102  EF85  F008         	goto	u7640
  2642  001106                     u7641:
  2643  001106  EF8B  F008         	goto	l7235
  2644  00110A                     u7640:
  2645  00110A                     
  2646                           ; BSR set to: 0
  2647  00110A  0E00               	movlw	0
  2648  00110C  6F61               	movwf	(_efgtoa$2123+1)& (0+255),b
  2649  00110E  0E2B               	movlw	43
  2650  001110  6F60               	movwf	_efgtoa$2123& (0+255),b
  2651  001112  EF8F  F008         	goto	l7237
  2652  001116                     l7235:
  2653                           
  2654                           ; BSR set to: 0
  2655  001116  0E00               	movlw	0
  2656  001118  6F61               	movwf	(_efgtoa$2123+1)& (0+255),b
  2657  00111A  0E2D               	movlw	45
  2658  00111C  6F60               	movwf	_efgtoa$2123& (0+255),b
  2659  00111E                     l7237:
  2660                           
  2661                           ; BSR set to: 0
  2662  00111E  C060  F118         	movff	_efgtoa$2123,_dbuf
  2663  001122                     
  2664                           ; BSR set to: 0
  2665                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 351:         ++n;
  2666  001122  4B92               	infsnz	efgtoa@n& (0+255),f,b
  2667  001124  2B93               	incf	(efgtoa@n+1)& (0+255),f,b
  2668  001126                     
  2669                           ; BSR set to: 0
  2670                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 352:         --w;
  2671  001126  077E               	decf	efgtoa@w& (0+255),f,b
  2672  001128  A0D8               	btfss	status,0,c
  2673  00112A  077F               	decf	(efgtoa@w+1)& (0+255),f,b
  2674  00112C                     l7243:
  2675                           
  2676                           ; BSR set to: 0
  2677                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 357:         if (
      +                          (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  2678  00112C  C08C  F005         	movff	efgtoa@g,___fpclassifyf@x
  2679  001130  C08D  F006         	movff	efgtoa@g+1,___fpclassifyf@x+1
  2680  001134  C08E  F007         	movff	efgtoa@g+2,___fpclassifyf@x+2
  2681  001138  C08F  F008         	movff	efgtoa@g+3,___fpclassifyf@x+3
  2682  00113C  ECC0  F01B         	call	___fpclassifyf	;wreg free
  2683  001140  0405               	decf	?___fpclassifyf^0,w,c
  2684  001142  1006               	iorwf	(?___fpclassifyf+1)^0,w,c
  2685  001144  A4D8               	btfss	status,2,c
  2686  001146  EFA7  F008         	goto	u7651
  2687  00114A  EFA9  F008         	goto	u7650
  2688  00114E                     u7651:
  2689  00114E  EF00  F009         	goto	l7261
  2690  001152                     u7650:
  2691  001152  0EBF               	movlw	191
  2692  001154  6E4B               	movwf	??_efgtoa^0,c
  2693  001156  0EFF               	movlw	255
  2694  001158  6E4C               	movwf	(??_efgtoa+1)^0,c
  2695  00115A  504A               	movf	efgtoa@c^0,w,c
  2696  00115C  6E4D               	movwf	(??_efgtoa+2)^0,c
  2697  00115E  6A4E               	clrf	(??_efgtoa+3)^0,c
  2698  001160  504B               	movf	??_efgtoa^0,w,c
  2699  001162  264D               	addwf	(??_efgtoa+2)^0,f,c
  2700  001164  504C               	movf	(??_efgtoa+1)^0,w,c
  2701  001166  224E               	addwfc	(??_efgtoa+3)^0,f,c
  2702  001168  504E               	movf	(??_efgtoa+3)^0,w,c
  2703  00116A  E10A               	bnz	u7660
  2704  00116C  0E1A               	movlw	26
  2705  00116E  5C4D               	subwf	(??_efgtoa+2)^0,w,c
  2706  001170  A0D8               	btfss	status,0,c
  2707  001172  EFBD  F008         	goto	u7661
  2708  001176  EFC0  F008         	goto	u7660
  2709  00117A                     u7661:
  2710  00117A  0E01               	movlw	1
  2711  00117C  EFC1  F008         	goto	u7670
  2712  001180                     u7660:
  2713  001180  0E00               	movlw	0
  2714  001182                     u7670:
  2715  001182  0100               	movlb	0	; () banked
  2716  001184  6F62               	movwf	_efgtoa$2124& (0+255),b
  2717  001186  6B63               	clrf	(_efgtoa$2124+1)& (0+255),b
  2718  001188                     
  2719                           ; BSR set to: 0
  2720  001188  5162               	movf	_efgtoa$2124& (0+255),w,b
  2721  00118A  1163               	iorwf	(_efgtoa$2124+1)& (0+255),w,b
  2722  00118C  B4D8               	btfsc	status,2,c
  2723  00118E  EFCB  F008         	goto	u7681
  2724  001192  EFCD  F008         	goto	u7680
  2725  001196                     u7681:
  2726  001196  EFDB  F008         	goto	l7253
  2727  00119A                     u7680:
  2728  00119A                     
  2729                           ; BSR set to: 0
  2730                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 358:             
      +                          strcpy(&dbuf[n], "INF");
  2731  00119A  0E18               	movlw	low _dbuf
  2732  00119C  2592               	addwf	efgtoa@n& (0+255),w,b
  2733  00119E  6E05               	movwf	strcpy@dest^0,c
  2734  0011A0  0E01               	movlw	high _dbuf
  2735  0011A2  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2736  0011A4  6E06               	movwf	(strcpy@dest+1)^0,c
  2737  0011A6  0E5E               	movlw	low STR_5
  2738  0011A8  6E07               	movwf	strcpy@src^0,c
  2739  0011AA  0E10               	movlw	high STR_5
  2740  0011AC  6E08               	movwf	(strcpy@src+1)^0,c
  2741  0011AE  EC48  F023         	call	_strcpy	;wreg free
  2742                           
  2743                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 359:         } el
      +                          se {
  2744  0011B2  EFE7  F008         	goto	l7255
  2745  0011B6                     l7253:
  2746                           
  2747                           ; BSR set to: 0
  2748                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 360:             
      +                          strcpy(&dbuf[n], "inf");
  2749  0011B6  0E18               	movlw	low _dbuf
  2750  0011B8  2592               	addwf	efgtoa@n& (0+255),w,b
  2751  0011BA  6E05               	movwf	strcpy@dest^0,c
  2752  0011BC  0E01               	movlw	high _dbuf
  2753  0011BE  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2754  0011C0  6E06               	movwf	(strcpy@dest+1)^0,c
  2755  0011C2  0E66               	movlw	low STR_6
  2756  0011C4  6E07               	movwf	strcpy@src^0,c
  2757  0011C6  0E10               	movlw	high STR_6
  2758  0011C8  6E08               	movwf	(strcpy@src+1)^0,c
  2759  0011CA  EC48  F023         	call	_strcpy	;wreg free
  2760  0011CE                     l7255:
  2761                           
  2762                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 362:         w -=
      +                           ((sizeof("inf")/sizeof("inf"[0]))-1);
  2763  0011CE  0100               	movlb	0	; () banked
  2764  0011D0  0EFD               	movlw	253
  2765  0011D2  277E               	addwf	efgtoa@w& (0+255),f,b
  2766  0011D4  0EFF               	movlw	255
  2767  0011D6  237F               	addwfc	(efgtoa@w+1)& (0+255),f,b
  2768  0011D8                     
  2769                           ; BSR set to: 0
  2770                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 363:         retu
      +                          rn pad(fp, &dbuf[0], w);
  2771  0011D8  C044  F017         	movff	efgtoa@fp,pad@fp
  2772  0011DC  C045  F018         	movff	efgtoa@fp+1,pad@fp+1
  2773  0011E0  0E18               	movlw	low _dbuf
  2774  0011E2  6E19               	movwf	pad@buf^0,c
  2775  0011E4  0E01               	movlw	high _dbuf
  2776  0011E6  6E1A               	movwf	(pad@buf+1)^0,c
  2777  0011E8  C07E  F01B         	movff	efgtoa@w,pad@p
  2778  0011EC  C07F  F01C         	movff	efgtoa@w+1,pad@p+1
  2779  0011F0  EC91  F01D         	call	_pad	;wreg free
  2780  0011F4  C017  F044         	movff	?_pad,?_efgtoa
  2781  0011F8  C018  F045         	movff	?_pad+1,?_efgtoa+1
  2782  0011FC  EF8B  F00E         	goto	l1490
  2783  001200                     l7261:
  2784                           
  2785                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 366:         if (
      +                          (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  2786  001200  C08C  F005         	movff	efgtoa@g,___fpclassifyf@x
  2787  001204  C08D  F006         	movff	efgtoa@g+1,___fpclassifyf@x+1
  2788  001208  C08E  F007         	movff	efgtoa@g+2,___fpclassifyf@x+2
  2789  00120C  C08F  F008         	movff	efgtoa@g+3,___fpclassifyf@x+3
  2790  001210  ECC0  F01B         	call	___fpclassifyf	;wreg free
  2791  001214  5005               	movf	?___fpclassifyf^0,w,c
  2792  001216  1006               	iorwf	(?___fpclassifyf+1)^0,w,c
  2793  001218  A4D8               	btfss	status,2,c
  2794  00121A  EF11  F009         	goto	u7691
  2795  00121E  EF13  F009         	goto	u7690
  2796  001222                     u7691:
  2797  001222  EF6A  F009         	goto	l7279
  2798  001226                     u7690:
  2799  001226  0EBF               	movlw	191
  2800  001228  6E4B               	movwf	??_efgtoa^0,c
  2801  00122A  0EFF               	movlw	255
  2802  00122C  6E4C               	movwf	(??_efgtoa+1)^0,c
  2803  00122E  504A               	movf	efgtoa@c^0,w,c
  2804  001230  6E4D               	movwf	(??_efgtoa+2)^0,c
  2805  001232  6A4E               	clrf	(??_efgtoa+3)^0,c
  2806  001234  504B               	movf	??_efgtoa^0,w,c
  2807  001236  264D               	addwf	(??_efgtoa+2)^0,f,c
  2808  001238  504C               	movf	(??_efgtoa+1)^0,w,c
  2809  00123A  224E               	addwfc	(??_efgtoa+3)^0,f,c
  2810  00123C  504E               	movf	(??_efgtoa+3)^0,w,c
  2811  00123E  E10A               	bnz	u7700
  2812  001240  0E1A               	movlw	26
  2813  001242  5C4D               	subwf	(??_efgtoa+2)^0,w,c
  2814  001244  A0D8               	btfss	status,0,c
  2815  001246  EF27  F009         	goto	u7701
  2816  00124A  EF2A  F009         	goto	u7700
  2817  00124E                     u7701:
  2818  00124E  0E01               	movlw	1
  2819  001250  EF2B  F009         	goto	u7710
  2820  001254                     u7700:
  2821  001254  0E00               	movlw	0
  2822  001256                     u7710:
  2823  001256  0100               	movlb	0	; () banked
  2824  001258  6F64               	movwf	_efgtoa$2129& (0+255),b
  2825  00125A  6B65               	clrf	(_efgtoa$2129+1)& (0+255),b
  2826  00125C                     
  2827                           ; BSR set to: 0
  2828  00125C  5164               	movf	_efgtoa$2129& (0+255),w,b
  2829  00125E  1165               	iorwf	(_efgtoa$2129+1)& (0+255),w,b
  2830  001260  B4D8               	btfsc	status,2,c
  2831  001262  EF35  F009         	goto	u7721
  2832  001266  EF37  F009         	goto	u7720
  2833  00126A                     u7721:
  2834  00126A  EF45  F009         	goto	l7271
  2835  00126E                     u7720:
  2836  00126E                     
  2837                           ; BSR set to: 0
  2838                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 367:             
      +                          strcpy(&dbuf[n], "NAN");
  2839  00126E  0E18               	movlw	low _dbuf
  2840  001270  2592               	addwf	efgtoa@n& (0+255),w,b
  2841  001272  6E05               	movwf	strcpy@dest^0,c
  2842  001274  0E01               	movlw	high _dbuf
  2843  001276  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2844  001278  6E06               	movwf	(strcpy@dest+1)^0,c
  2845  00127A  0E62               	movlw	low STR_9
  2846  00127C  6E07               	movwf	strcpy@src^0,c
  2847  00127E  0E10               	movlw	high STR_9
  2848  001280  6E08               	movwf	(strcpy@src+1)^0,c
  2849  001282  EC48  F023         	call	_strcpy	;wreg free
  2850                           
  2851                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 368:         } el
      +                          se {
  2852  001286  EF51  F009         	goto	l7273
  2853  00128A                     l7271:
  2854                           
  2855                           ; BSR set to: 0
  2856                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 369:             
      +                          strcpy(&dbuf[n], "nan");
  2857  00128A  0E18               	movlw	low _dbuf
  2858  00128C  2592               	addwf	efgtoa@n& (0+255),w,b
  2859  00128E  6E05               	movwf	strcpy@dest^0,c
  2860  001290  0E01               	movlw	high _dbuf
  2861  001292  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  2862  001294  6E06               	movwf	(strcpy@dest+1)^0,c
  2863  001296  0E6A               	movlw	low STR_10
  2864  001298  6E07               	movwf	strcpy@src^0,c
  2865  00129A  0E10               	movlw	high STR_10
  2866  00129C  6E08               	movwf	(strcpy@src+1)^0,c
  2867  00129E  EC48  F023         	call	_strcpy	;wreg free
  2868  0012A2                     l7273:
  2869                           
  2870                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 371:         w -=
      +                           ((sizeof("inf")/sizeof("inf"[0]))-1);
  2871  0012A2  0100               	movlb	0	; () banked
  2872  0012A4  0EFD               	movlw	253
  2873  0012A6  277E               	addwf	efgtoa@w& (0+255),f,b
  2874  0012A8  0EFF               	movlw	255
  2875  0012AA  237F               	addwfc	(efgtoa@w+1)& (0+255),f,b
  2876  0012AC                     
  2877                           ; BSR set to: 0
  2878                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 372:         retu
      +                          rn pad(fp, &dbuf[0], w);
  2879  0012AC  C044  F017         	movff	efgtoa@fp,pad@fp
  2880  0012B0  C045  F018         	movff	efgtoa@fp+1,pad@fp+1
  2881  0012B4  0E18               	movlw	low _dbuf
  2882  0012B6  6E19               	movwf	pad@buf^0,c
  2883  0012B8  0E01               	movlw	high _dbuf
  2884  0012BA  6E1A               	movwf	(pad@buf+1)^0,c
  2885  0012BC  C07E  F01B         	movff	efgtoa@w,pad@p
  2886  0012C0  C07F  F01C         	movff	efgtoa@w+1,pad@p+1
  2887  0012C4  EC91  F01D         	call	_pad	;wreg free
  2888  0012C8  C017  F044         	movff	?_pad,?_efgtoa
  2889  0012CC  C018  F045         	movff	?_pad+1,?_efgtoa+1
  2890  0012D0  EF8B  F00E         	goto	l1490
  2891  0012D4                     l7279:
  2892                           
  2893                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 376:     u = 1.0;
  2894  0012D4  0E00               	movlw	0
  2895  0012D6  0100               	movlb	0	; () banked
  2896  0012D8  6F94               	movwf	efgtoa@u& (0+255),b
  2897  0012DA  0E00               	movlw	0
  2898  0012DC  6F95               	movwf	(efgtoa@u+1)& (0+255),b
  2899  0012DE  0E80               	movlw	128
  2900  0012E0  6F96               	movwf	(efgtoa@u+2)& (0+255),b
  2901  0012E2  0E3F               	movlw	63
  2902  0012E4  6F97               	movwf	(efgtoa@u+3)& (0+255),b
  2903                           
  2904                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 377:     e = 0;
  2905  0012E6  0E00               	movlw	0
  2906  0012E8  6F91               	movwf	(efgtoa@e+1)& (0+255),b
  2907  0012EA  0E00               	movlw	0
  2908  0012EC  6F90               	movwf	efgtoa@e& (0+255),b
  2909  0012EE                     
  2910                           ; BSR set to: 0
  2911                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 378:     if (!(g 
      +                          == 0.0)) {
  2912  0012EE  C08C  F005         	movff	efgtoa@g,___fleq@ff1
  2913  0012F2  C08D  F006         	movff	efgtoa@g+1,___fleq@ff1+1
  2914  0012F6  C08E  F007         	movff	efgtoa@g+2,___fleq@ff1+2
  2915  0012FA  C08F  F008         	movff	efgtoa@g+3,___fleq@ff1+3
  2916  0012FE  0E00               	movlw	0
  2917  001300  6E09               	movwf	___fleq@ff2^0,c
  2918  001302  0E00               	movlw	0
  2919  001304  6E0A               	movwf	(___fleq@ff2+1)^0,c
  2920  001306  0E00               	movlw	0
  2921  001308  6E0B               	movwf	(___fleq@ff2+2)^0,c
  2922  00130A  0E00               	movlw	0
  2923  00130C  6E0C               	movwf	(___fleq@ff2+3)^0,c
  2924  00130E  EC8B  F020         	call	___fleq	;wreg free
  2925  001312  B0D8               	btfsc	status,0,c
  2926  001314  EF8E  F009         	goto	u7731
  2927  001318  EF90  F009         	goto	u7730
  2928  00131C                     u7731:
  2929  00131C  EF13  F00A         	goto	l7297
  2930  001320                     u7730:
  2931  001320  EFAF  F009         	goto	l7289
  2932  001324                     l7285:
  2933                           
  2934                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 380:             
      +                          u = u*10.0;
  2935  001324  C094  F013         	movff	efgtoa@u,___flmul@b
  2936  001328  C095  F014         	movff	efgtoa@u+1,___flmul@b+1
  2937  00132C  C096  F015         	movff	efgtoa@u+2,___flmul@b+2
  2938  001330  C097  F016         	movff	efgtoa@u+3,___flmul@b+3
  2939  001334  0E00               	movlw	0
  2940  001336  6E17               	movwf	___flmul@a^0,c
  2941  001338  0E00               	movlw	0
  2942  00133A  6E18               	movwf	(___flmul@a+1)^0,c
  2943  00133C  0E20               	movlw	32
  2944  00133E  6E19               	movwf	(___flmul@a+2)^0,c
  2945  001340  0E41               	movlw	65
  2946  001342  6E1A               	movwf	(___flmul@a+3)^0,c
  2947  001344  EC9F  F013         	call	___flmul	;wreg free
  2948  001348  C013  F094         	movff	?___flmul,efgtoa@u
  2949  00134C  C014  F095         	movff	?___flmul+1,efgtoa@u+1
  2950  001350  C015  F096         	movff	?___flmul+2,efgtoa@u+2
  2951  001354  C016  F097         	movff	?___flmul+3,efgtoa@u+3
  2952  001358                     
  2953                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 381:             
      +                          ++e;
  2954  001358  0100               	movlb	0	; () banked
  2955  00135A  4B90               	infsnz	efgtoa@e& (0+255),f,b
  2956  00135C  2B91               	incf	(efgtoa@e+1)& (0+255),f,b
  2957  00135E                     l7289:
  2958                           
  2959                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 379:         whil
      +                          e (!(g < (u*10.0))) {
  2960  00135E  C08C  F02C         	movff	efgtoa@g,___flge@ff1
  2961  001362  C08D  F02D         	movff	efgtoa@g+1,___flge@ff1+1
  2962  001366  C08E  F02E         	movff	efgtoa@g+2,___flge@ff1+2
  2963  00136A  C08F  F02F         	movff	efgtoa@g+3,___flge@ff1+3
  2964  00136E  0E00               	movlw	0
  2965  001370  6E17               	movwf	___flmul@a^0,c
  2966  001372  0E00               	movlw	0
  2967  001374  6E18               	movwf	(___flmul@a+1)^0,c
  2968  001376  0E20               	movlw	32
  2969  001378  6E19               	movwf	(___flmul@a+2)^0,c
  2970  00137A  0E41               	movlw	65
  2971  00137C  6E1A               	movwf	(___flmul@a+3)^0,c
  2972  00137E  C094  F013         	movff	efgtoa@u,___flmul@b
  2973  001382  C095  F014         	movff	efgtoa@u+1,___flmul@b+1
  2974  001386  C096  F015         	movff	efgtoa@u+2,___flmul@b+2
  2975  00138A  C097  F016         	movff	efgtoa@u+3,___flmul@b+3
  2976  00138E  EC9F  F013         	call	___flmul	;wreg free
  2977  001392  C013  F030         	movff	?___flmul,___flge@ff2
  2978  001396  C014  F031         	movff	?___flmul+1,___flge@ff2+1
  2979  00139A  C015  F032         	movff	?___flmul+2,___flge@ff2+2
  2980  00139E  C016  F033         	movff	?___flmul+3,___flge@ff2+3
  2981  0013A2  EC3E  F01B         	call	___flge	;wreg free
  2982  0013A6  B0D8               	btfsc	status,0,c
  2983  0013A8  EFD8  F009         	goto	u7741
  2984  0013AC  EFDA  F009         	goto	u7740
  2985  0013B0                     u7741:
  2986  0013B0  EF92  F009         	goto	l7285
  2987  0013B4                     u7740:
  2988  0013B4  EFFA  F009         	goto	l7295
  2989  0013B8                     l7291:
  2990                           
  2991                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 384:             
      +                          u = u/10.0;
  2992  0013B8  C094  F005         	movff	efgtoa@u,___fldiv@b
  2993  0013BC  C095  F006         	movff	efgtoa@u+1,___fldiv@b+1
  2994  0013C0  C096  F007         	movff	efgtoa@u+2,___fldiv@b+2
  2995  0013C4  C097  F008         	movff	efgtoa@u+3,___fldiv@b+3
  2996  0013C8  0E00               	movlw	0
  2997  0013CA  6E09               	movwf	___fldiv@a^0,c
  2998  0013CC  0E00               	movlw	0
  2999  0013CE  6E0A               	movwf	(___fldiv@a+1)^0,c
  3000  0013D0  0E20               	movlw	32
  3001  0013D2  6E0B               	movwf	(___fldiv@a+2)^0,c
  3002  0013D4  0E41               	movlw	65
  3003  0013D6  6E0C               	movwf	(___fldiv@a+3)^0,c
  3004  0013D8  ECB4  F015         	call	___fldiv	;wreg free
  3005  0013DC  C005  F094         	movff	?___fldiv,efgtoa@u
  3006  0013E0  C006  F095         	movff	?___fldiv+1,efgtoa@u+1
  3007  0013E4  C007  F096         	movff	?___fldiv+2,efgtoa@u+2
  3008  0013E8  C008  F097         	movff	?___fldiv+3,efgtoa@u+3
  3009  0013EC                     
  3010                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 385:             
      +                          --e;
  3011  0013EC  0100               	movlb	0	; () banked
  3012  0013EE  0790               	decf	efgtoa@e& (0+255),f,b
  3013  0013F0  A0D8               	btfss	status,0,c
  3014  0013F2  0791               	decf	(efgtoa@e+1)& (0+255),f,b
  3015  0013F4                     l7295:
  3016                           
  3017                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 383:         whil
      +                          e (g < u) {
  3018  0013F4  C08C  F02C         	movff	efgtoa@g,___flge@ff1
  3019  0013F8  C08D  F02D         	movff	efgtoa@g+1,___flge@ff1+1
  3020  0013FC  C08E  F02E         	movff	efgtoa@g+2,___flge@ff1+2
  3021  001400  C08F  F02F         	movff	efgtoa@g+3,___flge@ff1+3
  3022  001404  C094  F030         	movff	efgtoa@u,___flge@ff2
  3023  001408  C095  F031         	movff	efgtoa@u+1,___flge@ff2+1
  3024  00140C  C096  F032         	movff	efgtoa@u+2,___flge@ff2+2
  3025  001410  C097  F033         	movff	efgtoa@u+3,___flge@ff2+3
  3026  001414  EC3E  F01B         	call	___flge	;wreg free
  3027  001418  A0D8               	btfss	status,0,c
  3028  00141A  EF11  F00A         	goto	u7751
  3029  00141E  EF13  F00A         	goto	u7750
  3030  001422                     u7751:
  3031  001422  EFDC  F009         	goto	l7291
  3032  001426                     u7750:
  3033  001426                     l7297:
  3034                           
  3035                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 390:     mode = (
      +                          char)tolower((int)c);
  3036  001426  C04A  F00B         	movff	efgtoa@c,tolower@c
  3037  00142A  6A0C               	clrf	(tolower@c+1)^0,c
  3038  00142C  EC18  F023         	call	_tolower	;wreg free
  3039  001430  500B               	movf	?_tolower^0,w,c
  3040  001432  0100               	movlb	0	; () banked
  3041  001434  6F81               	movwf	efgtoa@mode& (0+255),b
  3042  001436                     
  3043                           ; BSR set to: 0
  3044                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 391:     nmode = 
      +                          mode;
  3045  001436  C081  F080         	movff	efgtoa@mode,efgtoa@nmode
  3046  00143A                     
  3047                           ; BSR set to: 0
  3048                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 392:     if (mode
      +                           == 'g') {
  3049  00143A  0E67               	movlw	103
  3050  00143C  1981               	xorwf	efgtoa@mode& (0+255),w,b
  3051  00143E  A4D8               	btfss	status,2,c
  3052  001440  EF24  F00A         	goto	u7761
  3053  001444  EF26  F00A         	goto	u7760
  3054  001448                     u7761:
  3055  001448  EF4C  F00A         	goto	l7311
  3056  00144C                     u7760:
  3057  00144C                     
  3058                           ; BSR set to: 0
  3059                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 393:   if (prec =
      +                          = 0) {
  3060  00144C  51F8               	movf	_prec& (0+255),w,b
  3061  00144E  11F9               	iorwf	(_prec+1)& (0+255),w,b
  3062  001450  A4D8               	btfss	status,2,c
  3063  001452  EF2D  F00A         	goto	u7771
  3064  001456  EF2F  F00A         	goto	u7770
  3065  00145A                     u7771:
  3066  00145A  EF33  F00A         	goto	l7307
  3067  00145E                     u7770:
  3068  00145E                     
  3069                           ; BSR set to: 0
  3070                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 394:    prec = 1;
  3071  00145E  0E00               	movlw	0
  3072  001460  6FF9               	movwf	(_prec+1)& (0+255),b
  3073  001462  0E01               	movlw	1
  3074  001464  6FF8               	movwf	_prec& (0+255),b
  3075  001466                     l7307:
  3076                           
  3077                           ; BSR set to: 0
  3078                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 396:         p = 
      +                          (0 < prec) ? prec : 6;
  3079  001466  BFF9               	btfsc	(_prec+1)& (0+255),7,b
  3080  001468  EF40  F00A         	goto	u7780
  3081  00146C  51F9               	movf	(_prec+1)& (0+255),w,b
  3082  00146E  E106               	bnz	u7781
  3083  001470  05F8               	decf	_prec& (0+255),w,b
  3084  001472  B0D8               	btfsc	status,0,c
  3085  001474  EF3E  F00A         	goto	u7781
  3086  001478  EF40  F00A         	goto	u7780
  3087  00147C                     u7781:
  3088  00147C  EF46  F00A         	goto	l1508
  3089  001480                     u7780:
  3090  001480                     l7309:
  3091                           
  3092                           ; BSR set to: 0
  3093  001480  0E00               	movlw	0
  3094  001482  6F7D               	movwf	(efgtoa@p+1)& (0+255),b
  3095  001484  0E06               	movlw	6
  3096  001486  6F7C               	movwf	efgtoa@p& (0+255),b
  3097  001488  EF55  F00A         	goto	l7317
  3098  00148C                     l1508:
  3099                           
  3100                           ; BSR set to: 0
  3101  00148C  C0F8  F07C         	movff	_prec,efgtoa@p
  3102  001490  C0F9  F07D         	movff	_prec+1,efgtoa@p+1
  3103  001494  EF55  F00A         	goto	l7317
  3104  001498                     l7311:
  3105                           
  3106                           ; BSR set to: 0
  3107                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 398:         p = 
      +                          (prec < 0) ? 6 : prec;
  3108  001498  BFF9               	btfsc	(_prec+1)& (0+255),7,b
  3109  00149A  EF51  F00A         	goto	u7791
  3110  00149E  EF53  F00A         	goto	u7790
  3111  0014A2                     u7791:
  3112  0014A2  EF40  F00A         	goto	l7309
  3113  0014A6                     u7790:
  3114  0014A6  EF46  F00A         	goto	l1508
  3115  0014AA                     l7317:
  3116                           
  3117                           ; BSR set to: 0
  3118                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 402:     if (mode
      +                           == 'g') {
  3119  0014AA  0E67               	movlw	103
  3120  0014AC  1981               	xorwf	efgtoa@mode& (0+255),w,b
  3121  0014AE  A4D8               	btfss	status,2,c
  3122  0014B0  EF5C  F00A         	goto	u7801
  3123  0014B4  EF5E  F00A         	goto	u7800
  3124  0014B8                     u7801:
  3125  0014B8  EF8D  F00A         	goto	l7327
  3126  0014BC                     u7800:
  3127  0014BC                     
  3128                           ; BSR set to: 0
  3129                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 403:         if (
      +                          !(e < -4) && !((p - 1) < e)) {
  3130  0014BC  AF91               	btfss	(efgtoa@e+1)& (0+255),7,b
  3131  0014BE  EF6C  F00A         	goto	u7810
  3132  0014C2  0EFC               	movlw	252
  3133  0014C4  5D90               	subwf	efgtoa@e& (0+255),w,b
  3134  0014C6  0EFF               	movlw	255
  3135  0014C8  5991               	subwfb	(efgtoa@e+1)& (0+255),w,b
  3136  0014CA  A0D8               	btfss	status,0,c
  3137  0014CC  EF6A  F00A         	goto	u7811
  3138  0014D0  EF6C  F00A         	goto	u7810
  3139  0014D4                     u7811:
  3140  0014D4  EF8B  F00A         	goto	l7325
  3141  0014D8                     u7810:
  3142  0014D8                     
  3143                           ; BSR set to: 0
  3144  0014D8  0EFF               	movlw	255
  3145  0014DA  6E4B               	movwf	??_efgtoa^0,c
  3146  0014DC  0EFF               	movlw	255
  3147  0014DE  6E4C               	movwf	(??_efgtoa+1)^0,c
  3148  0014E0  C07C  F04D         	movff	efgtoa@p,??_efgtoa+2
  3149  0014E4  C07D  F04E         	movff	efgtoa@p+1,??_efgtoa+3
  3150  0014E8  504B               	movf	??_efgtoa^0,w,c
  3151  0014EA  264D               	addwf	(??_efgtoa+2)^0,f,c
  3152  0014EC  504C               	movf	(??_efgtoa+1)^0,w,c
  3153  0014EE  224E               	addwfc	(??_efgtoa+3)^0,f,c
  3154  0014F0  5190               	movf	efgtoa@e& (0+255),w,b
  3155  0014F2  5C4D               	subwf	(??_efgtoa+2)^0,w,c
  3156  0014F4  504E               	movf	(??_efgtoa+3)^0,w,c
  3157  0014F6  0A80               	xorlw	128
  3158  0014F8  6E4F               	movwf	(??_efgtoa+4)^0,c
  3159  0014FA  5191               	movf	(efgtoa@e+1)& (0+255),w,b
  3160  0014FC  0A80               	xorlw	128
  3161  0014FE  584F               	subwfb	(??_efgtoa+4)^0,w,c
  3162  001500  A0D8               	btfss	status,0,c
  3163  001502  EF85  F00A         	goto	u7821
  3164  001506  EF87  F00A         	goto	u7820
  3165  00150A                     u7821:
  3166  00150A  EF8B  F00A         	goto	l7325
  3167  00150E                     u7820:
  3168  00150E                     
  3169                           ; BSR set to: 0
  3170                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 404:             
      +                          nmode = 'f';
  3171  00150E  0E66               	movlw	102
  3172  001510  6F80               	movwf	efgtoa@nmode& (0+255),b
  3173                           
  3174                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 405:         } el
      +                          se {
  3175  001512  EF8D  F00A         	goto	l7327
  3176  001516                     l7325:
  3177                           
  3178                           ; BSR set to: 0
  3179                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 406:             
      +                          nmode = 'e';
  3180  001516  0E65               	movlw	101
  3181  001518  6F80               	movwf	efgtoa@nmode& (0+255),b
  3182  00151A                     l7327:
  3183                           
  3184                           ; BSR set to: 0
  3185                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 411:     m = p;
  3186  00151A  C07C  F072         	movff	efgtoa@p,efgtoa@m
  3187  00151E  C07D  F073         	movff	efgtoa@p+1,efgtoa@m+1
  3188  001522                     
  3189                           ; BSR set to: 0
  3190                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 412:     if (!(mo
      +                          de == 'g') || ((nmode == 'f') && (e < 0))) {
  3191  001522  0E67               	movlw	103
  3192  001524  1981               	xorwf	efgtoa@mode& (0+255),w,b
  3193  001526  A4D8               	btfss	status,2,c
  3194  001528  EF98  F00A         	goto	u7831
  3195  00152C  EF9A  F00A         	goto	u7830
  3196  001530                     u7831:
  3197  001530  EFAA  F00A         	goto	l7335
  3198  001534                     u7830:
  3199  001534                     
  3200                           ; BSR set to: 0
  3201  001534  0E66               	movlw	102
  3202  001536  1980               	xorwf	efgtoa@nmode& (0+255),w,b
  3203  001538  A4D8               	btfss	status,2,c
  3204  00153A  EFA1  F00A         	goto	u7841
  3205  00153E  EFA3  F00A         	goto	u7840
  3206  001542                     u7841:
  3207  001542  EFAC  F00A         	goto	l7337
  3208  001546                     u7840:
  3209  001546                     
  3210                           ; BSR set to: 0
  3211  001546  BF91               	btfsc	(efgtoa@e+1)& (0+255),7,b
  3212  001548  EFAA  F00A         	goto	u7850
  3213  00154C  EFA8  F00A         	goto	u7851
  3214  001550                     u7851:
  3215  001550  EFAC  F00A         	goto	l7337
  3216  001554                     u7850:
  3217  001554                     l7335:
  3218                           
  3219                           ; BSR set to: 0
  3220                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 413:         ++m;
  3221  001554  4B72               	infsnz	efgtoa@m& (0+255),f,b
  3222  001556  2B73               	incf	(efgtoa@m+1)& (0+255),f,b
  3223  001558                     l7337:
  3224                           
  3225                           ; BSR set to: 0
  3226                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 417:     if (nmod
      +                          e == 'f') {
  3227  001558  0E66               	movlw	102
  3228  00155A  1980               	xorwf	efgtoa@nmode& (0+255),w,b
  3229  00155C  A4D8               	btfss	status,2,c
  3230  00155E  EFB3  F00A         	goto	u7861
  3231  001562  EFB5  F00A         	goto	u7860
  3232  001566                     u7861:
  3233  001566  EFD5  F00A         	goto	l7347
  3234  00156A                     u7860:
  3235  00156A                     
  3236                           ; BSR set to: 0
  3237                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 418:         if (
      +                          e < 0) {
  3238  00156A  BF91               	btfsc	(efgtoa@e+1)& (0+255),7,b
  3239  00156C  EFBC  F00A         	goto	u7870
  3240  001570  EFBA  F00A         	goto	u7871
  3241  001574                     u7871:
  3242  001574  EFC8  F00A         	goto	l7343
  3243  001578                     u7870:
  3244  001578                     
  3245                           ; BSR set to: 0
  3246                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 419:             
      +                          u = 1.0;
  3247  001578  0E00               	movlw	0
  3248  00157A  6F94               	movwf	efgtoa@u& (0+255),b
  3249  00157C  0E00               	movlw	0
  3250  00157E  6F95               	movwf	(efgtoa@u+1)& (0+255),b
  3251  001580  0E80               	movlw	128
  3252  001582  6F96               	movwf	(efgtoa@u+2)& (0+255),b
  3253  001584  0E3F               	movlw	63
  3254  001586  6F97               	movwf	(efgtoa@u+3)& (0+255),b
  3255                           
  3256                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 420:             
      +                          e = 0;
  3257  001588  0E00               	movlw	0
  3258  00158A  6F91               	movwf	(efgtoa@e+1)& (0+255),b
  3259  00158C  0E00               	movlw	0
  3260  00158E  6F90               	movwf	efgtoa@e& (0+255),b
  3261  001590                     l7343:
  3262                           
  3263                           ; BSR set to: 0
  3264                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 422:         if (
      +                          !(mode == 'g')) {
  3265  001590  0E67               	movlw	103
  3266  001592  1981               	xorwf	efgtoa@mode& (0+255),w,b
  3267  001594  B4D8               	btfsc	status,2,c
  3268  001596  EFCF  F00A         	goto	u7881
  3269  00159A  EFD1  F00A         	goto	u7880
  3270  00159E                     u7881:
  3271  00159E  EFD5  F00A         	goto	l7347
  3272  0015A2                     u7880:
  3273  0015A2                     
  3274                           ; BSR set to: 0
  3275                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 423:             
      +                          m += e;
  3276  0015A2  5190               	movf	efgtoa@e& (0+255),w,b
  3277  0015A4  2772               	addwf	efgtoa@m& (0+255),f,b
  3278  0015A6  5191               	movf	(efgtoa@e+1)& (0+255),w,b
  3279  0015A8  2373               	addwfc	(efgtoa@m+1)& (0+255),f,b
  3280  0015AA                     l7347:
  3281                           
  3282                           ; BSR set to: 0
  3283                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 428:     i = 0;
  3284  0015AA  0E00               	movlw	0
  3285  0015AC  6F8B               	movwf	(efgtoa@i+1)& (0+255),b
  3286  0015AE  0E00               	movlw	0
  3287  0015B0  6F8A               	movwf	efgtoa@i& (0+255),b
  3288  0015B2                     
  3289                           ; BSR set to: 0
  3290                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 429:     h = g;
  3291  0015B2  C08C  F082         	movff	efgtoa@g,efgtoa@h
  3292  0015B6  C08D  F083         	movff	efgtoa@g+1,efgtoa@h+1
  3293  0015BA  C08E  F084         	movff	efgtoa@g+2,efgtoa@h+2
  3294  0015BE  C08F  F085         	movff	efgtoa@g+3,efgtoa@h+3
  3295  0015C2                     
  3296                           ; BSR set to: 0
  3297                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 430:     ou = u;
  3298  0015C2  C094  F074         	movff	efgtoa@u,efgtoa@ou
  3299  0015C6  C095  F075         	movff	efgtoa@u+1,efgtoa@ou+1
  3300  0015CA  C096  F076         	movff	efgtoa@u+2,efgtoa@ou+2
  3301  0015CE  C097  F077         	movff	efgtoa@u+3,efgtoa@ou+3
  3302                           
  3303                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 431:     while (i
      +                           < m) {
  3304  0015D2  EF66  F00B         	goto	l7361
  3305  0015D6                     l7353:
  3306                           
  3307                           ; BSR set to: 0
  3308                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 432:         l = 
      +                          floorf(h/u);
  3309  0015D6  C082  F005         	movff	efgtoa@h,___fldiv@b
  3310  0015DA  C083  F006         	movff	efgtoa@h+1,___fldiv@b+1
  3311  0015DE  C084  F007         	movff	efgtoa@h+2,___fldiv@b+2
  3312  0015E2  C085  F008         	movff	efgtoa@h+3,___fldiv@b+3
  3313  0015E6  C094  F009         	movff	efgtoa@u,___fldiv@a
  3314  0015EA  C095  F00A         	movff	efgtoa@u+1,___fldiv@a+1
  3315  0015EE  C096  F00B         	movff	efgtoa@u+2,___fldiv@a+2
  3316  0015F2  C097  F00C         	movff	efgtoa@u+3,___fldiv@a+3
  3317  0015F6  ECB4  F015         	call	___fldiv	;wreg free
  3318  0015FA  C005  F01E         	movff	?___fldiv,floorf@x
  3319  0015FE  C006  F01F         	movff	?___fldiv+1,floorf@x+1
  3320  001602  C007  F020         	movff	?___fldiv+2,floorf@x+2
  3321  001606  C008  F021         	movff	?___fldiv+3,floorf@x+3
  3322  00160A  EC81  F017         	call	_floorf	;wreg free
  3323  00160E  C01E  F086         	movff	?_floorf,efgtoa@l
  3324  001612  C01F  F087         	movff	?_floorf+1,efgtoa@l+1
  3325  001616  C020  F088         	movff	?_floorf+2,efgtoa@l+2
  3326  00161A  C021  F089         	movff	?_floorf+3,efgtoa@l+3
  3327                           
  3328                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 433:         d = 
      +                          (int)l;
  3329  00161E  C086  F005         	movff	efgtoa@l,___fltol@f1
  3330  001622  C087  F006         	movff	efgtoa@l+1,___fltol@f1+1
  3331  001626  C088  F007         	movff	efgtoa@l+2,___fltol@f1+2
  3332  00162A  C089  F008         	movff	efgtoa@l+3,___fltol@f1+3
  3333  00162E  ECBB  F01A         	call	___fltol	;wreg free
  3334  001632  C005  F078         	movff	?___fltol,efgtoa@d
  3335  001636  C006  F079         	movff	?___fltol+1,efgtoa@d+1
  3336  00163A                     
  3337                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 434:         h -=
      +                           l*u;
  3338  00163A  C082  F03C         	movff	efgtoa@h,___flsub@b
  3339  00163E  C083  F03D         	movff	efgtoa@h+1,___flsub@b+1
  3340  001642  C084  F03E         	movff	efgtoa@h+2,___flsub@b+2
  3341  001646  C085  F03F         	movff	efgtoa@h+3,___flsub@b+3
  3342  00164A  C094  F017         	movff	efgtoa@u,___flmul@a
  3343  00164E  C095  F018         	movff	efgtoa@u+1,___flmul@a+1
  3344  001652  C096  F019         	movff	efgtoa@u+2,___flmul@a+2
  3345  001656  C097  F01A         	movff	efgtoa@u+3,___flmul@a+3
  3346  00165A  C086  F013         	movff	efgtoa@l,___flmul@b
  3347  00165E  C087  F014         	movff	efgtoa@l+1,___flmul@b+1
  3348  001662  C088  F015         	movff	efgtoa@l+2,___flmul@b+2
  3349  001666  C089  F016         	movff	efgtoa@l+3,___flmul@b+3
  3350  00166A  EC9F  F013         	call	___flmul	;wreg free
  3351  00166E  C013  F040         	movff	?___flmul,___flsub@a
  3352  001672  C014  F041         	movff	?___flmul+1,___flsub@a+1
  3353  001676  C015  F042         	movff	?___flmul+2,___flsub@a+2
  3354  00167A  C016  F043         	movff	?___flmul+3,___flsub@a+3
  3355  00167E  ECF9  F023         	call	___flsub	;wreg free
  3356  001682  C03C  F082         	movff	?___flsub,efgtoa@h
  3357  001686  C03D  F083         	movff	?___flsub+1,efgtoa@h+1
  3358  00168A  C03E  F084         	movff	?___flsub+2,efgtoa@h+2
  3359  00168E  C03F  F085         	movff	?___flsub+3,efgtoa@h+3
  3360  001692                     
  3361                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 435:         u = 
      +                          u/10.0;
  3362  001692  C094  F005         	movff	efgtoa@u,___fldiv@b
  3363  001696  C095  F006         	movff	efgtoa@u+1,___fldiv@b+1
  3364  00169A  C096  F007         	movff	efgtoa@u+2,___fldiv@b+2
  3365  00169E  C097  F008         	movff	efgtoa@u+3,___fldiv@b+3
  3366  0016A2  0E00               	movlw	0
  3367  0016A4  6E09               	movwf	___fldiv@a^0,c
  3368  0016A6  0E00               	movlw	0
  3369  0016A8  6E0A               	movwf	(___fldiv@a+1)^0,c
  3370  0016AA  0E20               	movlw	32
  3371  0016AC  6E0B               	movwf	(___fldiv@a+2)^0,c
  3372  0016AE  0E41               	movlw	65
  3373  0016B0  6E0C               	movwf	(___fldiv@a+3)^0,c
  3374  0016B2  ECB4  F015         	call	___fldiv	;wreg free
  3375  0016B6  C005  F094         	movff	?___fldiv,efgtoa@u
  3376  0016BA  C006  F095         	movff	?___fldiv+1,efgtoa@u+1
  3377  0016BE  C007  F096         	movff	?___fldiv+2,efgtoa@u+2
  3378  0016C2  C008  F097         	movff	?___fldiv+3,efgtoa@u+3
  3379  0016C6                     
  3380                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 436:         ++i;
  3381  0016C6  0100               	movlb	0	; () banked
  3382  0016C8  4B8A               	infsnz	efgtoa@i& (0+255),f,b
  3383  0016CA  2B8B               	incf	(efgtoa@i+1)& (0+255),f,b
  3384  0016CC                     l7361:
  3385                           
  3386                           ; BSR set to: 0
  3387                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 431:     while (i
      +                           < m) {
  3388  0016CC  5172               	movf	efgtoa@m& (0+255),w,b
  3389  0016CE  5D8A               	subwf	efgtoa@i& (0+255),w,b
  3390  0016D0  518B               	movf	(efgtoa@i+1)& (0+255),w,b
  3391  0016D2  0A80               	xorlw	128
  3392  0016D4  6E4B               	movwf	??_efgtoa^0,c
  3393  0016D6  5173               	movf	(efgtoa@m+1)& (0+255),w,b
  3394  0016D8  0A80               	xorlw	128
  3395  0016DA  584B               	subwfb	??_efgtoa^0,w,c
  3396  0016DC  A0D8               	btfss	status,0,c
  3397  0016DE  EF73  F00B         	goto	u7891
  3398  0016E2  EF75  F00B         	goto	u7890
  3399  0016E6                     u7891:
  3400  0016E6  EFEB  F00A         	goto	l7353
  3401  0016EA                     u7890:
  3402  0016EA                     
  3403                           ; BSR set to: 0
  3404                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 440:     l = u*5.
      +                          0;
  3405  0016EA  C094  F013         	movff	efgtoa@u,___flmul@b
  3406  0016EE  C095  F014         	movff	efgtoa@u+1,___flmul@b+1
  3407  0016F2  C096  F015         	movff	efgtoa@u+2,___flmul@b+2
  3408  0016F6  C097  F016         	movff	efgtoa@u+3,___flmul@b+3
  3409  0016FA  0E00               	movlw	0
  3410  0016FC  6E17               	movwf	___flmul@a^0,c
  3411  0016FE  0E00               	movlw	0
  3412  001700  6E18               	movwf	(___flmul@a+1)^0,c
  3413  001702  0EA0               	movlw	160
  3414  001704  6E19               	movwf	(___flmul@a+2)^0,c
  3415  001706  0E40               	movlw	64
  3416  001708  6E1A               	movwf	(___flmul@a+3)^0,c
  3417  00170A  EC9F  F013         	call	___flmul	;wreg free
  3418  00170E  C013  F086         	movff	?___flmul,efgtoa@l
  3419  001712  C014  F087         	movff	?___flmul+1,efgtoa@l+1
  3420  001716  C015  F088         	movff	?___flmul+2,efgtoa@l+2
  3421  00171A  C016  F089         	movff	?___flmul+3,efgtoa@l+3
  3422  00171E                     
  3423                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 441:     if (h < 
      +                          l) {
  3424  00171E  C082  F02C         	movff	efgtoa@h,___flge@ff1
  3425  001722  C083  F02D         	movff	efgtoa@h+1,___flge@ff1+1
  3426  001726  C084  F02E         	movff	efgtoa@h+2,___flge@ff1+2
  3427  00172A  C085  F02F         	movff	efgtoa@h+3,___flge@ff1+3
  3428  00172E  C086  F030         	movff	efgtoa@l,___flge@ff2
  3429  001732  C087  F031         	movff	efgtoa@l+1,___flge@ff2+1
  3430  001736  C088  F032         	movff	efgtoa@l+2,___flge@ff2+2
  3431  00173A  C089  F033         	movff	efgtoa@l+3,___flge@ff2+3
  3432  00173E  EC3E  F01B         	call	___flge	;wreg free
  3433  001742  B0D8               	btfsc	status,0,c
  3434  001744  EFA6  F00B         	goto	u7901
  3435  001748  EFA8  F00B         	goto	u7900
  3436  00174C                     u7901:
  3437  00174C  EFB3  F00B         	goto	l7369
  3438  001750                     u7900:
  3439  001750                     
  3440                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 442:         l = 
      +                          0.0;
  3441  001750  0E00               	movlw	0
  3442  001752  0100               	movlb	0	; () banked
  3443  001754  6F86               	movwf	efgtoa@l& (0+255),b
  3444  001756  0E00               	movlw	0
  3445  001758  6F87               	movwf	(efgtoa@l+1)& (0+255),b
  3446  00175A  0E00               	movlw	0
  3447  00175C  6F88               	movwf	(efgtoa@l+2)& (0+255),b
  3448  00175E  0E00               	movlw	0
  3449  001760  6F89               	movwf	(efgtoa@l+3)& (0+255),b
  3450                           
  3451                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 443:     } else {
  3452  001762  EFDC  F00B         	goto	l7375
  3453  001766                     l7369:
  3454                           
  3455                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 445:         if (
      +                          (h == l) && !(d % 2)) {
  3456  001766  C082  F005         	movff	efgtoa@h,___fleq@ff1
  3457  00176A  C083  F006         	movff	efgtoa@h+1,___fleq@ff1+1
  3458  00176E  C084  F007         	movff	efgtoa@h+2,___fleq@ff1+2
  3459  001772  C085  F008         	movff	efgtoa@h+3,___fleq@ff1+3
  3460  001776  C086  F009         	movff	efgtoa@l,___fleq@ff2
  3461  00177A  C087  F00A         	movff	efgtoa@l+1,___fleq@ff2+1
  3462  00177E  C088  F00B         	movff	efgtoa@l+2,___fleq@ff2+2
  3463  001782  C089  F00C         	movff	efgtoa@l+3,___fleq@ff2+3
  3464  001786  EC8B  F020         	call	___fleq	;wreg free
  3465  00178A  A0D8               	btfss	status,0,c
  3466  00178C  EFCA  F00B         	goto	u7911
  3467  001790  EFCC  F00B         	goto	u7910
  3468  001794                     u7911:
  3469  001794  EFDC  F00B         	goto	l7375
  3470  001798                     u7910:
  3471  001798  0100               	movlb	0	; () banked
  3472  00179A  B178               	btfsc	efgtoa@d& (0+255),0,b
  3473  00179C  EFD2  F00B         	goto	u7921
  3474  0017A0  EFD4  F00B         	goto	u7920
  3475  0017A4                     u7921:
  3476  0017A4  EFDC  F00B         	goto	l7375
  3477  0017A8                     u7920:
  3478  0017A8                     
  3479                           ; BSR set to: 0
  3480                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 446:             
      +                          l = 0.0;
  3481  0017A8  0E00               	movlw	0
  3482  0017AA  6F86               	movwf	efgtoa@l& (0+255),b
  3483  0017AC  0E00               	movlw	0
  3484  0017AE  6F87               	movwf	(efgtoa@l+1)& (0+255),b
  3485  0017B0  0E00               	movlw	0
  3486  0017B2  6F88               	movwf	(efgtoa@l+2)& (0+255),b
  3487  0017B4  0E00               	movlw	0
  3488  0017B6  6F89               	movwf	(efgtoa@l+3)& (0+255),b
  3489  0017B8                     l7375:
  3490                           
  3491                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 451:     h = g + 
      +                          l;
  3492  0017B8  C08C  F02C         	movff	efgtoa@g,___fladd@b
  3493  0017BC  C08D  F02D         	movff	efgtoa@g+1,___fladd@b+1
  3494  0017C0  C08E  F02E         	movff	efgtoa@g+2,___fladd@b+2
  3495  0017C4  C08F  F02F         	movff	efgtoa@g+3,___fladd@b+3
  3496  0017C8  C086  F030         	movff	efgtoa@l,___fladd@a
  3497  0017CC  C087  F031         	movff	efgtoa@l+1,___fladd@a+1
  3498  0017D0  C088  F032         	movff	efgtoa@l+2,___fladd@a+2
  3499  0017D4  C089  F033         	movff	efgtoa@l+3,___fladd@a+3
  3500  0017D8  EC3F  F011         	call	___fladd	;wreg free
  3501  0017DC  C02C  F082         	movff	?___fladd,efgtoa@h
  3502  0017E0  C02D  F083         	movff	?___fladd+1,efgtoa@h+1
  3503  0017E4  C02E  F084         	movff	?___fladd+2,efgtoa@h+2
  3504  0017E8  C02F  F085         	movff	?___fladd+3,efgtoa@h+3
  3505  0017EC                     
  3506                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 453:  if (h >= (o
      +                          u*10.0)) {
  3507  0017EC  C082  F02C         	movff	efgtoa@h,___flge@ff1
  3508  0017F0  C083  F02D         	movff	efgtoa@h+1,___flge@ff1+1
  3509  0017F4  C084  F02E         	movff	efgtoa@h+2,___flge@ff1+2
  3510  0017F8  C085  F02F         	movff	efgtoa@h+3,___flge@ff1+3
  3511  0017FC  0E00               	movlw	0
  3512  0017FE  6E17               	movwf	___flmul@a^0,c
  3513  001800  0E00               	movlw	0
  3514  001802  6E18               	movwf	(___flmul@a+1)^0,c
  3515  001804  0E20               	movlw	32
  3516  001806  6E19               	movwf	(___flmul@a+2)^0,c
  3517  001808  0E41               	movlw	65
  3518  00180A  6E1A               	movwf	(___flmul@a+3)^0,c
  3519  00180C  C074  F013         	movff	efgtoa@ou,___flmul@b
  3520  001810  C075  F014         	movff	efgtoa@ou+1,___flmul@b+1
  3521  001814  C076  F015         	movff	efgtoa@ou+2,___flmul@b+2
  3522  001818  C077  F016         	movff	efgtoa@ou+3,___flmul@b+3
  3523  00181C  EC9F  F013         	call	___flmul	;wreg free
  3524  001820  C013  F030         	movff	?___flmul,___flge@ff2
  3525  001824  C014  F031         	movff	?___flmul+1,___flge@ff2+1
  3526  001828  C015  F032         	movff	?___flmul+2,___flge@ff2+2
  3527  00182C  C016  F033         	movff	?___flmul+3,___flge@ff2+3
  3528  001830  EC3E  F01B         	call	___flge	;wreg free
  3529  001834  A0D8               	btfss	status,0,c
  3530  001836  EF1F  F00C         	goto	u7931
  3531  00183A  EF21  F00C         	goto	u7930
  3532  00183E                     u7931:
  3533  00183E  EF4A  F00C         	goto	l7387
  3534  001842                     u7930:
  3535  001842                     
  3536                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 454:   e++;
  3537  001842  0100               	movlb	0	; () banked
  3538  001844  4B90               	infsnz	efgtoa@e& (0+255),f,b
  3539  001846  2B91               	incf	(efgtoa@e+1)& (0+255),f,b
  3540  001848                     
  3541                           ; BSR set to: 0
  3542                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 455:   ou *= 10.0
      +                          ;
  3543  001848  C074  F013         	movff	efgtoa@ou,___flmul@b
  3544  00184C  C075  F014         	movff	efgtoa@ou+1,___flmul@b+1
  3545  001850  C076  F015         	movff	efgtoa@ou+2,___flmul@b+2
  3546  001854  C077  F016         	movff	efgtoa@ou+3,___flmul@b+3
  3547  001858  0E00               	movlw	0
  3548  00185A  6E17               	movwf	___flmul@a^0,c
  3549  00185C  0E00               	movlw	0
  3550  00185E  6E18               	movwf	(___flmul@a+1)^0,c
  3551  001860  0E20               	movlw	32
  3552  001862  6E19               	movwf	(___flmul@a+2)^0,c
  3553  001864  0E41               	movlw	65
  3554  001866  6E1A               	movwf	(___flmul@a+3)^0,c
  3555  001868  EC9F  F013         	call	___flmul	;wreg free
  3556  00186C  C013  F074         	movff	?___flmul,efgtoa@ou
  3557  001870  C014  F075         	movff	?___flmul+1,efgtoa@ou+1
  3558  001874  C015  F076         	movff	?___flmul+2,efgtoa@ou+2
  3559  001878  C016  F077         	movff	?___flmul+3,efgtoa@ou+3
  3560  00187C                     
  3561                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 456:   if (nmode 
      +                          == 'f') {
  3562  00187C  0E66               	movlw	102
  3563  00187E  0100               	movlb	0	; () banked
  3564  001880  1980               	xorwf	efgtoa@nmode& (0+255),w,b
  3565  001882  A4D8               	btfss	status,2,c
  3566  001884  EF46  F00C         	goto	u7941
  3567  001888  EF48  F00C         	goto	u7940
  3568  00188C                     u7941:
  3569  00188C  EF4A  F00C         	goto	l7387
  3570  001890                     u7940:
  3571  001890                     
  3572                           ; BSR set to: 0
  3573                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 458:    m++;
  3574  001890  4B72               	infsnz	efgtoa@m& (0+255),f,b
  3575  001892  2B73               	incf	(efgtoa@m+1)& (0+255),f,b
  3576  001894                     l7387:
  3577                           
  3578                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 463:     u = ou;
  3579  001894  C074  F094         	movff	efgtoa@ou,efgtoa@u
  3580  001898  C075  F095         	movff	efgtoa@ou+1,efgtoa@u+1
  3581  00189C  C076  F096         	movff	efgtoa@ou+2,efgtoa@u+2
  3582  0018A0  C077  F097         	movff	efgtoa@ou+3,efgtoa@u+3
  3583  0018A4                     
  3584                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 464:     ne = (nm
      +                          ode == 'e') ? 0 : e;
  3585  0018A4  0E65               	movlw	101
  3586  0018A6  0100               	movlb	0	; () banked
  3587  0018A8  1980               	xorwf	efgtoa@nmode& (0+255),w,b
  3588  0018AA  B4D8               	btfsc	status,2,c
  3589  0018AC  EF5A  F00C         	goto	u7951
  3590  0018B0  EF5C  F00C         	goto	u7950
  3591  0018B4                     u7951:
  3592  0018B4  EF62  F00C         	goto	l7393
  3593  0018B8                     u7950:
  3594  0018B8                     
  3595                           ; BSR set to: 0
  3596  0018B8  C090  F070         	movff	efgtoa@e,efgtoa@ne
  3597  0018BC  C091  F071         	movff	efgtoa@e+1,efgtoa@ne+1
  3598  0018C0  EF66  F00C         	goto	l1536
  3599  0018C4                     l7393:
  3600                           
  3601                           ; BSR set to: 0
  3602  0018C4  0E00               	movlw	0
  3603  0018C6  6F71               	movwf	(efgtoa@ne+1)& (0+255),b
  3604  0018C8  0E00               	movlw	0
  3605  0018CA  6F70               	movwf	efgtoa@ne& (0+255),b
  3606  0018CC                     l1536:
  3607                           
  3608                           ; BSR set to: 0
  3609                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 465:     pp = 0;
  3610  0018CC  0E00               	movlw	0
  3611  0018CE  6F6F               	movwf	(efgtoa@pp+1)& (0+255),b
  3612  0018D0  0E00               	movlw	0
  3613  0018D2  6F6E               	movwf	efgtoa@pp& (0+255),b
  3614                           
  3615                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 466:     t = 0;
  3616  0018D4  0E00               	movlw	0
  3617  0018D6  6F6D               	movwf	(efgtoa@t+1)& (0+255),b
  3618  0018D8  0E00               	movlw	0
  3619  0018DA  6F6C               	movwf	efgtoa@t& (0+255),b
  3620                           
  3621                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 467:     i = 0;
  3622  0018DC  0E00               	movlw	0
  3623  0018DE  6F8B               	movwf	(efgtoa@i+1)& (0+255),b
  3624  0018E0  0E00               	movlw	0
  3625  0018E2  6F8A               	movwf	efgtoa@i& (0+255),b
  3626                           
  3627                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 468:     while ((
      +                          i < m) && (n < (80 - 5))) {
  3628  0018E4  EF61  F00D         	goto	l7443
  3629  0018E8                     l7395:
  3630                           
  3631                           ; BSR set to: 0
  3632                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 469:         l = 
      +                          floorf(h/u);
  3633  0018E8  C082  F005         	movff	efgtoa@h,___fldiv@b
  3634  0018EC  C083  F006         	movff	efgtoa@h+1,___fldiv@b+1
  3635  0018F0  C084  F007         	movff	efgtoa@h+2,___fldiv@b+2
  3636  0018F4  C085  F008         	movff	efgtoa@h+3,___fldiv@b+3
  3637  0018F8  C094  F009         	movff	efgtoa@u,___fldiv@a
  3638  0018FC  C095  F00A         	movff	efgtoa@u+1,___fldiv@a+1
  3639  001900  C096  F00B         	movff	efgtoa@u+2,___fldiv@a+2
  3640  001904  C097  F00C         	movff	efgtoa@u+3,___fldiv@a+3
  3641  001908  ECB4  F015         	call	___fldiv	;wreg free
  3642  00190C  C005  F01E         	movff	?___fldiv,floorf@x
  3643  001910  C006  F01F         	movff	?___fldiv+1,floorf@x+1
  3644  001914  C007  F020         	movff	?___fldiv+2,floorf@x+2
  3645  001918  C008  F021         	movff	?___fldiv+3,floorf@x+3
  3646  00191C  EC81  F017         	call	_floorf	;wreg free
  3647  001920  C01E  F086         	movff	?_floorf,efgtoa@l
  3648  001924  C01F  F087         	movff	?_floorf+1,efgtoa@l+1
  3649  001928  C020  F088         	movff	?_floorf+2,efgtoa@l+2
  3650  00192C  C021  F089         	movff	?_floorf+3,efgtoa@l+3
  3651                           
  3652                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 470:         d = 
      +                          (int)l;
  3653  001930  C086  F005         	movff	efgtoa@l,___fltol@f1
  3654  001934  C087  F006         	movff	efgtoa@l+1,___fltol@f1+1
  3655  001938  C088  F007         	movff	efgtoa@l+2,___fltol@f1+2
  3656  00193C  C089  F008         	movff	efgtoa@l+3,___fltol@f1+3
  3657  001940  ECBB  F01A         	call	___fltol	;wreg free
  3658  001944  C005  F078         	movff	?___fltol,efgtoa@d
  3659  001948  C006  F079         	movff	?___fltol+1,efgtoa@d+1
  3660  00194C                     
  3661                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 471:         if (
      +                          !(flags & (1 << 4)) && !d && (mode == 'g') && (ne < 0)) {
  3662  00194C  0100               	movlb	0	; () banked
  3663  00194E  B9FA               	btfsc	_flags& (0+255),4,b
  3664  001950  EFAC  F00C         	goto	u7961
  3665  001954  EFAE  F00C         	goto	u7960
  3666  001958                     u7961:
  3667  001958  EFCB  F00C         	goto	l7407
  3668  00195C                     u7960:
  3669  00195C                     
  3670                           ; BSR set to: 0
  3671  00195C  5178               	movf	efgtoa@d& (0+255),w,b
  3672  00195E  1179               	iorwf	(efgtoa@d+1)& (0+255),w,b
  3673  001960  A4D8               	btfss	status,2,c
  3674  001962  EFB5  F00C         	goto	u7971
  3675  001966  EFB7  F00C         	goto	u7970
  3676  00196A                     u7971:
  3677  00196A  EFCB  F00C         	goto	l7407
  3678  00196E                     u7970:
  3679  00196E                     
  3680                           ; BSR set to: 0
  3681  00196E  0E67               	movlw	103
  3682  001970  1981               	xorwf	efgtoa@mode& (0+255),w,b
  3683  001972  A4D8               	btfss	status,2,c
  3684  001974  EFBE  F00C         	goto	u7981
  3685  001978  EFC0  F00C         	goto	u7980
  3686  00197C                     u7981:
  3687  00197C  EFCB  F00C         	goto	l7407
  3688  001980                     u7980:
  3689  001980                     
  3690                           ; BSR set to: 0
  3691  001980  BF71               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  3692  001982  EFC7  F00C         	goto	u7990
  3693  001986  EFC5  F00C         	goto	u7991
  3694  00198A                     u7991:
  3695  00198A  EFCB  F00C         	goto	l7407
  3696  00198E                     u7990:
  3697  00198E                     
  3698                           ; BSR set to: 0
  3699                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 472:             
      +                          ++t;
  3700  00198E  4B6C               	infsnz	efgtoa@t& (0+255),f,b
  3701  001990  2B6D               	incf	(efgtoa@t+1)& (0+255),f,b
  3702                           
  3703                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 473:         } el
      +                          se {
  3704  001992  EF15  F00D         	goto	l7435
  3705  001996                     l7407:
  3706                           
  3707                           ; BSR set to: 0
  3708                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 474:             
      +                          if (!pp && (ne < 0)) {
  3709  001996  516E               	movf	efgtoa@pp& (0+255),w,b
  3710  001998  116F               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  3711  00199A  A4D8               	btfss	status,2,c
  3712  00199C  EFD2  F00C         	goto	u8001
  3713  0019A0  EFD4  F00C         	goto	u8000
  3714  0019A4                     u8001:
  3715  0019A4  EFFE  F00C         	goto	l7427
  3716  0019A8                     u8000:
  3717  0019A8                     
  3718                           ; BSR set to: 0
  3719  0019A8  BF71               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  3720  0019AA  EFDB  F00C         	goto	u8010
  3721  0019AE  EFD9  F00C         	goto	u8011
  3722  0019B2                     u8011:
  3723  0019B2  EFFE  F00C         	goto	l7427
  3724  0019B6                     u8010:
  3725  0019B6                     
  3726                           ; BSR set to: 0
  3727                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 475:             
      +                              dbuf[n++] = '.';
  3728  0019B6  0E18               	movlw	low _dbuf
  3729  0019B8  2592               	addwf	efgtoa@n& (0+255),w,b
  3730  0019BA  6ED9               	movwf	fsr2l,c
  3731  0019BC  0E01               	movlw	high _dbuf
  3732  0019BE  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3733  0019C0  6EDA               	movwf	fsr2h,c
  3734  0019C2  0E2E               	movlw	46
  3735  0019C4  6EDF               	movwf	indf2,c
  3736  0019C6                     
  3737                           ; BSR set to: 0
  3738  0019C6  4B92               	infsnz	efgtoa@n& (0+255),f,b
  3739  0019C8  2B93               	incf	(efgtoa@n+1)& (0+255),f,b
  3740  0019CA                     
  3741                           ; BSR set to: 0
  3742                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 476:             
      +                              --w;
  3743  0019CA  077E               	decf	efgtoa@w& (0+255),f,b
  3744  0019CC  A0D8               	btfss	status,0,c
  3745  0019CE  077F               	decf	(efgtoa@w+1)& (0+255),f,b
  3746  0019D0                     
  3747                           ; BSR set to: 0
  3748                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 477:             
      +                              pp = 1;
  3749  0019D0  0E00               	movlw	0
  3750  0019D2  6F6F               	movwf	(efgtoa@pp+1)& (0+255),b
  3751  0019D4  0E01               	movlw	1
  3752  0019D6  6F6E               	movwf	efgtoa@pp& (0+255),b
  3753  0019D8  EFFE  F00C         	goto	l7427
  3754  0019DC                     l7419:
  3755                           
  3756                           ; BSR set to: 0
  3757                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 480:             
      +                              dbuf[n++] = '0';
  3758  0019DC  0E18               	movlw	low _dbuf
  3759  0019DE  2592               	addwf	efgtoa@n& (0+255),w,b
  3760  0019E0  6ED9               	movwf	fsr2l,c
  3761  0019E2  0E01               	movlw	high _dbuf
  3762  0019E4  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3763  0019E6  6EDA               	movwf	fsr2h,c
  3764  0019E8  0E30               	movlw	48
  3765  0019EA  6EDF               	movwf	indf2,c
  3766  0019EC                     
  3767                           ; BSR set to: 0
  3768  0019EC  4B92               	infsnz	efgtoa@n& (0+255),f,b
  3769  0019EE  2B93               	incf	(efgtoa@n+1)& (0+255),f,b
  3770  0019F0                     
  3771                           ; BSR set to: 0
  3772                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 481:             
      +                              --w;
  3773  0019F0  077E               	decf	efgtoa@w& (0+255),f,b
  3774  0019F2  A0D8               	btfss	status,0,c
  3775  0019F4  077F               	decf	(efgtoa@w+1)& (0+255),f,b
  3776  0019F6                     
  3777                           ; BSR set to: 0
  3778                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 482:             
      +                              --t;
  3779  0019F6  076C               	decf	efgtoa@t& (0+255),f,b
  3780  0019F8  A0D8               	btfss	status,0,c
  3781  0019FA  076D               	decf	(efgtoa@t+1)& (0+255),f,b
  3782  0019FC                     l7427:
  3783                           
  3784                           ; BSR set to: 0
  3785                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 479:             
      +                          while (t) {
  3786  0019FC  516C               	movf	efgtoa@t& (0+255),w,b
  3787  0019FE  116D               	iorwf	(efgtoa@t+1)& (0+255),w,b
  3788  001A00  A4D8               	btfss	status,2,c
  3789  001A02  EF05  F00D         	goto	u8021
  3790  001A06  EF07  F00D         	goto	u8020
  3791  001A0A                     u8021:
  3792  001A0A  EFEE  F00C         	goto	l7419
  3793  001A0E                     u8020:
  3794  001A0E                     
  3795                           ; BSR set to: 0
  3796                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 484:             
      +                          dbuf[n++] = (char)((int)'0' + d);
  3797  001A0E  0E18               	movlw	low _dbuf
  3798  001A10  2592               	addwf	efgtoa@n& (0+255),w,b
  3799  001A12  6ED9               	movwf	fsr2l,c
  3800  001A14  0E01               	movlw	high _dbuf
  3801  001A16  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3802  001A18  6EDA               	movwf	fsr2h,c
  3803  001A1A  5178               	movf	efgtoa@d& (0+255),w,b
  3804  001A1C  0F30               	addlw	48
  3805  001A1E  6EDF               	movwf	indf2,c
  3806  001A20                     
  3807                           ; BSR set to: 0
  3808  001A20  4B92               	infsnz	efgtoa@n& (0+255),f,b
  3809  001A22  2B93               	incf	(efgtoa@n+1)& (0+255),f,b
  3810  001A24                     
  3811                           ; BSR set to: 0
  3812                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 485:             
      +                          --w;
  3813  001A24  077E               	decf	efgtoa@w& (0+255),f,b
  3814  001A26  A0D8               	btfss	status,0,c
  3815  001A28  077F               	decf	(efgtoa@w+1)& (0+255),f,b
  3816  001A2A                     l7435:
  3817                           
  3818                           ; BSR set to: 0
  3819                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 487:         h -=
      +                           l*u;
  3820  001A2A  C082  F03C         	movff	efgtoa@h,___flsub@b
  3821  001A2E  C083  F03D         	movff	efgtoa@h+1,___flsub@b+1
  3822  001A32  C084  F03E         	movff	efgtoa@h+2,___flsub@b+2
  3823  001A36  C085  F03F         	movff	efgtoa@h+3,___flsub@b+3
  3824  001A3A  C094  F017         	movff	efgtoa@u,___flmul@a
  3825  001A3E  C095  F018         	movff	efgtoa@u+1,___flmul@a+1
  3826  001A42  C096  F019         	movff	efgtoa@u+2,___flmul@a+2
  3827  001A46  C097  F01A         	movff	efgtoa@u+3,___flmul@a+3
  3828  001A4A  C086  F013         	movff	efgtoa@l,___flmul@b
  3829  001A4E  C087  F014         	movff	efgtoa@l+1,___flmul@b+1
  3830  001A52  C088  F015         	movff	efgtoa@l+2,___flmul@b+2
  3831  001A56  C089  F016         	movff	efgtoa@l+3,___flmul@b+3
  3832  001A5A  EC9F  F013         	call	___flmul	;wreg free
  3833  001A5E  C013  F040         	movff	?___flmul,___flsub@a
  3834  001A62  C014  F041         	movff	?___flmul+1,___flsub@a+1
  3835  001A66  C015  F042         	movff	?___flmul+2,___flsub@a+2
  3836  001A6A  C016  F043         	movff	?___flmul+3,___flsub@a+3
  3837  001A6E  ECF9  F023         	call	___flsub	;wreg free
  3838  001A72  C03C  F082         	movff	?___flsub,efgtoa@h
  3839  001A76  C03D  F083         	movff	?___flsub+1,efgtoa@h+1
  3840  001A7A  C03E  F084         	movff	?___flsub+2,efgtoa@h+2
  3841  001A7E  C03F  F085         	movff	?___flsub+3,efgtoa@h+3
  3842  001A82                     
  3843                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 488:         u = 
      +                          u/10.0;
  3844  001A82  C094  F005         	movff	efgtoa@u,___fldiv@b
  3845  001A86  C095  F006         	movff	efgtoa@u+1,___fldiv@b+1
  3846  001A8A  C096  F007         	movff	efgtoa@u+2,___fldiv@b+2
  3847  001A8E  C097  F008         	movff	efgtoa@u+3,___fldiv@b+3
  3848  001A92  0E00               	movlw	0
  3849  001A94  6E09               	movwf	___fldiv@a^0,c
  3850  001A96  0E00               	movlw	0
  3851  001A98  6E0A               	movwf	(___fldiv@a+1)^0,c
  3852  001A9A  0E20               	movlw	32
  3853  001A9C  6E0B               	movwf	(___fldiv@a+2)^0,c
  3854  001A9E  0E41               	movlw	65
  3855  001AA0  6E0C               	movwf	(___fldiv@a+3)^0,c
  3856  001AA2  ECB4  F015         	call	___fldiv	;wreg free
  3857  001AA6  C005  F094         	movff	?___fldiv,efgtoa@u
  3858  001AAA  C006  F095         	movff	?___fldiv+1,efgtoa@u+1
  3859  001AAE  C007  F096         	movff	?___fldiv+2,efgtoa@u+2
  3860  001AB2  C008  F097         	movff	?___fldiv+3,efgtoa@u+3
  3861  001AB6                     
  3862                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 489:         --ne
      +                          ;
  3863  001AB6  0100               	movlb	0	; () banked
  3864  001AB8  0770               	decf	efgtoa@ne& (0+255),f,b
  3865  001ABA  A0D8               	btfss	status,0,c
  3866  001ABC  0771               	decf	(efgtoa@ne+1)& (0+255),f,b
  3867  001ABE                     
  3868                           ; BSR set to: 0
  3869                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 490:         ++i;
  3870  001ABE  4B8A               	infsnz	efgtoa@i& (0+255),f,b
  3871  001AC0  2B8B               	incf	(efgtoa@i+1)& (0+255),f,b
  3872  001AC2                     l7443:
  3873                           
  3874                           ; BSR set to: 0
  3875                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 468:     while ((
      +                          i < m) && (n < (80 - 5))) {
  3876  001AC2  5172               	movf	efgtoa@m& (0+255),w,b
  3877  001AC4  5D8A               	subwf	efgtoa@i& (0+255),w,b
  3878  001AC6  518B               	movf	(efgtoa@i+1)& (0+255),w,b
  3879  001AC8  0A80               	xorlw	128
  3880  001ACA  6E4B               	movwf	??_efgtoa^0,c
  3881  001ACC  5173               	movf	(efgtoa@m+1)& (0+255),w,b
  3882  001ACE  0A80               	xorlw	128
  3883  001AD0  584B               	subwfb	??_efgtoa^0,w,c
  3884  001AD2  B0D8               	btfsc	status,0,c
  3885  001AD4  EF6E  F00D         	goto	u8031
  3886  001AD8  EF70  F00D         	goto	u8030
  3887  001ADC                     u8031:
  3888  001ADC  EF7E  F00D         	goto	l7447
  3889  001AE0                     u8030:
  3890  001AE0                     
  3891                           ; BSR set to: 0
  3892  001AE0  BF93               	btfsc	(efgtoa@n+1)& (0+255),7,b
  3893  001AE2  EF7C  F00D         	goto	u8041
  3894  001AE6  5193               	movf	(efgtoa@n+1)& (0+255),w,b
  3895  001AE8  E109               	bnz	u8040
  3896  001AEA  0E4B               	movlw	75
  3897  001AEC  5D92               	subwf	efgtoa@n& (0+255),w,b
  3898  001AEE  A0D8               	btfss	status,0,c
  3899  001AF0  EF7C  F00D         	goto	u8041
  3900  001AF4  EF7E  F00D         	goto	u8040
  3901  001AF8                     u8041:
  3902  001AF8  EF74  F00C         	goto	l7395
  3903  001AFC                     u8040:
  3904  001AFC                     l7447:
  3905                           
  3906                           ; BSR set to: 0
  3907                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 492:     if (!pp 
      +                          && (flags & (1 << 4))) {
  3908  001AFC  516E               	movf	efgtoa@pp& (0+255),w,b
  3909  001AFE  116F               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  3910  001B00  A4D8               	btfss	status,2,c
  3911  001B02  EF85  F00D         	goto	u8051
  3912  001B06  EF87  F00D         	goto	u8050
  3913  001B0A                     u8051:
  3914  001B0A  EF98  F00D         	goto	l7455
  3915  001B0E                     u8050:
  3916  001B0E                     
  3917                           ; BSR set to: 0
  3918  001B0E  A9FA               	btfss	_flags& (0+255),4,b
  3919  001B10  EF8C  F00D         	goto	u8061
  3920  001B14  EF8E  F00D         	goto	u8060
  3921  001B18                     u8061:
  3922  001B18  EF98  F00D         	goto	l7455
  3923  001B1C                     u8060:
  3924  001B1C                     
  3925                           ; BSR set to: 0
  3926                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 493:         dbuf
      +                          [n++] = '.';
  3927  001B1C  0E18               	movlw	low _dbuf
  3928  001B1E  2592               	addwf	efgtoa@n& (0+255),w,b
  3929  001B20  6ED9               	movwf	fsr2l,c
  3930  001B22  0E01               	movlw	high _dbuf
  3931  001B24  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3932  001B26  6EDA               	movwf	fsr2h,c
  3933  001B28  0E2E               	movlw	46
  3934  001B2A  6EDF               	movwf	indf2,c
  3935  001B2C                     
  3936                           ; BSR set to: 0
  3937  001B2C  4B92               	infsnz	efgtoa@n& (0+255),f,b
  3938  001B2E  2B93               	incf	(efgtoa@n+1)& (0+255),f,b
  3939  001B30                     l7455:
  3940                           
  3941                           ; BSR set to: 0
  3942                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 495:     dbuf[n] 
      +                          = '\0';
  3943  001B30  0E18               	movlw	low _dbuf
  3944  001B32  2592               	addwf	efgtoa@n& (0+255),w,b
  3945  001B34  6ED9               	movwf	fsr2l,c
  3946  001B36  0E01               	movlw	high _dbuf
  3947  001B38  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3948  001B3A  6EDA               	movwf	fsr2h,c
  3949  001B3C  0E00               	movlw	0
  3950  001B3E  6EDF               	movwf	indf2,c
  3951  001B40                     
  3952                           ; BSR set to: 0
  3953                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 498:     if (nmod
      +                          e == 'e') {
  3954  001B40  0E65               	movlw	101
  3955  001B42  1980               	xorwf	efgtoa@nmode& (0+255),w,b
  3956  001B44  A4D8               	btfss	status,2,c
  3957  001B46  EFA7  F00D         	goto	u8071
  3958  001B4A  EFA9  F00D         	goto	u8070
  3959  001B4E                     u8071:
  3960  001B4E  EF79  F00E         	goto	l7517
  3961  001B52                     u8070:
  3962  001B52                     
  3963                           ; BSR set to: 0
  3964                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 499:         i = 
      +                          sizeof(dbuf) - 1;
  3965  001B52  0E00               	movlw	0
  3966  001B54  6F8B               	movwf	(efgtoa@i+1)& (0+255),b
  3967  001B56  0E4F               	movlw	79
  3968  001B58  6F8A               	movwf	efgtoa@i& (0+255),b
  3969  001B5A                     
  3970                           ; BSR set to: 0
  3971                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 500:         dbuf
      +                          [i] = '\0';
  3972  001B5A  0E18               	movlw	low _dbuf
  3973  001B5C  258A               	addwf	efgtoa@i& (0+255),w,b
  3974  001B5E  6ED9               	movwf	fsr2l,c
  3975  001B60  0E01               	movlw	high _dbuf
  3976  001B62  218B               	addwfc	(efgtoa@i+1)& (0+255),w,b
  3977  001B64  6EDA               	movwf	fsr2h,c
  3978  001B66  0E00               	movlw	0
  3979  001B68  6EDF               	movwf	indf2,c
  3980  001B6A                     
  3981                           ; BSR set to: 0
  3982                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 501:         sign
      +                           = 0;
  3983  001B6A  0E00               	movlw	0
  3984  001B6C  6F7B               	movwf	(efgtoa@sign+1)& (0+255),b
  3985  001B6E  0E00               	movlw	0
  3986  001B70  6F7A               	movwf	efgtoa@sign& (0+255),b
  3987  001B72                     
  3988                           ; BSR set to: 0
  3989                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 502:         if (
      +                          e < 0) {
  3990  001B72  BF91               	btfsc	(efgtoa@e+1)& (0+255),7,b
  3991  001B74  EFC0  F00D         	goto	u8080
  3992  001B78  EFBE  F00D         	goto	u8081
  3993  001B7C                     u8081:
  3994  001B7C  EFC8  F00D         	goto	l7471
  3995  001B80                     u8080:
  3996  001B80                     
  3997                           ; BSR set to: 0
  3998                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 503:             
      +                          sign = 1;
  3999  001B80  0E00               	movlw	0
  4000  001B82  6F7B               	movwf	(efgtoa@sign+1)& (0+255),b
  4001  001B84  0E01               	movlw	1
  4002  001B86  6F7A               	movwf	efgtoa@sign& (0+255),b
  4003  001B88                     
  4004                           ; BSR set to: 0
  4005                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 504:             
      +                          e = -e;
  4006  001B88  6D90               	negf	efgtoa@e& (0+255),b
  4007  001B8A  1F91               	comf	(efgtoa@e+1)& (0+255),f,b
  4008  001B8C  B0D8               	btfsc	status,0,c
  4009  001B8E  2B91               	incf	(efgtoa@e+1)& (0+255),f,b
  4010  001B90                     l7471:
  4011                           
  4012                           ; BSR set to: 0
  4013                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 506:         p = 
      +                          2;
  4014  001B90  0E00               	movlw	0
  4015  001B92  6F7D               	movwf	(efgtoa@p+1)& (0+255),b
  4016  001B94  0E02               	movlw	2
  4017  001B96  6F7C               	movwf	efgtoa@p& (0+255),b
  4018                           
  4019                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 507:         whil
      +                          e (e || (0 < p)) {
  4020  001B98  EFF9  F00D         	goto	l7483
  4021  001B9C                     l7473:
  4022                           
  4023                           ; BSR set to: 0
  4024                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 508:             
      +                          --i;
  4025  001B9C  078A               	decf	efgtoa@i& (0+255),f,b
  4026  001B9E  A0D8               	btfss	status,0,c
  4027  001BA0  078B               	decf	(efgtoa@i+1)& (0+255),f,b
  4028  001BA2                     
  4029                           ; BSR set to: 0
  4030                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 509:             
      +                          dbuf[i] = '0' + (e % 10);
  4031  001BA2  0E18               	movlw	low _dbuf
  4032  001BA4  258A               	addwf	efgtoa@i& (0+255),w,b
  4033  001BA6  6ED9               	movwf	fsr2l,c
  4034  001BA8  0E01               	movlw	high _dbuf
  4035  001BAA  218B               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4036  001BAC  6EDA               	movwf	fsr2h,c
  4037  001BAE  C090  F005         	movff	efgtoa@e,___awmod@dividend
  4038  001BB2  C091  F006         	movff	efgtoa@e+1,___awmod@dividend+1
  4039  001BB6  0E00               	movlw	0
  4040  001BB8  6E08               	movwf	(___awmod@divisor+1)^0,c
  4041  001BBA  0E0A               	movlw	10
  4042  001BBC  6E07               	movwf	___awmod@divisor^0,c
  4043  001BBE  EC33  F020         	call	___awmod	;wreg free
  4044  001BC2  5005               	movf	?___awmod^0,w,c
  4045  001BC4  0F30               	addlw	48
  4046  001BC6  6EDF               	movwf	indf2,c
  4047  001BC8                     
  4048                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 510:             
      +                          e = e / 10;
  4049  001BC8  C090  F005         	movff	efgtoa@e,___awdiv@dividend
  4050  001BCC  C091  F006         	movff	efgtoa@e+1,___awdiv@dividend+1
  4051  001BD0  0E00               	movlw	0
  4052  001BD2  6E08               	movwf	(___awdiv@divisor+1)^0,c
  4053  001BD4  0E0A               	movlw	10
  4054  001BD6  6E07               	movwf	___awdiv@divisor^0,c
  4055  001BD8  ECF4  F01D         	call	___awdiv	;wreg free
  4056  001BDC  C005  F090         	movff	?___awdiv,efgtoa@e
  4057  001BE0  C006  F091         	movff	?___awdiv+1,efgtoa@e+1
  4058  001BE4                     
  4059                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 511:             
      +                          --p;
  4060  001BE4  0100               	movlb	0	; () banked
  4061  001BE6  077C               	decf	efgtoa@p& (0+255),f,b
  4062  001BE8  A0D8               	btfss	status,0,c
  4063  001BEA  077D               	decf	(efgtoa@p+1)& (0+255),f,b
  4064  001BEC                     
  4065                           ; BSR set to: 0
  4066                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 512:             
      +                          --w;
  4067  001BEC  077E               	decf	efgtoa@w& (0+255),f,b
  4068  001BEE  A0D8               	btfss	status,0,c
  4069  001BF0  077F               	decf	(efgtoa@w+1)& (0+255),f,b
  4070  001BF2                     l7483:
  4071                           
  4072                           ; BSR set to: 0
  4073                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 507:         whil
      +                          e (e || (0 < p)) {
  4074  001BF2  5190               	movf	efgtoa@e& (0+255),w,b
  4075  001BF4  1191               	iorwf	(efgtoa@e+1)& (0+255),w,b
  4076  001BF6  A4D8               	btfss	status,2,c
  4077  001BF8  EF00  F00E         	goto	u8091
  4078  001BFC  EF02  F00E         	goto	u8090
  4079  001C00                     u8091:
  4080  001C00  EFCE  F00D         	goto	l7473
  4081  001C04                     u8090:
  4082  001C04                     
  4083                           ; BSR set to: 0
  4084  001C04  BF7D               	btfsc	(efgtoa@p+1)& (0+255),7,b
  4085  001C06  EF0F  F00E         	goto	u8100
  4086  001C0A  517D               	movf	(efgtoa@p+1)& (0+255),w,b
  4087  001C0C  E106               	bnz	u8101
  4088  001C0E  057C               	decf	efgtoa@p& (0+255),w,b
  4089  001C10  B0D8               	btfsc	status,0,c
  4090  001C12  EF0D  F00E         	goto	u8101
  4091  001C16  EF0F  F00E         	goto	u8100
  4092  001C1A                     u8101:
  4093  001C1A  EFCE  F00D         	goto	l7473
  4094  001C1E                     u8100:
  4095  001C1E                     
  4096                           ; BSR set to: 0
  4097                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 514:         --i;
  4098  001C1E  078A               	decf	efgtoa@i& (0+255),f,b
  4099  001C20  A0D8               	btfss	status,0,c
  4100  001C22  078B               	decf	(efgtoa@i+1)& (0+255),f,b
  4101  001C24                     
  4102                           ; BSR set to: 0
  4103                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 515:         dbuf
      +                          [i] = sign ? '-' : '+';
  4104  001C24  517A               	movf	efgtoa@sign& (0+255),w,b
  4105  001C26  117B               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  4106  001C28  A4D8               	btfss	status,2,c
  4107  001C2A  EF19  F00E         	goto	u8111
  4108  001C2E  EF1B  F00E         	goto	u8110
  4109  001C32                     u8111:
  4110  001C32  EF21  F00E         	goto	l7493
  4111  001C36                     u8110:
  4112  001C36                     
  4113                           ; BSR set to: 0
  4114  001C36  0E00               	movlw	0
  4115  001C38  6F67               	movwf	(_efgtoa$2133+1)& (0+255),b
  4116  001C3A  0E2B               	movlw	43
  4117  001C3C  6F66               	movwf	_efgtoa$2133& (0+255),b
  4118  001C3E  EF25  F00E         	goto	l7495
  4119  001C42                     l7493:
  4120                           
  4121                           ; BSR set to: 0
  4122  001C42  0E00               	movlw	0
  4123  001C44  6F67               	movwf	(_efgtoa$2133+1)& (0+255),b
  4124  001C46  0E2D               	movlw	45
  4125  001C48  6F66               	movwf	_efgtoa$2133& (0+255),b
  4126  001C4A                     l7495:
  4127                           
  4128                           ; BSR set to: 0
  4129  001C4A  0E18               	movlw	low _dbuf
  4130  001C4C  258A               	addwf	efgtoa@i& (0+255),w,b
  4131  001C4E  6ED9               	movwf	fsr2l,c
  4132  001C50  0E01               	movlw	high _dbuf
  4133  001C52  218B               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4134  001C54  6EDA               	movwf	fsr2h,c
  4135  001C56  C066  FFDF         	movff	_efgtoa$2133,indf2
  4136  001C5A                     
  4137                           ; BSR set to: 0
  4138                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 516:         --w;
  4139  001C5A  077E               	decf	efgtoa@w& (0+255),f,b
  4140  001C5C  A0D8               	btfss	status,0,c
  4141  001C5E  077F               	decf	(efgtoa@w+1)& (0+255),f,b
  4142  001C60                     
  4143                           ; BSR set to: 0
  4144                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 518:         dbuf
      +                          [i] = (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
  4145  001C60  078A               	decf	efgtoa@i& (0+255),f,b
  4146  001C62  A0D8               	btfss	status,0,c
  4147  001C64  078B               	decf	(efgtoa@i+1)& (0+255),f,b
  4148  001C66                     
  4149                           ; BSR set to: 0
  4150  001C66  0EBF               	movlw	191
  4151  001C68  6E4B               	movwf	??_efgtoa^0,c
  4152  001C6A  0EFF               	movlw	255
  4153  001C6C  6E4C               	movwf	(??_efgtoa+1)^0,c
  4154  001C6E  504A               	movf	efgtoa@c^0,w,c
  4155  001C70  6E4D               	movwf	(??_efgtoa+2)^0,c
  4156  001C72  6A4E               	clrf	(??_efgtoa+3)^0,c
  4157  001C74  504B               	movf	??_efgtoa^0,w,c
  4158  001C76  264D               	addwf	(??_efgtoa+2)^0,f,c
  4159  001C78  504C               	movf	(??_efgtoa+1)^0,w,c
  4160  001C7A  224E               	addwfc	(??_efgtoa+3)^0,f,c
  4161  001C7C  504E               	movf	(??_efgtoa+3)^0,w,c
  4162  001C7E  E10A               	bnz	u8120
  4163  001C80  0E1A               	movlw	26
  4164  001C82  5C4D               	subwf	(??_efgtoa+2)^0,w,c
  4165  001C84  A0D8               	btfss	status,0,c
  4166  001C86  EF47  F00E         	goto	u8121
  4167  001C8A  EF4A  F00E         	goto	u8120
  4168  001C8E                     u8121:
  4169  001C8E  0E01               	movlw	1
  4170  001C90  EF4B  F00E         	goto	u8130
  4171  001C94                     u8120:
  4172  001C94  0E00               	movlw	0
  4173  001C96                     u8130:
  4174  001C96  6F6A               	movwf	_efgtoa$2135& (0+255),b
  4175  001C98  6B6B               	clrf	(_efgtoa$2135+1)& (0+255),b
  4176  001C9A                     
  4177                           ; BSR set to: 0
  4178  001C9A  516A               	movf	_efgtoa$2135& (0+255),w,b
  4179  001C9C  116B               	iorwf	(_efgtoa$2135+1)& (0+255),w,b
  4180  001C9E  A4D8               	btfss	status,2,c
  4181  001CA0  EF54  F00E         	goto	u8141
  4182  001CA4  EF56  F00E         	goto	u8140
  4183  001CA8                     u8141:
  4184  001CA8  EF5C  F00E         	goto	l7509
  4185  001CAC                     u8140:
  4186  001CAC                     
  4187                           ; BSR set to: 0
  4188  001CAC  0E00               	movlw	0
  4189  001CAE  6F69               	movwf	(_efgtoa$2134+1)& (0+255),b
  4190  001CB0  0E65               	movlw	101
  4191  001CB2  6F68               	movwf	_efgtoa$2134& (0+255),b
  4192  001CB4  EF60  F00E         	goto	l7511
  4193  001CB8                     l7509:
  4194                           
  4195                           ; BSR set to: 0
  4196  001CB8  0E00               	movlw	0
  4197  001CBA  6F69               	movwf	(_efgtoa$2134+1)& (0+255),b
  4198  001CBC  0E45               	movlw	69
  4199  001CBE  6F68               	movwf	_efgtoa$2134& (0+255),b
  4200  001CC0                     l7511:
  4201                           
  4202                           ; BSR set to: 0
  4203  001CC0  0E18               	movlw	low _dbuf
  4204  001CC2  258A               	addwf	efgtoa@i& (0+255),w,b
  4205  001CC4  6ED9               	movwf	fsr2l,c
  4206  001CC6  0E01               	movlw	high _dbuf
  4207  001CC8  218B               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4208  001CCA  6EDA               	movwf	fsr2h,c
  4209  001CCC  C068  FFDF         	movff	_efgtoa$2134,indf2
  4210  001CD0                     
  4211                           ; BSR set to: 0
  4212                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 519:         --w;
  4213  001CD0  077E               	decf	efgtoa@w& (0+255),f,b
  4214  001CD2  A0D8               	btfss	status,0,c
  4215  001CD4  077F               	decf	(efgtoa@w+1)& (0+255),f,b
  4216  001CD6                     
  4217                           ; BSR set to: 0
  4218                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 520:         strc
      +                          py(&dbuf[n], &dbuf[i]);
  4219  001CD6  0E18               	movlw	low _dbuf
  4220  001CD8  2592               	addwf	efgtoa@n& (0+255),w,b
  4221  001CDA  6E05               	movwf	strcpy@dest^0,c
  4222  001CDC  0E01               	movlw	high _dbuf
  4223  001CDE  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4224  001CE0  6E06               	movwf	(strcpy@dest+1)^0,c
  4225  001CE2  0E18               	movlw	low _dbuf
  4226  001CE4  258A               	addwf	efgtoa@i& (0+255),w,b
  4227  001CE6  6E07               	movwf	strcpy@src^0,c
  4228  001CE8  0E01               	movlw	high _dbuf
  4229  001CEA  218B               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4230  001CEC  6E08               	movwf	(strcpy@src+1)^0,c
  4231  001CEE  EC48  F023         	call	_strcpy	;wreg free
  4232  001CF2                     l7517:
  4233                           
  4234                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 524:     return p
      +                          ad(fp, &dbuf[0], w);
  4235  001CF2  C044  F017         	movff	efgtoa@fp,pad@fp
  4236  001CF6  C045  F018         	movff	efgtoa@fp+1,pad@fp+1
  4237  001CFA  0E18               	movlw	low _dbuf
  4238  001CFC  6E19               	movwf	pad@buf^0,c
  4239  001CFE  0E01               	movlw	high _dbuf
  4240  001D00  6E1A               	movwf	(pad@buf+1)^0,c
  4241  001D02  C07E  F01B         	movff	efgtoa@w,pad@p
  4242  001D06  C07F  F01C         	movff	efgtoa@w+1,pad@p+1
  4243  001D0A  EC91  F01D         	call	_pad	;wreg free
  4244  001D0E  C017  F044         	movff	?_pad,?_efgtoa
  4245  001D12  C018  F045         	movff	?_pad+1,?_efgtoa+1
  4246  001D16                     l1490:
  4247  001D16  0012               	return		;funcret
  4248  001D18                     __end_of_efgtoa:
  4249                           	callstack 0
  4250                           
  4251 ;; *************** function _tolower *****************
  4252 ;; Defined at:
  4253 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\tolower.c"
  4254 ;; Parameters:    Size  Location     Type
  4255 ;;  c               2   10[COMRAM] int 
  4256 ;; Auto vars:     Size  Location     Type
  4257 ;;		None
  4258 ;; Return value:  Size  Location     Type
  4259 ;;                  2   10[COMRAM] int 
  4260 ;; Registers used:
  4261 ;;		wreg, status,2, status,0
  4262 ;; Tracked objects:
  4263 ;;		On entry : 0/0
  4264 ;;		On exit  : 0/0
  4265 ;;		Unchanged: 0/0
  4266 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4267 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4268 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4269 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4270 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4271 ;;Total ram usage:        8 bytes
  4272 ;; Hardware stack levels used: 1
  4273 ;; Hardware stack levels required when called: 5
  4274 ;; This function calls:
  4275 ;;		_isupper
  4276 ;; This function is called by:
  4277 ;;		_efgtoa
  4278 ;;		_vfpfcnvrt
  4279 ;; This function uses a non-reentrant model
  4280 ;;
  4281                           
  4282                           	psect	text6
  4283  004630                     __ptext6:
  4284                           	callstack 0
  4285  004630                     _tolower:
  4286                           	callstack 22
  4287  004630  0EBF               	movlw	191
  4288  004632  6E0D               	movwf	??_tolower^0,c
  4289  004634  0EFF               	movlw	255
  4290  004636  6E0E               	movwf	(??_tolower+1)^0,c
  4291  004638  C00B  F00F         	movff	tolower@c,??_tolower+2
  4292  00463C  C00C  F010         	movff	tolower@c+1,??_tolower+3
  4293  004640  500D               	movf	??_tolower^0,w,c
  4294  004642  260F               	addwf	(??_tolower+2)^0,f,c
  4295  004644  500E               	movf	(??_tolower+1)^0,w,c
  4296  004646  2210               	addwfc	(??_tolower+3)^0,f,c
  4297  004648  5010               	movf	(??_tolower+3)^0,w,c
  4298  00464A  E10A               	bnz	u7440
  4299  00464C  0E1A               	movlw	26
  4300  00464E  5C0F               	subwf	(??_tolower+2)^0,w,c
  4301  004650  A0D8               	btfss	status,0,c
  4302  004652  EF2D  F023         	goto	u7441
  4303  004656  EF30  F023         	goto	u7440
  4304  00465A                     u7441:
  4305  00465A  0E01               	movlw	1
  4306  00465C  EF31  F023         	goto	u7450
  4307  004660                     u7440:
  4308  004660  0E00               	movlw	0
  4309  004662                     u7450:
  4310  004662  6E11               	movwf	_tolower$2276^0,c
  4311  004664  6A12               	clrf	(_tolower$2276+1)^0,c
  4312  004666  5011               	movf	_tolower$2276^0,w,c
  4313  004668  1012               	iorwf	(_tolower$2276+1)^0,w,c
  4314  00466A  B4D8               	btfsc	status,2,c
  4315  00466C  EF3A  F023         	goto	u7461
  4316  004670  EF3C  F023         	goto	u7460
  4317  004674                     u7461:
  4318  004674  EF43  F023         	goto	l1729
  4319  004678                     u7460:
  4320  004678  0E20               	movlw	32
  4321  00467A  100B               	iorwf	tolower@c^0,w,c
  4322  00467C  6E0B               	movwf	?_tolower^0,c
  4323  00467E  500C               	movf	(tolower@c+1)^0,w,c
  4324  004680  6E0C               	movwf	(?_tolower+1)^0,c
  4325  004682  EF47  F023         	goto	l1734
  4326  004686                     l1729:
  4327  004686  C00B  F00B         	movff	tolower@c,?_tolower
  4328  00468A  C00C  F00C         	movff	tolower@c+1,?_tolower+1
  4329  00468E                     l1734:
  4330  00468E  0012               	return		;funcret
  4331  004690                     __end_of_tolower:
  4332                           	callstack 0
  4333                           
  4334 ;; *************** function _isupper *****************
  4335 ;; Defined at:
  4336 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\isupper.c"
  4337 ;; Parameters:    Size  Location     Type
  4338 ;;  c               2    4[COMRAM] int 
  4339 ;; Auto vars:     Size  Location     Type
  4340 ;;		None
  4341 ;; Return value:  Size  Location     Type
  4342 ;;                  2    4[COMRAM] int 
  4343 ;; Registers used:
  4344 ;;		wreg, status,2, status,0
  4345 ;; Tracked objects:
  4346 ;;		On entry : 0/0
  4347 ;;		On exit  : 0/0
  4348 ;;		Unchanged: 0/0
  4349 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4350 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4351 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4352 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4353 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4354 ;;Total ram usage:        6 bytes
  4355 ;; Hardware stack levels used: 1
  4356 ;; Hardware stack levels required when called: 4
  4357 ;; This function calls:
  4358 ;;		Nothing
  4359 ;; This function is called by:
  4360 ;;		_efgtoa
  4361 ;;		_vfpfcnvrt
  4362 ;;		_tolower
  4363 ;; This function uses a non-reentrant model
  4364 ;;
  4365                           
  4366                           	psect	text7
  4367  004988                     __ptext7:
  4368                           	callstack 0
  4369  004988                     _isupper:
  4370                           	callstack 22
  4371  004988  0EBF               	movlw	191
  4372  00498A  6E07               	movwf	??_isupper^0,c
  4373  00498C  0EFF               	movlw	255
  4374  00498E  6E08               	movwf	(??_isupper+1)^0,c
  4375  004990  C005  F009         	movff	isupper@c,??_isupper+2
  4376  004994  C006  F00A         	movff	isupper@c+1,??_isupper+3
  4377  004998  5007               	movf	??_isupper^0,w,c
  4378  00499A  2609               	addwf	(??_isupper+2)^0,f,c
  4379  00499C  5008               	movf	(??_isupper+1)^0,w,c
  4380  00499E  220A               	addwfc	(??_isupper+3)^0,f,c
  4381  0049A0  500A               	movf	(??_isupper+3)^0,w,c
  4382  0049A2  E10A               	bnz	u6590
  4383  0049A4  0E1A               	movlw	26
  4384  0049A6  5C09               	subwf	(??_isupper+2)^0,w,c
  4385  0049A8  A0D8               	btfss	status,0,c
  4386  0049AA  EFD9  F024         	goto	u6591
  4387  0049AE  EFDC  F024         	goto	u6590
  4388  0049B2                     u6591:
  4389  0049B2  0E01               	movlw	1
  4390  0049B4  EFDD  F024         	goto	u6600
  4391  0049B8                     u6590:
  4392  0049B8  0E00               	movlw	0
  4393  0049BA                     u6600:
  4394  0049BA  6E05               	movwf	?_isupper^0,c
  4395  0049BC  6A06               	clrf	(?_isupper+1)^0,c
  4396  0049BE  0012               	return		;funcret
  4397  0049C0                     __end_of_isupper:
  4398                           	callstack 0
  4399                           
  4400 ;; *************** function _strcpy *****************
  4401 ;; Defined at:
  4402 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strcpy.c"
  4403 ;; Parameters:    Size  Location     Type
  4404 ;;  dest            2    4[COMRAM] PTR unsigned char 
  4405 ;;		 -> dbuf(80), 
  4406 ;;  src             2    6[COMRAM] PTR const unsigned char 
  4407 ;;		 -> STR_10(4), STR_9(4), STR_6(4), STR_5(4), 
  4408 ;;		 -> dbuf(80), 
  4409 ;; Auto vars:     Size  Location     Type
  4410 ;;  d               2   12[COMRAM] PTR unsigned char 
  4411 ;;		 -> dbuf(80), 
  4412 ;;  s               2   10[COMRAM] PTR const unsigned char 
  4413 ;;		 -> STR_10(4), STR_9(4), STR_6(4), STR_5(4), 
  4414 ;;		 -> dbuf(80), 
  4415 ;; Return value:  Size  Location     Type
  4416 ;;                  2    4[COMRAM] PTR unsigned char 
  4417 ;; Registers used:
  4418 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  4419 ;; Tracked objects:
  4420 ;;		On entry : 0/0
  4421 ;;		On exit  : 0/0
  4422 ;;		Unchanged: 0/0
  4423 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4424 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4425 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4426 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4427 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4428 ;;Total ram usage:       10 bytes
  4429 ;; Hardware stack levels used: 1
  4430 ;; Hardware stack levels required when called: 4
  4431 ;; This function calls:
  4432 ;;		Nothing
  4433 ;; This function is called by:
  4434 ;;		_efgtoa
  4435 ;; This function uses a non-reentrant model
  4436 ;;
  4437                           
  4438                           	psect	text8
  4439  004690                     __ptext8:
  4440                           	callstack 0
  4441  004690                     _strcpy:
  4442                           	callstack 22
  4443  004690  C007  F00B         	movff	strcpy@src,strcpy@s
  4444  004694  C008  F00C         	movff	strcpy@src+1,strcpy@s+1
  4445  004698  C005  F00D         	movff	strcpy@dest,strcpy@d
  4446  00469C  C006  F00E         	movff	strcpy@dest+1,strcpy@d+1
  4447  0046A0                     l7157:
  4448  0046A0  500B               	movf	strcpy@s^0,w,c
  4449  0046A2  6E09               	movwf	??_strcpy^0,c
  4450  0046A4  500C               	movf	(strcpy@s+1)^0,w,c
  4451  0046A6  6E0A               	movwf	(??_strcpy+1)^0,c
  4452  0046A8  4A0B               	infsnz	strcpy@s^0,f,c
  4453  0046AA  2A0C               	incf	(strcpy@s+1)^0,f,c
  4454  0046AC  C009  FFF6         	movff	??_strcpy,tblptrl
  4455  0046B0  C00A  FFF7         	movff	??_strcpy+1,tblptrh
  4456  0046B4  0E00               	movlw	low (__smallconst shr (0+16))
  4457  0046B6  6EF8               	movwf	tblptru,c
  4458  0046B8  C00D  FFD9         	movff	strcpy@d,fsr2l
  4459  0046BC  C00E  FFDA         	movff	strcpy@d+1,fsr2h
  4460  0046C0  4A0D               	infsnz	strcpy@d^0,f,c
  4461  0046C2  2A0E               	incf	(strcpy@d+1)^0,f,c
  4462  0046C4  0E0F               	movlw	(high __ramtop+-1)
  4463  0046C6  64F7               	cpfsgt	tblptrh,c
  4464  0046C8  D003               	bra	u7427
  4465  0046CA  0008               	tblrd		*
  4466  0046CC  50F5               	movf	tablat,w,c
  4467  0046CE  D005               	bra	u7420
  4468  0046D0                     u7427:
  4469  0046D0  CFF6 FFE9          	movff	tblptrl,fsr0l
  4470  0046D4  CFF7 FFEA          	movff	tblptrh,fsr0h
  4471  0046D8  50EF               	movf	indf0,w,c
  4472  0046DA                     u7420:
  4473  0046DA  6EDF               	movwf	indf2,c
  4474  0046DC  50DF               	movf	indf2,w,c
  4475  0046DE  A4D8               	btfss	status,2,c
  4476  0046E0  EF74  F023         	goto	u7431
  4477  0046E4  EF76  F023         	goto	u7430
  4478  0046E8                     u7431:
  4479  0046E8  EF50  F023         	goto	l7157
  4480  0046EC                     u7430:
  4481  0046EC  0012               	return		;funcret
  4482  0046EE                     __end_of_strcpy:
  4483                           	callstack 0
  4484                           
  4485 ;; *************** function _pad *****************
  4486 ;; Defined at:
  4487 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  4488 ;; Parameters:    Size  Location     Type
  4489 ;;  fp              2   22[COMRAM] PTR struct _IO_FILE
  4490 ;;		 -> NULL(0), 
  4491 ;;  buf             2   24[COMRAM] PTR unsigned char 
  4492 ;;		 -> dbuf(80), 
  4493 ;;  p               2   26[COMRAM] int 
  4494 ;; Auto vars:     Size  Location     Type
  4495 ;;  w               2   31[COMRAM] int 
  4496 ;;  i               2   29[COMRAM] int 
  4497 ;; Return value:  Size  Location     Type
  4498 ;;                  2   22[COMRAM] int 
  4499 ;; Registers used:
  4500 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4501 ;; Tracked objects:
  4502 ;;		On entry : 0/0
  4503 ;;		On exit  : 0/0
  4504 ;;		Unchanged: 0/0
  4505 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4506 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4507 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4508 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4509 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4510 ;;Total ram usage:       11 bytes
  4511 ;; Hardware stack levels used: 1
  4512 ;; Hardware stack levels required when called: 8
  4513 ;; This function calls:
  4514 ;;		_fputc
  4515 ;;		_fputs
  4516 ;;		_strlen
  4517 ;; This function is called by:
  4518 ;;		_efgtoa
  4519 ;; This function uses a non-reentrant model
  4520 ;;
  4521                           
  4522                           	psect	text9
  4523  003B22                     __ptext9:
  4524                           	callstack 0
  4525  003B22                     _pad:
  4526                           	callstack 18
  4527  003B22                     
  4528                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  4529  003B22  0100               	movlb	0	; () banked
  4530  003B24  A1FA               	btfss	_flags& (0+255),0,b
  4531  003B26  EF97  F01D         	goto	u7311
  4532  003B2A  EF99  F01D         	goto	u7310
  4533  003B2E                     u7311:
  4534  003B2E  EFA3  F01D         	goto	l7115
  4535  003B32                     u7310:
  4536  003B32                     
  4537                           ; BSR set to: 0
  4538                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  4539  003B32  C019  F010         	movff	pad@buf,fputs@s
  4540  003B36  C01A  F011         	movff	pad@buf+1,fputs@s+1
  4541  003B3A  C017  F012         	movff	pad@fp,fputs@fp
  4542  003B3E  C018  F013         	movff	pad@fp+1,fputs@fp+1
  4543  003B42  EC3F  F024         	call	_fputs	;wreg free
  4544  003B46                     l7115:
  4545                           
  4546                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  4547  003B46  BE1C               	btfsc	(pad@p+1)^0,7,c
  4548  003B48  EFA8  F01D         	goto	u7321
  4549  003B4C  EFAA  F01D         	goto	u7320
  4550  003B50                     u7321:
  4551  003B50  EFB0  F01D         	goto	l7119
  4552  003B54                     u7320:
  4553  003B54  C01B  F020         	movff	pad@p,pad@w
  4554  003B58  C01C  F021         	movff	pad@p+1,pad@w+1
  4555  003B5C  EFB4  F01D         	goto	l1467
  4556  003B60                     l7119:
  4557  003B60  0E00               	movlw	0
  4558  003B62  6E21               	movwf	(pad@w+1)^0,c
  4559  003B64  0E00               	movlw	0
  4560  003B66  6E20               	movwf	pad@w^0,c
  4561  003B68                     l1467:
  4562                           
  4563                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  4564  003B68  0E00               	movlw	0
  4565  003B6A  6E1F               	movwf	(pad@i+1)^0,c
  4566  003B6C  0E00               	movlw	0
  4567  003B6E  6E1E               	movwf	pad@i^0,c
  4568                           
  4569                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  4570  003B70  EFC6  F01D         	goto	l7125
  4571  003B74                     l7121:
  4572                           
  4573                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  4574  003B74  0E00               	movlw	0
  4575  003B76  6E08               	movwf	(fputc@c+1)^0,c
  4576  003B78  0E20               	movlw	32
  4577  003B7A  6E07               	movwf	fputc@c^0,c
  4578  003B7C  C017  F009         	movff	pad@fp,fputc@fp
  4579  003B80  C018  F00A         	movff	pad@fp+1,fputc@fp+1
  4580  003B84  EC33  F021         	call	_fputc	;wreg free
  4581  003B88                     
  4582                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 86:         ++i;
  4583  003B88  4A1E               	infsnz	pad@i^0,f,c
  4584  003B8A  2A1F               	incf	(pad@i+1)^0,f,c
  4585  003B8C                     l7125:
  4586                           
  4587                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  4588  003B8C  5020               	movf	pad@w^0,w,c
  4589  003B8E  5C1E               	subwf	pad@i^0,w,c
  4590  003B90  501F               	movf	(pad@i+1)^0,w,c
  4591  003B92  0A80               	xorlw	128
  4592  003B94  6E1D               	movwf	??_pad^0,c
  4593  003B96  5021               	movf	(pad@w+1)^0,w,c
  4594  003B98  0A80               	xorlw	128
  4595  003B9A  581D               	subwfb	??_pad^0,w,c
  4596  003B9C  A0D8               	btfss	status,0,c
  4597  003B9E  EFD3  F01D         	goto	u7331
  4598  003BA2  EFD5  F01D         	goto	u7330
  4599  003BA6                     u7331:
  4600  003BA6  EFBA  F01D         	goto	l7121
  4601  003BAA                     u7330:
  4602  003BAA                     
  4603                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  4604  003BAA  0100               	movlb	0	; () banked
  4605  003BAC  B1FA               	btfsc	_flags& (0+255),0,b
  4606  003BAE  EFDB  F01D         	goto	u7341
  4607  003BB2  EFDD  F01D         	goto	u7340
  4608  003BB6                     u7341:
  4609  003BB6  EFE7  F01D         	goto	l7129
  4610  003BBA                     u7340:
  4611  003BBA                     
  4612                           ; BSR set to: 0
  4613                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  4614  003BBA  C019  F010         	movff	pad@buf,fputs@s
  4615  003BBE  C01A  F011         	movff	pad@buf+1,fputs@s+1
  4616  003BC2  C017  F012         	movff	pad@fp,fputs@fp
  4617  003BC6  C018  F013         	movff	pad@fp+1,fputs@fp+1
  4618  003BCA  EC3F  F024         	call	_fputs	;wreg free
  4619  003BCE                     l7129:
  4620                           
  4621                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  4622  003BCE  C019  F005         	movff	pad@buf,strlen@s
  4623  003BD2  C01A  F006         	movff	pad@buf+1,strlen@s+1
  4624  003BD6  EC18  F025         	call	_strlen	;wreg free
  4625  003BDA  5020               	movf	pad@w^0,w,c
  4626  003BDC  2405               	addwf	?_strlen^0,w,c
  4627  003BDE  6E17               	movwf	?_pad^0,c
  4628  003BE0  5021               	movf	(pad@w+1)^0,w,c
  4629  003BE2  2006               	addwfc	(?_strlen+1)^0,w,c
  4630  003BE4  6E18               	movwf	(?_pad+1)^0,c
  4631  003BE6  0012               	return		;funcret
  4632  003BE8                     __end_of_pad:
  4633                           	callstack 0
  4634                           
  4635 ;; *************** function _strlen *****************
  4636 ;; Defined at:
  4637 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strlen.c"
  4638 ;; Parameters:    Size  Location     Type
  4639 ;;  s               2    4[COMRAM] PTR const unsigned char 
  4640 ;;		 -> dbuf(80), 
  4641 ;; Auto vars:     Size  Location     Type
  4642 ;;  a               2    6[COMRAM] PTR const unsigned char 
  4643 ;;		 -> dbuf(80), 
  4644 ;; Return value:  Size  Location     Type
  4645 ;;                  2    4[COMRAM] unsigned int 
  4646 ;; Registers used:
  4647 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4648 ;; Tracked objects:
  4649 ;;		On entry : 0/0
  4650 ;;		On exit  : 0/0
  4651 ;;		Unchanged: 0/0
  4652 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4653 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4654 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4655 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4656 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4657 ;;Total ram usage:        4 bytes
  4658 ;; Hardware stack levels used: 1
  4659 ;; Hardware stack levels required when called: 4
  4660 ;; This function calls:
  4661 ;;		Nothing
  4662 ;; This function is called by:
  4663 ;;		_pad
  4664 ;; This function uses a non-reentrant model
  4665 ;;
  4666                           
  4667                           	psect	text10
  4668  004A30                     __ptext10:
  4669                           	callstack 0
  4670  004A30                     _strlen:
  4671                           	callstack 21
  4672  004A30  C005  F007         	movff	strlen@s,strlen@a
  4673  004A34  C006  F008         	movff	strlen@s+1,strlen@a+1
  4674  004A38  EF20  F025         	goto	l6651
  4675  004A3C                     l6649:
  4676  004A3C  4A05               	infsnz	strlen@s^0,f,c
  4677  004A3E  2A06               	incf	(strlen@s+1)^0,f,c
  4678  004A40                     l6651:
  4679  004A40  C005  FFD9         	movff	strlen@s,fsr2l
  4680  004A44  C006  FFDA         	movff	strlen@s+1,fsr2h
  4681  004A48  50DF               	movf	indf2,w,c
  4682  004A4A  A4D8               	btfss	status,2,c
  4683  004A4C  EF2A  F025         	goto	u6581
  4684  004A50  EF2C  F025         	goto	u6580
  4685  004A54                     u6581:
  4686  004A54  EF1E  F025         	goto	l6649
  4687  004A58                     u6580:
  4688  004A58  5007               	movf	strlen@a^0,w,c
  4689  004A5A  5C05               	subwf	strlen@s^0,w,c
  4690  004A5C  6E05               	movwf	?_strlen^0,c
  4691  004A5E  5008               	movf	(strlen@a+1)^0,w,c
  4692  004A60  5806               	subwfb	(strlen@s+1)^0,w,c
  4693  004A62  6E06               	movwf	(?_strlen+1)^0,c
  4694  004A64  0012               	return		;funcret
  4695  004A66                     __end_of_strlen:
  4696                           	callstack 0
  4697                           
  4698 ;; *************** function _fputs *****************
  4699 ;; Defined at:
  4700 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputs.c"
  4701 ;; Parameters:    Size  Location     Type
  4702 ;;  s               2   15[COMRAM] PTR const unsigned char 
  4703 ;;		 -> dbuf(80), 
  4704 ;;  fp              2   17[COMRAM] PTR struct _IO_FILE
  4705 ;;		 -> NULL(0), 
  4706 ;; Auto vars:     Size  Location     Type
  4707 ;;  i               2   20[COMRAM] int 
  4708 ;;  c               1   19[COMRAM] unsigned char 
  4709 ;; Return value:  Size  Location     Type
  4710 ;;                  2   15[COMRAM] int 
  4711 ;; Registers used:
  4712 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4713 ;; Tracked objects:
  4714 ;;		On entry : 0/0
  4715 ;;		On exit  : 0/0
  4716 ;;		Unchanged: 0/0
  4717 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4718 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4719 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4720 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4721 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4722 ;;Total ram usage:        7 bytes
  4723 ;; Hardware stack levels used: 1
  4724 ;; Hardware stack levels required when called: 7
  4725 ;; This function calls:
  4726 ;;		_fputc
  4727 ;; This function is called by:
  4728 ;;		_pad
  4729 ;; This function uses a non-reentrant model
  4730 ;;
  4731                           
  4732                           	psect	text11
  4733  00487E                     __ptext11:
  4734                           	callstack 0
  4735  00487E                     _fputs:
  4736                           	callstack 18
  4737  00487E  0E00               	movlw	0
  4738  004880  6E16               	movwf	(fputs@i+1)^0,c
  4739  004882  0E00               	movlw	0
  4740  004884  6E15               	movwf	fputs@i^0,c
  4741  004886  EF50  F024         	goto	l6645
  4742  00488A                     l6641:
  4743  00488A  C014  F007         	movff	fputs@c,fputc@c
  4744  00488E  6A08               	clrf	(fputc@c+1)^0,c
  4745  004890  C012  F009         	movff	fputs@fp,fputc@fp
  4746  004894  C013  F00A         	movff	fputs@fp+1,fputc@fp+1
  4747  004898  EC33  F021         	call	_fputc	;wreg free
  4748  00489C  4A15               	infsnz	fputs@i^0,f,c
  4749  00489E  2A16               	incf	(fputs@i+1)^0,f,c
  4750  0048A0                     l6645:
  4751  0048A0  5015               	movf	fputs@i^0,w,c
  4752  0048A2  2410               	addwf	fputs@s^0,w,c
  4753  0048A4  6ED9               	movwf	fsr2l,c
  4754  0048A6  5016               	movf	(fputs@i+1)^0,w,c
  4755  0048A8  2011               	addwfc	(fputs@s+1)^0,w,c
  4756  0048AA  6EDA               	movwf	fsr2h,c
  4757  0048AC  50DF               	movf	indf2,w,c
  4758  0048AE  6E14               	movwf	fputs@c^0,c
  4759  0048B0  5014               	movf	fputs@c^0,w,c
  4760  0048B2  A4D8               	btfss	status,2,c
  4761  0048B4  EF5E  F024         	goto	u6571
  4762  0048B8  EF60  F024         	goto	u6570
  4763  0048BC                     u6571:
  4764  0048BC  EF45  F024         	goto	l6641
  4765  0048C0                     u6570:
  4766  0048C0  0012               	return		;funcret
  4767  0048C2                     __end_of_fputs:
  4768                           	callstack 0
  4769                           
  4770 ;; *************** function _fputc *****************
  4771 ;; Defined at:
  4772 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputc.c"
  4773 ;; Parameters:    Size  Location     Type
  4774 ;;  c               2    6[COMRAM] int 
  4775 ;;  fp              2    8[COMRAM] PTR struct _IO_FILE
  4776 ;;		 -> NULL(0), 
  4777 ;; Auto vars:     Size  Location     Type
  4778 ;;		None
  4779 ;; Return value:  Size  Location     Type
  4780 ;;                  2    6[COMRAM] int 
  4781 ;; Registers used:
  4782 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4783 ;; Tracked objects:
  4784 ;;		On entry : 0/0
  4785 ;;		On exit  : 0/0
  4786 ;;		Unchanged: 0/0
  4787 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4788 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4789 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4790 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4791 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4792 ;;Total ram usage:        9 bytes
  4793 ;; Hardware stack levels used: 1
  4794 ;; Hardware stack levels required when called: 6
  4795 ;; This function calls:
  4796 ;;		_putch
  4797 ;; This function is called by:
  4798 ;;		_pad
  4799 ;;		_vfpfcnvrt
  4800 ;;		_fputs
  4801 ;; This function uses a non-reentrant model
  4802 ;;
  4803                           
  4804                           	psect	text12
  4805  004266                     __ptext12:
  4806                           	callstack 0
  4807  004266                     _fputc:
  4808                           	callstack 21
  4809  004266  5009               	movf	fputc@fp^0,w,c
  4810  004268  100A               	iorwf	(fputc@fp+1)^0,w,c
  4811  00426A  B4D8               	btfsc	status,2,c
  4812  00426C  EF3A  F021         	goto	u6141
  4813  004270  EF3C  F021         	goto	u6140
  4814  004274                     u6141:
  4815  004274  EF45  F021         	goto	l6427
  4816  004278                     u6140:
  4817  004278  5009               	movf	fputc@fp^0,w,c
  4818  00427A  100A               	iorwf	(fputc@fp+1)^0,w,c
  4819  00427C  A4D8               	btfss	status,2,c
  4820  00427E  EF43  F021         	goto	u6151
  4821  004282  EF45  F021         	goto	u6150
  4822  004286                     u6151:
  4823  004286  EF4A  F021         	goto	l6429
  4824  00428A                     u6150:
  4825  00428A                     l6427:
  4826  00428A  5007               	movf	fputc@c^0,w,c
  4827  00428C  ECAB  F026         	call	_putch
  4828  004290  EF7D  F021         	goto	l1695
  4829  004294                     l6429:
  4830  004294  EE20 F004          	lfsr	2,4
  4831  004298  5009               	movf	fputc@fp^0,w,c
  4832  00429A  26D9               	addwf	fsr2l,f,c
  4833  00429C  500A               	movf	(fputc@fp+1)^0,w,c
  4834  00429E  22DA               	addwfc	fsr2h,f,c
  4835  0042A0  50DE               	movf	postinc2,w,c
  4836  0042A2  10DE               	iorwf	postinc2,w,c
  4837  0042A4  B4D8               	btfsc	status,2,c
  4838  0042A6  EF57  F021         	goto	u6161
  4839  0042AA  EF59  F021         	goto	u6160
  4840  0042AE                     u6161:
  4841  0042AE  EF74  F021         	goto	l6433
  4842  0042B2                     u6160:
  4843  0042B2  EE20 F004          	lfsr	2,4
  4844  0042B6  5009               	movf	fputc@fp^0,w,c
  4845  0042B8  26D9               	addwf	fsr2l,f,c
  4846  0042BA  500A               	movf	(fputc@fp+1)^0,w,c
  4847  0042BC  22DA               	addwfc	fsr2h,f,c
  4848  0042BE  EE10 F002          	lfsr	1,2
  4849  0042C2  5009               	movf	fputc@fp^0,w,c
  4850  0042C4  26E1               	addwf	fsr1l,f,c
  4851  0042C6  500A               	movf	(fputc@fp+1)^0,w,c
  4852  0042C8  22E2               	addwfc	fsr1h,f,c
  4853  0042CA  50DE               	movf	postinc2,w,c
  4854  0042CC  5CE6               	subwf	postinc1,w,c
  4855  0042CE  50E6               	movf	postinc1,w,c
  4856  0042D0  0A80               	xorlw	128
  4857  0042D2  6E0F               	movwf	(??_fputc+4)^0,c
  4858  0042D4  50DE               	movf	postinc2,w,c
  4859  0042D6  0A80               	xorlw	128
  4860  0042D8  580F               	subwfb	(??_fputc+4)^0,w,c
  4861  0042DA  B0D8               	btfsc	status,0,c
  4862  0042DC  EF72  F021         	goto	u6171
  4863  0042E0  EF74  F021         	goto	u6170
  4864  0042E4                     u6171:
  4865  0042E4  EF7D  F021         	goto	l1695
  4866  0042E8                     u6170:
  4867  0042E8                     l6433:
  4868  0042E8  EE20 F002          	lfsr	2,2
  4869  0042EC  5009               	movf	fputc@fp^0,w,c
  4870  0042EE  26D9               	addwf	fsr2l,f,c
  4871  0042F0  500A               	movf	(fputc@fp+1)^0,w,c
  4872  0042F2  22DA               	addwfc	fsr2h,f,c
  4873  0042F4  2ADE               	incf	postinc2,f,c
  4874  0042F6  0E00               	movlw	0
  4875  0042F8  22DD               	addwfc	postdec2,f,c
  4876  0042FA                     l1695:
  4877  0042FA  0012               	return		;funcret
  4878  0042FC                     __end_of_fputc:
  4879                           	callstack 0
  4880                           
  4881 ;; *************** function _putch *****************
  4882 ;; Defined at:
  4883 ;;		line 201 in file "mcc_generated_files/eusart.c"
  4884 ;; Parameters:    Size  Location     Type
  4885 ;;  txData          1    wreg     unsigned char 
  4886 ;; Auto vars:     Size  Location     Type
  4887 ;;  txData          1    5[COMRAM] unsigned char 
  4888 ;; Return value:  Size  Location     Type
  4889 ;;                  1    wreg      void 
  4890 ;; Registers used:
  4891 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4892 ;; Tracked objects:
  4893 ;;		On entry : 0/0
  4894 ;;		On exit  : 0/0
  4895 ;;		Unchanged: 0/0
  4896 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4897 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4898 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4899 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4900 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4901 ;;Total ram usage:        1 bytes
  4902 ;; Hardware stack levels used: 1
  4903 ;; Hardware stack levels required when called: 5
  4904 ;; This function calls:
  4905 ;;		_EUSART_Write
  4906 ;; This function is called by:
  4907 ;;		_fputc
  4908 ;; This function uses a non-reentrant model
  4909 ;;
  4910                           
  4911                           	psect	text13
  4912  004D56                     __ptext13:
  4913                           	callstack 0
  4914  004D56                     _putch:
  4915                           	callstack 21
  4916                           
  4917                           ;incstack = 0
  4918                           ;putch@txData stored from wreg
  4919  004D56  6E06               	movwf	putch@txData^0,c
  4920  004D58                     
  4921                           ;mcc_generated_files/eusart.c: 201: void putch(char txData);mcc_generated_files/eusart.c
      +                          : 202: {;mcc_generated_files/eusart.c: 203:     EUSART_Write(txData);
  4922  004D58  5006               	movf	putch@txData^0,w,c
  4923  004D5A  ECA4  F023         	call	_EUSART_Write
  4924  004D5E  0012               	return		;funcret
  4925  004D60                     __end_of_putch:
  4926                           	callstack 0
  4927                           
  4928 ;; *************** function _EUSART_Write *****************
  4929 ;; Defined at:
  4930 ;;		line 173 in file "mcc_generated_files/eusart.c"
  4931 ;; Parameters:    Size  Location     Type
  4932 ;;  txData          1    wreg     unsigned char 
  4933 ;; Auto vars:     Size  Location     Type
  4934 ;;  txData          1    4[COMRAM] unsigned char 
  4935 ;; Return value:  Size  Location     Type
  4936 ;;                  1    wreg      void 
  4937 ;; Registers used:
  4938 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4939 ;; Tracked objects:
  4940 ;;		On entry : 0/0
  4941 ;;		On exit  : 0/0
  4942 ;;		Unchanged: 0/0
  4943 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4944 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4945 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4946 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4947 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4948 ;;Total ram usage:        1 bytes
  4949 ;; Hardware stack levels used: 1
  4950 ;; Hardware stack levels required when called: 4
  4951 ;; This function calls:
  4952 ;;		Nothing
  4953 ;; This function is called by:
  4954 ;;		_putch
  4955 ;; This function uses a non-reentrant model
  4956 ;;
  4957                           
  4958                           	psect	text14
  4959  004748                     __ptext14:
  4960                           	callstack 0
  4961  004748                     _EUSART_Write:
  4962                           	callstack 21
  4963                           
  4964                           ;incstack = 0
  4965                           ;EUSART_Write@txData stored from wreg
  4966  004748  6E05               	movwf	EUSART_Write@txData^0,c
  4967  00474A                     l6405:
  4968                           
  4969                           ;mcc_generated_files/eusart.c: 175:     while(0 == eusartTxBufferRemaining)
  4970  00474A  0100               	movlb	0	; () banked
  4971  00474C  51FF               	movf	_eusartTxBufferRemaining& (0+255),w,b	;volatile
  4972  00474E  B4D8               	btfsc	status,2,c
  4973  004750  EFAC  F023         	goto	u6111
  4974  004754  EFAE  F023         	goto	u6110
  4975  004758                     u6111:
  4976  004758  EFA5  F023         	goto	l6405
  4977  00475C                     u6110:
  4978  00475C                     
  4979                           ; BSR set to: 0
  4980                           ;mcc_generated_files/eusart.c: 179:     if(0 == PIE1bits.TX1IE)
  4981  00475C  B89D               	btfsc	157,4,c	;volatile
  4982  00475E  EFB3  F023         	goto	u6121
  4983  004762  EFB5  F023         	goto	u6120
  4984  004766                     u6121:
  4985  004766  EFB9  F023         	goto	l595
  4986  00476A                     u6120:
  4987  00476A                     
  4988                           ; BSR set to: 0
  4989                           ;mcc_generated_files/eusart.c: 180:     {;mcc_generated_files/eusart.c: 181:         TXR
      +                          EG = txData;
  4990  00476A  C005  FFAD         	movff	EUSART_Write@txData,4013	;volatile
  4991                           
  4992                           ;mcc_generated_files/eusart.c: 182:     }
  4993  00476E  EFCE  F023         	goto	l6419
  4994  004772                     l595:
  4995                           
  4996                           ; BSR set to: 0
  4997                           ;mcc_generated_files/eusart.c: 184:     {;mcc_generated_files/eusart.c: 185:         PIE
      +                          1bits.TX1IE = 0;
  4998  004772  989D               	bcf	157,4,c	;volatile
  4999  004774                     
  5000                           ; BSR set to: 0
  5001                           ;mcc_generated_files/eusart.c: 186:         eusartTxBuffer[eusartTxHead++] = txData;
  5002  004774  0E10               	movlw	low _eusartTxBuffer
  5003  004776  245A               	addwf	_eusartTxHead^0,w,c	;volatile
  5004  004778  6ED9               	movwf	fsr2l,c
  5005  00477A  6ADA               	clrf	fsr2h,c
  5006  00477C  0E01               	movlw	high _eusartTxBuffer
  5007  00477E  22DA               	addwfc	fsr2h,f,c
  5008  004780  C005  FFDF         	movff	EUSART_Write@txData,indf2
  5009  004784                     
  5010                           ; BSR set to: 0
  5011  004784  2A5A               	incf	_eusartTxHead^0,f,c	;volatile
  5012  004786                     
  5013                           ; BSR set to: 0
  5014                           ;mcc_generated_files/eusart.c: 187:         if(sizeof(eusartTxBuffer) <= eusartTxHead)
  5015  004786  0E07               	movlw	7
  5016  004788  645A               	cpfsgt	_eusartTxHead^0,c	;volatile
  5017  00478A  EFC9  F023         	goto	u6131
  5018  00478E  EFCB  F023         	goto	u6130
  5019  004792                     u6131:
  5020  004792  EFCD  F023         	goto	l6417
  5021  004796                     u6130:
  5022  004796                     
  5023                           ; BSR set to: 0
  5024                           ;mcc_generated_files/eusart.c: 188:         {;mcc_generated_files/eusart.c: 189:        
      +                               eusartTxHead = 0;
  5025  004796  0E00               	movlw	0
  5026  004798  6E5A               	movwf	_eusartTxHead^0,c	;volatile
  5027  00479A                     l6417:
  5028                           
  5029                           ; BSR set to: 0
  5030                           ;mcc_generated_files/eusart.c: 191:         eusartTxBufferRemaining--;
  5031  00479A  07FF               	decf	_eusartTxBufferRemaining& (0+255),f,b	;volatile
  5032  00479C                     l6419:
  5033                           
  5034                           ; BSR set to: 0
  5035                           ;mcc_generated_files/eusart.c: 193:     PIE1bits.TX1IE = 1;
  5036  00479C  889D               	bsf	157,4,c	;volatile
  5037  00479E                     
  5038                           ; BSR set to: 0
  5039  00479E  0012               	return		;funcret
  5040  0047A0                     __end_of_EUSART_Write:
  5041                           	callstack 0
  5042                           
  5043 ;; *************** function _floorf *****************
  5044 ;; Defined at:
  5045 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\floorf.c"
  5046 ;; Parameters:    Size  Location     Type
  5047 ;;  x               4   29[COMRAM] float 
  5048 ;; Auto vars:     Size  Location     Type
  5049 ;;  u               4   45[COMRAM] struct .
  5050 ;;  m               4   39[COMRAM] unsigned long 
  5051 ;;  e               2   43[COMRAM] int 
  5052 ;; Return value:  Size  Location     Type
  5053 ;;                  4   29[COMRAM] float 
  5054 ;; Registers used:
  5055 ;;		wreg, status,2, status,0
  5056 ;; Tracked objects:
  5057 ;;		On entry : 0/0
  5058 ;;		On exit  : 0/0
  5059 ;;		Unchanged: 0/0
  5060 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5061 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5062 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5063 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5064 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5065 ;;Total ram usage:       20 bytes
  5066 ;; Hardware stack levels used: 1
  5067 ;; Hardware stack levels required when called: 4
  5068 ;; This function calls:
  5069 ;;		Nothing
  5070 ;; This function is called by:
  5071 ;;		_efgtoa
  5072 ;; This function uses a non-reentrant model
  5073 ;;
  5074                           
  5075                           	psect	text15
  5076  002F02                     __ptext15:
  5077                           	callstack 0
  5078  002F02                     _floorf:
  5079                           	callstack 22
  5080  002F02  C0DC  F02E         	movff	floorf@F527,floorf@u
  5081  002F06  C0DD  F02F         	movff	floorf@F527+1,floorf@u+1
  5082  002F0A  C0DE  F030         	movff	floorf@F527+2,floorf@u+2
  5083  002F0E  C0DF  F031         	movff	floorf@F527+3,floorf@u+3
  5084  002F12  C01E  F02E         	movff	floorf@x,floorf@u
  5085  002F16  C01F  F02F         	movff	floorf@x+1,floorf@u+1
  5086  002F1A  C020  F030         	movff	floorf@x+2,floorf@u+2
  5087  002F1E  C021  F031         	movff	floorf@x+3,floorf@u+3
  5088  002F22  0E81               	movlw	129
  5089  002F24  6E22               	movwf	??_floorf^0,c
  5090  002F26  0EFF               	movlw	255
  5091  002F28  6E23               	movwf	(??_floorf+1)^0,c
  5092  002F2A  C02E  F024         	movff	floorf@u,??_floorf+2
  5093  002F2E  C02F  F025         	movff	floorf@u+1,??_floorf+3
  5094  002F32  C030  F026         	movff	floorf@u+2,??_floorf+4
  5095  002F36  C031  F027         	movff	floorf@u+3,??_floorf+5
  5096  002F3A  0E18               	movlw	24
  5097  002F3C  EFA5  F017         	goto	u7470
  5098  002F40                     u7475:
  5099  002F40  90D8               	bcf	status,0,c
  5100  002F42  3227               	rrcf	(??_floorf+5)^0,f,c
  5101  002F44  3226               	rrcf	(??_floorf+4)^0,f,c
  5102  002F46  3225               	rrcf	(??_floorf+3)^0,f,c
  5103  002F48  3224               	rrcf	(??_floorf+2)^0,f,c
  5104  002F4A                     u7470:
  5105  002F4A  2EE8               	decfsz	wreg,f,c
  5106  002F4C  EFA0  F017         	goto	u7475
  5107  002F50  5024               	movf	(??_floorf+2)^0,w,c
  5108  002F52  2422               	addwf	??_floorf^0,w,c
  5109  002F54  6E2C               	movwf	floorf@e^0,c
  5110  002F56  0E00               	movlw	0
  5111  002F58  2023               	addwfc	(??_floorf+1)^0,w,c
  5112  002F5A  6E2D               	movwf	(floorf@e+1)^0,c
  5113  002F5C  BE2D               	btfsc	(floorf@e+1)^0,7,c
  5114  002F5E  EFBA  F017         	goto	u7481
  5115  002F62  502D               	movf	(floorf@e+1)^0,w,c
  5116  002F64  E109               	bnz	u7480
  5117  002F66  0E17               	movlw	23
  5118  002F68  5C2C               	subwf	floorf@e^0,w,c
  5119  002F6A  A0D8               	btfss	status,0,c
  5120  002F6C  EFBA  F017         	goto	u7481
  5121  002F70  EFBC  F017         	goto	u7480
  5122  002F74                     u7481:
  5123  002F74  EFC6  F017         	goto	l7175
  5124  002F78                     u7480:
  5125  002F78                     l7173:
  5126  002F78  C01E  F01E         	movff	floorf@x,?_floorf
  5127  002F7C  C01F  F01F         	movff	floorf@x+1,?_floorf+1
  5128  002F80  C020  F020         	movff	floorf@x+2,?_floorf+2
  5129  002F84  C021  F021         	movff	floorf@x+3,?_floorf+3
  5130  002F88  EF89  F018         	goto	l1656
  5131  002F8C                     l7175:
  5132  002F8C  BE2D               	btfsc	(floorf@e+1)^0,7,c
  5133  002F8E  EFCB  F017         	goto	u7491
  5134  002F92  EFCD  F017         	goto	u7490
  5135  002F96                     u7491:
  5136  002F96  EF3D  F018         	goto	l7185
  5137  002F9A                     u7490:
  5138  002F9A  C02C  F022         	movff	floorf@e,??_floorf
  5139  002F9E  0EFF               	movlw	255
  5140  002FA0  6E23               	movwf	(??_floorf+1)^0,c
  5141  002FA2  0EFF               	movlw	255
  5142  002FA4  6E24               	movwf	(??_floorf+2)^0,c
  5143  002FA6  0E7F               	movlw	127
  5144  002FA8  6E25               	movwf	(??_floorf+3)^0,c
  5145  002FAA  0E00               	movlw	0
  5146  002FAC  6E26               	movwf	(??_floorf+4)^0,c
  5147  002FAE                     u7505:
  5148  002FAE  6622               	tstfsz	??_floorf^0,c
  5149  002FB0  EFDC  F017         	goto	u7506
  5150  002FB4  EFE4  F017         	goto	u7507
  5151  002FB8                     u7506:
  5152  002FB8  3426               	rlcf	(??_floorf+4)^0,w,c
  5153  002FBA  3226               	rrcf	(??_floorf+4)^0,f,c
  5154  002FBC  3225               	rrcf	(??_floorf+3)^0,f,c
  5155  002FBE  3224               	rrcf	(??_floorf+2)^0,f,c
  5156  002FC0  3223               	rrcf	(??_floorf+1)^0,f,c
  5157  002FC2  2E22               	decfsz	??_floorf^0,f,c
  5158  002FC4  EFD7  F017         	goto	u7505
  5159  002FC8                     u7507:
  5160  002FC8  C023  F028         	movff	??_floorf+1,floorf@m
  5161  002FCC  C024  F029         	movff	??_floorf+2,floorf@m+1
  5162  002FD0  C025  F02A         	movff	??_floorf+3,floorf@m+2
  5163  002FD4  C026  F02B         	movff	??_floorf+4,floorf@m+3
  5164  002FD8  5028               	movf	floorf@m^0,w,c
  5165  002FDA  142E               	andwf	floorf@u^0,w,c
  5166  002FDC  6E22               	movwf	??_floorf^0,c
  5167  002FDE  5029               	movf	(floorf@m+1)^0,w,c
  5168  002FE0  142F               	andwf	(floorf@u+1)^0,w,c
  5169  002FE2  6E23               	movwf	(??_floorf+1)^0,c
  5170  002FE4  502A               	movf	(floorf@m+2)^0,w,c
  5171  002FE6  1430               	andwf	(floorf@u+2)^0,w,c
  5172  002FE8  6E24               	movwf	(??_floorf+2)^0,c
  5173  002FEA  502B               	movf	(floorf@m+3)^0,w,c
  5174  002FEC  1431               	andwf	(floorf@u+3)^0,w,c
  5175  002FEE  6E25               	movwf	(??_floorf+3)^0,c
  5176  002FF0  5022               	movf	??_floorf^0,w,c
  5177  002FF2  1023               	iorwf	(??_floorf+1)^0,w,c
  5178  002FF4  1024               	iorwf	(??_floorf+2)^0,w,c
  5179  002FF6  1025               	iorwf	(??_floorf+3)^0,w,c
  5180  002FF8  A4D8               	btfss	status,2,c
  5181  002FFA  EF01  F018         	goto	u7511
  5182  002FFE  EF03  F018         	goto	u7510
  5183  003002                     u7511:
  5184  003002  EF05  F018         	goto	l7181
  5185  003006                     u7510:
  5186  003006  EFBC  F017         	goto	l7173
  5187  00300A                     l7181:
  5188  00300A  C02E  F022         	movff	floorf@u,??_floorf
  5189  00300E  C02F  F023         	movff	floorf@u+1,??_floorf+1
  5190  003012  C030  F024         	movff	floorf@u+2,??_floorf+2
  5191  003016  C031  F025         	movff	floorf@u+3,??_floorf+3
  5192  00301A  0E20               	movlw	32
  5193  00301C  EF15  F018         	goto	u7520
  5194  003020                     u7525:
  5195  003020  90D8               	bcf	status,0,c
  5196  003022  3225               	rrcf	(??_floorf+3)^0,f,c
  5197  003024  3224               	rrcf	(??_floorf+2)^0,f,c
  5198  003026  3223               	rrcf	(??_floorf+1)^0,f,c
  5199  003028  3222               	rrcf	??_floorf^0,f,c
  5200  00302A                     u7520:
  5201  00302A  2EE8               	decfsz	wreg,f,c
  5202  00302C  EF10  F018         	goto	u7525
  5203  003030  5022               	movf	??_floorf^0,w,c
  5204  003032  1023               	iorwf	(??_floorf+1)^0,w,c
  5205  003034  1024               	iorwf	(??_floorf+2)^0,w,c
  5206  003036  1025               	iorwf	(??_floorf+3)^0,w,c
  5207  003038  B4D8               	btfsc	status,2,c
  5208  00303A  EF21  F018         	goto	u7531
  5209  00303E  EF23  F018         	goto	u7530
  5210  003042                     u7531:
  5211  003042  EF2B  F018         	goto	l1659
  5212  003046                     u7530:
  5213  003046  5028               	movf	floorf@m^0,w,c
  5214  003048  262E               	addwf	floorf@u^0,f,c
  5215  00304A  5029               	movf	(floorf@m+1)^0,w,c
  5216  00304C  222F               	addwfc	(floorf@u+1)^0,f,c
  5217  00304E  502A               	movf	(floorf@m+2)^0,w,c
  5218  003050  2230               	addwfc	(floorf@u+2)^0,f,c
  5219  003052  502B               	movf	(floorf@m+3)^0,w,c
  5220  003054  2231               	addwfc	(floorf@u+3)^0,f,c
  5221  003056                     l1659:
  5222  003056  1C28               	comf	floorf@m^0,w,c
  5223  003058  6E22               	movwf	??_floorf^0,c
  5224  00305A  1C29               	comf	(floorf@m+1)^0,w,c
  5225  00305C  6E23               	movwf	(??_floorf+1)^0,c
  5226  00305E  1C2A               	comf	(floorf@m+2)^0,w,c
  5227  003060  6E24               	movwf	(??_floorf+2)^0,c
  5228  003062  1C2B               	comf	(floorf@m+3)^0,w,c
  5229  003064  6E25               	movwf	(??_floorf+3)^0,c
  5230  003066  5022               	movf	??_floorf^0,w,c
  5231  003068  162E               	andwf	floorf@u^0,f,c
  5232  00306A  5023               	movf	(??_floorf+1)^0,w,c
  5233  00306C  162F               	andwf	(floorf@u+1)^0,f,c
  5234  00306E  5024               	movf	(??_floorf+2)^0,w,c
  5235  003070  1630               	andwf	(floorf@u+2)^0,f,c
  5236  003072  5025               	movf	(??_floorf+3)^0,w,c
  5237  003074  1631               	andwf	(floorf@u+3)^0,f,c
  5238  003076  EF81  F018         	goto	l7193
  5239  00307A                     l7185:
  5240  00307A  C02E  F022         	movff	floorf@u,??_floorf
  5241  00307E  C02F  F023         	movff	floorf@u+1,??_floorf+1
  5242  003082  C030  F024         	movff	floorf@u+2,??_floorf+2
  5243  003086  C031  F025         	movff	floorf@u+3,??_floorf+3
  5244  00308A  0E20               	movlw	32
  5245  00308C  EF4D  F018         	goto	u7540
  5246  003090                     u7545:
  5247  003090  90D8               	bcf	status,0,c
  5248  003092  3225               	rrcf	(??_floorf+3)^0,f,c
  5249  003094  3224               	rrcf	(??_floorf+2)^0,f,c
  5250  003096  3223               	rrcf	(??_floorf+1)^0,f,c
  5251  003098  3222               	rrcf	??_floorf^0,f,c
  5252  00309A                     u7540:
  5253  00309A  2EE8               	decfsz	wreg,f,c
  5254  00309C  EF48  F018         	goto	u7545
  5255  0030A0  5022               	movf	??_floorf^0,w,c
  5256  0030A2  1023               	iorwf	(??_floorf+1)^0,w,c
  5257  0030A4  1024               	iorwf	(??_floorf+2)^0,w,c
  5258  0030A6  1025               	iorwf	(??_floorf+3)^0,w,c
  5259  0030A8  A4D8               	btfss	status,2,c
  5260  0030AA  EF59  F018         	goto	u7551
  5261  0030AE  EF5B  F018         	goto	u7550
  5262  0030B2                     u7551:
  5263  0030B2  EF65  F018         	goto	l7189
  5264  0030B6                     u7550:
  5265  0030B6  0E00               	movlw	0
  5266  0030B8  6E2E               	movwf	floorf@u^0,c
  5267  0030BA  0E00               	movlw	0
  5268  0030BC  6E2F               	movwf	(floorf@u+1)^0,c
  5269  0030BE  0E00               	movlw	0
  5270  0030C0  6E30               	movwf	(floorf@u+2)^0,c
  5271  0030C2  0E00               	movlw	0
  5272  0030C4  6E31               	movwf	(floorf@u+3)^0,c
  5273  0030C6  EF81  F018         	goto	l7193
  5274  0030CA                     l7189:
  5275  0030CA  90D8               	bcf	status,0,c
  5276  0030CC  342E               	rlcf	floorf@u^0,w,c
  5277  0030CE  6E22               	movwf	??_floorf^0,c
  5278  0030D0  342F               	rlcf	(floorf@u+1)^0,w,c
  5279  0030D2  6E23               	movwf	(??_floorf+1)^0,c
  5280  0030D4  3430               	rlcf	(floorf@u+2)^0,w,c
  5281  0030D6  6E24               	movwf	(??_floorf+2)^0,c
  5282  0030D8  3431               	rlcf	(floorf@u+3)^0,w,c
  5283  0030DA  6E25               	movwf	(??_floorf+3)^0,c
  5284  0030DC  5022               	movf	??_floorf^0,w,c
  5285  0030DE  1023               	iorwf	(??_floorf+1)^0,w,c
  5286  0030E0  1024               	iorwf	(??_floorf+2)^0,w,c
  5287  0030E2  1025               	iorwf	(??_floorf+3)^0,w,c
  5288  0030E4  B4D8               	btfsc	status,2,c
  5289  0030E6  EF77  F018         	goto	u7561
  5290  0030EA  EF79  F018         	goto	u7560
  5291  0030EE                     u7561:
  5292  0030EE  EF81  F018         	goto	l7193
  5293  0030F2                     u7560:
  5294  0030F2  0E00               	movlw	0
  5295  0030F4  6E2E               	movwf	floorf@u^0,c
  5296  0030F6  0E00               	movlw	0
  5297  0030F8  6E2F               	movwf	(floorf@u+1)^0,c
  5298  0030FA  0E80               	movlw	128
  5299  0030FC  6E30               	movwf	(floorf@u+2)^0,c
  5300  0030FE  0EBF               	movlw	191
  5301  003100  6E31               	movwf	(floorf@u+3)^0,c
  5302  003102                     l7193:
  5303  003102  C02E  F01E         	movff	floorf@u,?_floorf
  5304  003106  C02F  F01F         	movff	floorf@u+1,?_floorf+1
  5305  00310A  C030  F020         	movff	floorf@u+2,?_floorf+2
  5306  00310E  C031  F021         	movff	floorf@u+3,?_floorf+3
  5307  003112                     l1656:
  5308  003112  0012               	return		;funcret
  5309  003114                     __end_of_floorf:
  5310                           	callstack 0
  5311                           
  5312 ;; *************** function ___fpclassifyf *****************
  5313 ;; Defined at:
  5314 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\__fpclassifyf.c"
  5315 ;; Parameters:    Size  Location     Type
  5316 ;;  x               4    4[COMRAM] float 
  5317 ;; Auto vars:     Size  Location     Type
  5318 ;;  u               4   14[COMRAM] struct .
  5319 ;;  e               2   12[COMRAM] int 
  5320 ;; Return value:  Size  Location     Type
  5321 ;;                  2    4[COMRAM] int 
  5322 ;; Registers used:
  5323 ;;		wreg, status,2, status,0
  5324 ;; Tracked objects:
  5325 ;;		On entry : 0/0
  5326 ;;		On exit  : 0/0
  5327 ;;		Unchanged: 0/0
  5328 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5329 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5330 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5331 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5332 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5333 ;;Total ram usage:       14 bytes
  5334 ;; Hardware stack levels used: 1
  5335 ;; Hardware stack levels required when called: 4
  5336 ;; This function calls:
  5337 ;;		Nothing
  5338 ;; This function is called by:
  5339 ;;		_efgtoa
  5340 ;; This function uses a non-reentrant model
  5341 ;;
  5342                           
  5343                           	psect	text16
  5344  003780                     __ptext16:
  5345                           	callstack 0
  5346  003780                     ___fpclassifyf:
  5347                           	callstack 22
  5348  003780  C0E0  F00F         	movff	___fpclassifyf@F465,___fpclassifyf@u
  5349  003784  C0E1  F010         	movff	___fpclassifyf@F465+1,___fpclassifyf@u+1
  5350  003788  C0E2  F011         	movff	___fpclassifyf@F465+2,___fpclassifyf@u+2
  5351  00378C  C0E3  F012         	movff	___fpclassifyf@F465+3,___fpclassifyf@u+3
  5352  003790  C005  F00F         	movff	___fpclassifyf@x,___fpclassifyf@u
  5353  003794  C006  F010         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  5354  003798  C007  F011         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  5355  00379C  C008  F012         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  5356  0037A0  C00F  F009         	movff	___fpclassifyf@u,??___fpclassifyf
  5357  0037A4  C010  F00A         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  5358  0037A8  C011  F00B         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  5359  0037AC  C012  F00C         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  5360  0037B0  0E18               	movlw	24
  5361  0037B2  EFE0  F01B         	goto	u7350
  5362  0037B6                     u7355:
  5363  0037B6  90D8               	bcf	status,0,c
  5364  0037B8  320C               	rrcf	(??___fpclassifyf+3)^0,f,c
  5365  0037BA  320B               	rrcf	(??___fpclassifyf+2)^0,f,c
  5366  0037BC  320A               	rrcf	(??___fpclassifyf+1)^0,f,c
  5367  0037BE  3209               	rrcf	??___fpclassifyf^0,f,c
  5368  0037C0                     u7350:
  5369  0037C0  2EE8               	decfsz	wreg,f,c
  5370  0037C2  EFDB  F01B         	goto	u7355
  5371  0037C6  5009               	movf	??___fpclassifyf^0,w,c
  5372  0037C8  6E0D               	movwf	___fpclassifyf@e^0,c
  5373  0037CA  6A0E               	clrf	(___fpclassifyf@e+1)^0,c
  5374  0037CC  500D               	movf	___fpclassifyf@e^0,w,c
  5375  0037CE  100E               	iorwf	(___fpclassifyf@e+1)^0,w,c
  5376  0037D0  A4D8               	btfss	status,2,c
  5377  0037D2  EFED  F01B         	goto	u7361
  5378  0037D6  EFEF  F01B         	goto	u7360
  5379  0037DA                     u7361:
  5380  0037DA  EF0F  F01C         	goto	l7145
  5381  0037DE                     u7360:
  5382  0037DE  90D8               	bcf	status,0,c
  5383  0037E0  340F               	rlcf	___fpclassifyf@u^0,w,c
  5384  0037E2  6E09               	movwf	??___fpclassifyf^0,c
  5385  0037E4  3410               	rlcf	(___fpclassifyf@u+1)^0,w,c
  5386  0037E6  6E0A               	movwf	(??___fpclassifyf+1)^0,c
  5387  0037E8  3411               	rlcf	(___fpclassifyf@u+2)^0,w,c
  5388  0037EA  6E0B               	movwf	(??___fpclassifyf+2)^0,c
  5389  0037EC  3412               	rlcf	(___fpclassifyf@u+3)^0,w,c
  5390  0037EE  6E0C               	movwf	(??___fpclassifyf+3)^0,c
  5391  0037F0  5009               	movf	??___fpclassifyf^0,w,c
  5392  0037F2  100A               	iorwf	(??___fpclassifyf+1)^0,w,c
  5393  0037F4  100B               	iorwf	(??___fpclassifyf+2)^0,w,c
  5394  0037F6  100C               	iorwf	(??___fpclassifyf+3)^0,w,c
  5395  0037F8  A4D8               	btfss	status,2,c
  5396  0037FA  EF01  F01C         	goto	u7371
  5397  0037FE  EF03  F01C         	goto	u7370
  5398  003802                     u7371:
  5399  003802  EF09  F01C         	goto	l7141
  5400  003806                     u7370:
  5401  003806  0E00               	movlw	0
  5402  003808  6E06               	movwf	(?___fpclassifyf+1)^0,c
  5403  00380A  0E02               	movlw	2
  5404  00380C  6E05               	movwf	?___fpclassifyf^0,c
  5405  00380E  EF3E  F01C         	goto	l1618
  5406  003812                     l7141:
  5407  003812  0E00               	movlw	0
  5408  003814  6E06               	movwf	(?___fpclassifyf+1)^0,c
  5409  003816  0E03               	movlw	3
  5410  003818  6E05               	movwf	?___fpclassifyf^0,c
  5411  00381A  EF3E  F01C         	goto	l1618
  5412  00381E                     l7145:
  5413  00381E  280D               	incf	___fpclassifyf@e^0,w,c
  5414  003820  100E               	iorwf	(___fpclassifyf@e+1)^0,w,c
  5415  003822  A4D8               	btfss	status,2,c
  5416  003824  EF16  F01C         	goto	u7381
  5417  003828  EF18  F01C         	goto	u7380
  5418  00382C                     u7381:
  5419  00382C  EF3A  F01C         	goto	l7151
  5420  003830                     u7380:
  5421  003830  C00F  F009         	movff	___fpclassifyf@u,??___fpclassifyf
  5422  003834  C010  F00A         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  5423  003838  C011  F00B         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  5424  00383C  C012  F00C         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  5425  003840  0E09               	movlw	9
  5426  003842                     u7395:
  5427  003842  90D8               	bcf	status,0,c
  5428  003844  3609               	rlcf	??___fpclassifyf^0,f,c
  5429  003846  360A               	rlcf	(??___fpclassifyf+1)^0,f,c
  5430  003848  360B               	rlcf	(??___fpclassifyf+2)^0,f,c
  5431  00384A  360C               	rlcf	(??___fpclassifyf+3)^0,f,c
  5432  00384C  2EE8               	decfsz	wreg,f,c
  5433  00384E  EF21  F01C         	goto	u7395
  5434  003852  5009               	movf	??___fpclassifyf^0,w,c
  5435  003854  100A               	iorwf	(??___fpclassifyf+1)^0,w,c
  5436  003856  100B               	iorwf	(??___fpclassifyf+2)^0,w,c
  5437  003858  100C               	iorwf	(??___fpclassifyf+3)^0,w,c
  5438  00385A  B4D8               	btfsc	status,2,c
  5439  00385C  EF32  F01C         	goto	u7401
  5440  003860  EF35  F01C         	goto	u7400
  5441  003864                     u7401:
  5442  003864  0E01               	movlw	1
  5443  003866  EF36  F01C         	goto	u7410
  5444  00386A                     u7400:
  5445  00386A  0E00               	movlw	0
  5446  00386C                     u7410:
  5447  00386C  6E05               	movwf	?___fpclassifyf^0,c
  5448  00386E  6A06               	clrf	(?___fpclassifyf+1)^0,c
  5449  003870  EF3E  F01C         	goto	l1618
  5450  003874                     l7151:
  5451  003874  0E00               	movlw	0
  5452  003876  6E06               	movwf	(?___fpclassifyf+1)^0,c
  5453  003878  0E04               	movlw	4
  5454  00387A  6E05               	movwf	?___fpclassifyf^0,c
  5455  00387C                     l1618:
  5456  00387C  0012               	return		;funcret
  5457  00387E                     __end_of___fpclassifyf:
  5458                           	callstack 0
  5459                           
  5460 ;; *************** function ___fltol *****************
  5461 ;; Defined at:
  5462 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\fltol.c"
  5463 ;; Parameters:    Size  Location     Type
  5464 ;;  f1              4    4[COMRAM] int 
  5465 ;; Auto vars:     Size  Location     Type
  5466 ;;  exp1            1   13[COMRAM] unsigned char 
  5467 ;;  sign1           1   12[COMRAM] unsigned char 
  5468 ;; Return value:  Size  Location     Type
  5469 ;;                  4    4[COMRAM] long 
  5470 ;; Registers used:
  5471 ;;		wreg, status,2, status,0
  5472 ;; Tracked objects:
  5473 ;;		On entry : 0/0
  5474 ;;		On exit  : 0/0
  5475 ;;		Unchanged: 0/0
  5476 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5477 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5478 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5479 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5480 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5481 ;;Total ram usage:       10 bytes
  5482 ;; Hardware stack levels used: 1
  5483 ;; Hardware stack levels required when called: 4
  5484 ;; This function calls:
  5485 ;;		Nothing
  5486 ;; This function is called by:
  5487 ;;		_efgtoa
  5488 ;; This function uses a non-reentrant model
  5489 ;;
  5490                           
  5491                           	psect	text17
  5492  003576                     __ptext17:
  5493                           	callstack 0
  5494  003576                     ___fltol:
  5495                           	callstack 22
  5496  003576  3407               	rlcf	(___fltol@f1+2)^0,w,c
  5497  003578  3408               	rlcf	(___fltol@f1+3)^0,w,c
  5498  00357A  6E0E               	movwf	___fltol@exp1^0,c
  5499  00357C  500E               	movf	___fltol@exp1^0,w,c
  5500  00357E  A4D8               	btfss	status,2,c
  5501  003580  EFC4  F01A         	goto	u7241
  5502  003584  EFC6  F01A         	goto	u7240
  5503  003588                     u7241:
  5504  003588  EFD0  F01A         	goto	l7073
  5505  00358C                     u7240:
  5506  00358C                     l7069:
  5507  00358C  0E00               	movlw	0
  5508  00358E  6E05               	movwf	?___fltol^0,c
  5509  003590  0E00               	movlw	0
  5510  003592  6E06               	movwf	(?___fltol+1)^0,c
  5511  003594  0E00               	movlw	0
  5512  003596  6E07               	movwf	(?___fltol+2)^0,c
  5513  003598  0E00               	movlw	0
  5514  00359A  6E08               	movwf	(?___fltol+3)^0,c
  5515  00359C  EF3D  F01B         	goto	l1045
  5516  0035A0                     l7073:
  5517  0035A0  C005  F009         	movff	___fltol@f1,??___fltol
  5518  0035A4  C006  F00A         	movff	___fltol@f1+1,??___fltol+1
  5519  0035A8  C007  F00B         	movff	___fltol@f1+2,??___fltol+2
  5520  0035AC  C008  F00C         	movff	___fltol@f1+3,??___fltol+3
  5521  0035B0  0E20               	movlw	32
  5522  0035B2  EFE0  F01A         	goto	u7250
  5523  0035B6                     u7255:
  5524  0035B6  90D8               	bcf	status,0,c
  5525  0035B8  320C               	rrcf	(??___fltol+3)^0,f,c
  5526  0035BA  320B               	rrcf	(??___fltol+2)^0,f,c
  5527  0035BC  320A               	rrcf	(??___fltol+1)^0,f,c
  5528  0035BE  3209               	rrcf	??___fltol^0,f,c
  5529  0035C0                     u7250:
  5530  0035C0  2EE8               	decfsz	wreg,f,c
  5531  0035C2  EFDB  F01A         	goto	u7255
  5532  0035C6  5009               	movf	??___fltol^0,w,c
  5533  0035C8  6E0D               	movwf	___fltol@sign1^0,c
  5534  0035CA  8E07               	bsf	(___fltol@f1+2)^0,7,c
  5535  0035CC  0EFF               	movlw	255
  5536  0035CE  1605               	andwf	___fltol@f1^0,f,c
  5537  0035D0  0EFF               	movlw	255
  5538  0035D2  1606               	andwf	(___fltol@f1+1)^0,f,c
  5539  0035D4  0EFF               	movlw	255
  5540  0035D6  1607               	andwf	(___fltol@f1+2)^0,f,c
  5541  0035D8  0E00               	movlw	0
  5542  0035DA  1608               	andwf	(___fltol@f1+3)^0,f,c
  5543  0035DC  0E96               	movlw	150
  5544  0035DE  5E0E               	subwf	___fltol@exp1^0,f,c
  5545  0035E0  BE0E               	btfsc	___fltol@exp1^0,7,c
  5546  0035E2  EFF7  F01A         	goto	u7260
  5547  0035E6  EFF5  F01A         	goto	u7261
  5548  0035EA                     u7261:
  5549  0035EA  EF0D  F01B         	goto	l7093
  5550  0035EE                     u7260:
  5551  0035EE  500E               	movf	___fltol@exp1^0,w,c
  5552  0035F0  0A80               	xorlw	128
  5553  0035F2  0F97               	addlw	151
  5554  0035F4  B0D8               	btfsc	status,0,c
  5555  0035F6  EFFF  F01A         	goto	u7271
  5556  0035FA  EF01  F01B         	goto	u7270
  5557  0035FE                     u7271:
  5558  0035FE  EF03  F01B         	goto	l7089
  5559  003602                     u7270:
  5560  003602  EFC6  F01A         	goto	l7069
  5561  003606                     l7089:
  5562  003606  90D8               	bcf	status,0,c
  5563  003608  3208               	rrcf	(___fltol@f1+3)^0,f,c
  5564  00360A  3207               	rrcf	(___fltol@f1+2)^0,f,c
  5565  00360C  3206               	rrcf	(___fltol@f1+1)^0,f,c
  5566  00360E  3205               	rrcf	___fltol@f1^0,f,c
  5567  003610  3E0E               	incfsz	___fltol@exp1^0,f,c
  5568  003612  EF03  F01B         	goto	l7089
  5569  003616  EF25  F01B         	goto	l7103
  5570  00361A                     l7093:
  5571  00361A  0E1F               	movlw	31
  5572  00361C  640E               	cpfsgt	___fltol@exp1^0,c
  5573  00361E  EF13  F01B         	goto	u7281
  5574  003622  EF15  F01B         	goto	u7280
  5575  003626                     u7281:
  5576  003626  EF1D  F01B         	goto	l7101
  5577  00362A                     u7280:
  5578  00362A  EFC6  F01A         	goto	l7069
  5579  00362E                     l7099:
  5580  00362E  90D8               	bcf	status,0,c
  5581  003630  3605               	rlcf	___fltol@f1^0,f,c
  5582  003632  3606               	rlcf	(___fltol@f1+1)^0,f,c
  5583  003634  3607               	rlcf	(___fltol@f1+2)^0,f,c
  5584  003636  3608               	rlcf	(___fltol@f1+3)^0,f,c
  5585  003638  060E               	decf	___fltol@exp1^0,f,c
  5586  00363A                     l7101:
  5587  00363A  500E               	movf	___fltol@exp1^0,w,c
  5588  00363C  A4D8               	btfss	status,2,c
  5589  00363E  EF23  F01B         	goto	u7291
  5590  003642  EF25  F01B         	goto	u7290
  5591  003646                     u7291:
  5592  003646  EF17  F01B         	goto	l7099
  5593  00364A                     u7290:
  5594  00364A                     l7103:
  5595  00364A  500D               	movf	___fltol@sign1^0,w,c
  5596  00364C  B4D8               	btfsc	status,2,c
  5597  00364E  EF2B  F01B         	goto	u7301
  5598  003652  EF2D  F01B         	goto	u7300
  5599  003656                     u7301:
  5600  003656  EF35  F01B         	goto	l7107
  5601  00365A                     u7300:
  5602  00365A  1E08               	comf	(___fltol@f1+3)^0,f,c
  5603  00365C  1E07               	comf	(___fltol@f1+2)^0,f,c
  5604  00365E  1E06               	comf	(___fltol@f1+1)^0,f,c
  5605  003660  6C05               	negf	___fltol@f1^0,c
  5606  003662  0E00               	movlw	0
  5607  003664  2206               	addwfc	(___fltol@f1+1)^0,f,c
  5608  003666  2207               	addwfc	(___fltol@f1+2)^0,f,c
  5609  003668  2208               	addwfc	(___fltol@f1+3)^0,f,c
  5610  00366A                     l7107:
  5611  00366A  C005  F005         	movff	___fltol@f1,?___fltol
  5612  00366E  C006  F006         	movff	___fltol@f1+1,?___fltol+1
  5613  003672  C007  F007         	movff	___fltol@f1+2,?___fltol+2
  5614  003676  C008  F008         	movff	___fltol@f1+3,?___fltol+3
  5615  00367A                     l1045:
  5616  00367A  0012               	return		;funcret
  5617  00367C                     __end_of___fltol:
  5618                           	callstack 0
  5619                           
  5620 ;; *************** function ___flsub *****************
  5621 ;; Defined at:
  5622 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcadd.c"
  5623 ;; Parameters:    Size  Location     Type
  5624 ;;  b               4   59[COMRAM] long 
  5625 ;;  a               4   63[COMRAM] long 
  5626 ;; Auto vars:     Size  Location     Type
  5627 ;;		None
  5628 ;; Return value:  Size  Location     Type
  5629 ;;                  4   59[COMRAM] long 
  5630 ;; Registers used:
  5631 ;;		wreg, status,2, status,0, cstack
  5632 ;; Tracked objects:
  5633 ;;		On entry : 0/0
  5634 ;;		On exit  : 0/0
  5635 ;;		Unchanged: 0/0
  5636 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5637 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5638 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5639 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5640 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5641 ;;Total ram usage:        8 bytes
  5642 ;; Hardware stack levels used: 1
  5643 ;; Hardware stack levels required when called: 5
  5644 ;; This function calls:
  5645 ;;		___fladd
  5646 ;; This function is called by:
  5647 ;;		_efgtoa
  5648 ;; This function uses a non-reentrant model
  5649 ;;
  5650                           
  5651                           	psect	text18
  5652  0047F2                     __ptext18:
  5653                           	callstack 0
  5654  0047F2                     ___flsub:
  5655                           	callstack 21
  5656  0047F2  0E00               	movlw	0
  5657  0047F4  1A40               	xorwf	___flsub@a^0,f,c
  5658  0047F6  0E00               	movlw	0
  5659  0047F8  1A41               	xorwf	(___flsub@a+1)^0,f,c
  5660  0047FA  0E00               	movlw	0
  5661  0047FC  1A42               	xorwf	(___flsub@a+2)^0,f,c
  5662  0047FE  0E80               	movlw	128
  5663  004800  1A43               	xorwf	(___flsub@a+3)^0,f,c
  5664  004802  C03C  F02C         	movff	___flsub@b,___fladd@b
  5665  004806  C03D  F02D         	movff	___flsub@b+1,___fladd@b+1
  5666  00480A  C03E  F02E         	movff	___flsub@b+2,___fladd@b+2
  5667  00480E  C03F  F02F         	movff	___flsub@b+3,___fladd@b+3
  5668  004812  C040  F030         	movff	___flsub@a,___fladd@a
  5669  004816  C041  F031         	movff	___flsub@a+1,___fladd@a+1
  5670  00481A  C042  F032         	movff	___flsub@a+2,___fladd@a+2
  5671  00481E  C043  F033         	movff	___flsub@a+3,___fladd@a+3
  5672  004822  EC3F  F011         	call	___fladd	;wreg free
  5673  004826  C02C  F03C         	movff	?___fladd,?___flsub
  5674  00482A  C02D  F03D         	movff	?___fladd+1,?___flsub+1
  5675  00482E  C02E  F03E         	movff	?___fladd+2,?___flsub+2
  5676  004832  C02F  F03F         	movff	?___fladd+3,?___flsub+3
  5677  004836  0012               	return		;funcret
  5678  004838                     __end_of___flsub:
  5679                           	callstack 0
  5680                           
  5681 ;; *************** function ___flneg *****************
  5682 ;; Defined at:
  5683 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\flneg.c"
  5684 ;; Parameters:    Size  Location     Type
  5685 ;;  f1              4    4[COMRAM] long 
  5686 ;; Auto vars:     Size  Location     Type
  5687 ;;		None
  5688 ;; Return value:  Size  Location     Type
  5689 ;;                  4    4[COMRAM] long 
  5690 ;; Registers used:
  5691 ;;		wreg, status,2, status,0
  5692 ;; Tracked objects:
  5693 ;;		On entry : 0/0
  5694 ;;		On exit  : 0/0
  5695 ;;		Unchanged: 0/0
  5696 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5697 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5698 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5699 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5700 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5701 ;;Total ram usage:        4 bytes
  5702 ;; Hardware stack levels used: 1
  5703 ;; Hardware stack levels required when called: 4
  5704 ;; This function calls:
  5705 ;;		Nothing
  5706 ;; This function is called by:
  5707 ;;		_efgtoa
  5708 ;; This function uses a non-reentrant model
  5709 ;;
  5710                           
  5711                           	psect	text19
  5712  0049C0                     __ptext19:
  5713                           	callstack 0
  5714  0049C0                     ___flneg:
  5715                           	callstack 22
  5716  0049C0  5005               	movf	___flneg@f1^0,w,c
  5717  0049C2  1006               	iorwf	(___flneg@f1+1)^0,w,c
  5718  0049C4  1007               	iorwf	(___flneg@f1+2)^0,w,c
  5719  0049C6  1008               	iorwf	(___flneg@f1+3)^0,w,c
  5720  0049C8  B4D8               	btfsc	status,2,c
  5721  0049CA  EFE9  F024         	goto	u7231
  5722  0049CE  EFEB  F024         	goto	u7230
  5723  0049D2                     u7231:
  5724  0049D2  EFF3  F024         	goto	l7063
  5725  0049D6                     u7230:
  5726  0049D6  0E00               	movlw	0
  5727  0049D8  1A05               	xorwf	___flneg@f1^0,f,c
  5728  0049DA  0E00               	movlw	0
  5729  0049DC  1A06               	xorwf	(___flneg@f1+1)^0,f,c
  5730  0049DE  0E00               	movlw	0
  5731  0049E0  1A07               	xorwf	(___flneg@f1+2)^0,f,c
  5732  0049E2  0E80               	movlw	128
  5733  0049E4  1A08               	xorwf	(___flneg@f1+3)^0,f,c
  5734  0049E6                     l7063:
  5735  0049E6  C005  F005         	movff	___flneg@f1,?___flneg
  5736  0049EA  C006  F006         	movff	___flneg@f1+1,?___flneg+1
  5737  0049EE  C007  F007         	movff	___flneg@f1+2,?___flneg+2
  5738  0049F2  C008  F008         	movff	___flneg@f1+3,?___flneg+3
  5739  0049F6  0012               	return		;funcret
  5740  0049F8                     __end_of___flneg:
  5741                           	callstack 0
  5742                           
  5743 ;; *************** function ___flge *****************
  5744 ;; Defined at:
  5745 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\flge.c"
  5746 ;; Parameters:    Size  Location     Type
  5747 ;;  ff1             4   43[COMRAM] long 
  5748 ;;  ff2             4   47[COMRAM] long 
  5749 ;; Auto vars:     Size  Location     Type
  5750 ;;		None
  5751 ;; Return value:  Size  Location     Type
  5752 ;;		None               void
  5753 ;; Registers used:
  5754 ;;		wreg, status,2, status,0
  5755 ;; Tracked objects:
  5756 ;;		On entry : 0/0
  5757 ;;		On exit  : 0/0
  5758 ;;		Unchanged: 0/0
  5759 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5760 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5761 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5762 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5763 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5764 ;;Total ram usage:       12 bytes
  5765 ;; Hardware stack levels used: 1
  5766 ;; Hardware stack levels required when called: 4
  5767 ;; This function calls:
  5768 ;;		Nothing
  5769 ;; This function is called by:
  5770 ;;		_efgtoa
  5771 ;; This function uses a non-reentrant model
  5772 ;;
  5773                           
  5774                           	psect	text20
  5775  00367C                     __ptext20:
  5776                           	callstack 0
  5777  00367C                     ___flge:
  5778                           	callstack 22
  5779  00367C  0E00               	movlw	0
  5780  00367E  142C               	andwf	___flge@ff1^0,w,c
  5781  003680  6E34               	movwf	??___flge^0,c
  5782  003682  0E00               	movlw	0
  5783  003684  142D               	andwf	(___flge@ff1+1)^0,w,c
  5784  003686  6E35               	movwf	(??___flge+1)^0,c
  5785  003688  0E80               	movlw	128
  5786  00368A  142E               	andwf	(___flge@ff1+2)^0,w,c
  5787  00368C  6E36               	movwf	(??___flge+2)^0,c
  5788  00368E  0E7F               	movlw	127
  5789  003690  142F               	andwf	(___flge@ff1+3)^0,w,c
  5790  003692  6E37               	movwf	(??___flge+3)^0,c
  5791  003694  5034               	movf	??___flge^0,w,c
  5792  003696  1035               	iorwf	(??___flge+1)^0,w,c
  5793  003698  1036               	iorwf	(??___flge+2)^0,w,c
  5794  00369A  1037               	iorwf	(??___flge+3)^0,w,c
  5795  00369C  A4D8               	btfss	status,2,c
  5796  00369E  EF53  F01B         	goto	u7181
  5797  0036A2  EF55  F01B         	goto	u7180
  5798  0036A6                     u7181:
  5799  0036A6  EF5D  F01B         	goto	l7041
  5800  0036AA                     u7180:
  5801  0036AA  0E00               	movlw	0
  5802  0036AC  6E2C               	movwf	___flge@ff1^0,c
  5803  0036AE  0E00               	movlw	0
  5804  0036B0  6E2D               	movwf	(___flge@ff1+1)^0,c
  5805  0036B2  0E00               	movlw	0
  5806  0036B4  6E2E               	movwf	(___flge@ff1+2)^0,c
  5807  0036B6  0E00               	movlw	0
  5808  0036B8  6E2F               	movwf	(___flge@ff1+3)^0,c
  5809  0036BA                     l7041:
  5810  0036BA  0E00               	movlw	0
  5811  0036BC  1430               	andwf	___flge@ff2^0,w,c
  5812  0036BE  6E34               	movwf	??___flge^0,c
  5813  0036C0  0E00               	movlw	0
  5814  0036C2  1431               	andwf	(___flge@ff2+1)^0,w,c
  5815  0036C4  6E35               	movwf	(??___flge+1)^0,c
  5816  0036C6  0E80               	movlw	128
  5817  0036C8  1432               	andwf	(___flge@ff2+2)^0,w,c
  5818  0036CA  6E36               	movwf	(??___flge+2)^0,c
  5819  0036CC  0E7F               	movlw	127
  5820  0036CE  1433               	andwf	(___flge@ff2+3)^0,w,c
  5821  0036D0  6E37               	movwf	(??___flge+3)^0,c
  5822  0036D2  5034               	movf	??___flge^0,w,c
  5823  0036D4  1035               	iorwf	(??___flge+1)^0,w,c
  5824  0036D6  1036               	iorwf	(??___flge+2)^0,w,c
  5825  0036D8  1037               	iorwf	(??___flge+3)^0,w,c
  5826  0036DA  A4D8               	btfss	status,2,c
  5827  0036DC  EF72  F01B         	goto	u7191
  5828  0036E0  EF74  F01B         	goto	u7190
  5829  0036E4                     u7191:
  5830  0036E4  EF7C  F01B         	goto	l7045
  5831  0036E8                     u7190:
  5832  0036E8  0E00               	movlw	0
  5833  0036EA  6E30               	movwf	___flge@ff2^0,c
  5834  0036EC  0E00               	movlw	0
  5835  0036EE  6E31               	movwf	(___flge@ff2+1)^0,c
  5836  0036F0  0E00               	movlw	0
  5837  0036F2  6E32               	movwf	(___flge@ff2+2)^0,c
  5838  0036F4  0E00               	movlw	0
  5839  0036F6  6E33               	movwf	(___flge@ff2+3)^0,c
  5840  0036F8                     l7045:
  5841  0036F8  AE2F               	btfss	(___flge@ff1+3)^0,7,c
  5842  0036FA  EF81  F01B         	goto	u7201
  5843  0036FE  EF83  F01B         	goto	u7200
  5844  003702                     u7201:
  5845  003702  EF8C  F01B         	goto	l7049
  5846  003706                     u7200:
  5847  003706  6C2C               	negf	___flge@ff1^0,c
  5848  003708  1E2D               	comf	(___flge@ff1+1)^0,f,c
  5849  00370A  B0D8               	btfsc	status,0,c
  5850  00370C  2A2D               	incf	(___flge@ff1+1)^0,f,c
  5851  00370E  1E2E               	comf	(___flge@ff1+2)^0,f,c
  5852  003710  B0D8               	btfsc	status,0,c
  5853  003712  2A2E               	incf	(___flge@ff1+2)^0,f,c
  5854  003714  0E80               	movlw	128
  5855  003716  562F               	subfwb	(___flge@ff1+3)^0,f,c
  5856  003718                     l7049:
  5857  003718  AE33               	btfss	(___flge@ff2+3)^0,7,c
  5858  00371A  EF91  F01B         	goto	u7211
  5859  00371E  EF93  F01B         	goto	u7210
  5860  003722                     u7211:
  5861  003722  EF9C  F01B         	goto	l1013
  5862  003726                     u7210:
  5863  003726  6C30               	negf	___flge@ff2^0,c
  5864  003728  1E31               	comf	(___flge@ff2+1)^0,f,c
  5865  00372A  B0D8               	btfsc	status,0,c
  5866  00372C  2A31               	incf	(___flge@ff2+1)^0,f,c
  5867  00372E  1E32               	comf	(___flge@ff2+2)^0,f,c
  5868  003730  B0D8               	btfsc	status,0,c
  5869  003732  2A32               	incf	(___flge@ff2+2)^0,f,c
  5870  003734  0E80               	movlw	128
  5871  003736  5633               	subfwb	(___flge@ff2+3)^0,f,c
  5872  003738                     l1013:
  5873  003738  0E00               	movlw	0
  5874  00373A  1A2C               	xorwf	___flge@ff1^0,f,c
  5875  00373C  0E00               	movlw	0
  5876  00373E  1A2D               	xorwf	(___flge@ff1+1)^0,f,c
  5877  003740  0E00               	movlw	0
  5878  003742  1A2E               	xorwf	(___flge@ff1+2)^0,f,c
  5879  003744  0E80               	movlw	128
  5880  003746  1A2F               	xorwf	(___flge@ff1+3)^0,f,c
  5881  003748  0E00               	movlw	0
  5882  00374A  1A30               	xorwf	___flge@ff2^0,f,c
  5883  00374C  0E00               	movlw	0
  5884  00374E  1A31               	xorwf	(___flge@ff2+1)^0,f,c
  5885  003750  0E00               	movlw	0
  5886  003752  1A32               	xorwf	(___flge@ff2+2)^0,f,c
  5887  003754  0E80               	movlw	128
  5888  003756  1A33               	xorwf	(___flge@ff2+3)^0,f,c
  5889  003758  5030               	movf	___flge@ff2^0,w,c
  5890  00375A  5C2C               	subwf	___flge@ff1^0,w,c
  5891  00375C  5031               	movf	(___flge@ff2+1)^0,w,c
  5892  00375E  582D               	subwfb	(___flge@ff1+1)^0,w,c
  5893  003760  5032               	movf	(___flge@ff2+2)^0,w,c
  5894  003762  582E               	subwfb	(___flge@ff1+2)^0,w,c
  5895  003764  5033               	movf	(___flge@ff2+3)^0,w,c
  5896  003766  582F               	subwfb	(___flge@ff1+3)^0,w,c
  5897  003768  B0D8               	btfsc	status,0,c
  5898  00376A  EFB9  F01B         	goto	u7221
  5899  00376E  EFBB  F01B         	goto	u7220
  5900  003772                     u7221:
  5901  003772  EFBE  F01B         	goto	l7055
  5902  003776                     u7220:
  5903  003776  90D8               	bcf	status,0,c
  5904  003778  EFBF  F01B         	goto	l1018
  5905  00377C                     l7055:
  5906  00377C  80D8               	bsf	status,0,c
  5907  00377E                     l1018:
  5908  00377E  0012               	return		;funcret
  5909  003780                     __end_of___flge:
  5910                           	callstack 0
  5911                           
  5912 ;; *************** function ___fleq *****************
  5913 ;; Defined at:
  5914 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\fleq.c"
  5915 ;; Parameters:    Size  Location     Type
  5916 ;;  ff1             4    4[COMRAM] long 
  5917 ;;  ff2             4    8[COMRAM] long 
  5918 ;; Auto vars:     Size  Location     Type
  5919 ;;		None
  5920 ;; Return value:  Size  Location     Type
  5921 ;;		None               void
  5922 ;; Registers used:
  5923 ;;		wreg, status,2, status,0
  5924 ;; Tracked objects:
  5925 ;;		On entry : 0/0
  5926 ;;		On exit  : 0/0
  5927 ;;		Unchanged: 0/0
  5928 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5929 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5930 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5931 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5932 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5933 ;;Total ram usage:       12 bytes
  5934 ;; Hardware stack levels used: 1
  5935 ;; Hardware stack levels required when called: 4
  5936 ;; This function calls:
  5937 ;;		Nothing
  5938 ;; This function is called by:
  5939 ;;		_efgtoa
  5940 ;; This function uses a non-reentrant model
  5941 ;;
  5942                           
  5943                           	psect	text21
  5944  004116                     __ptext21:
  5945                           	callstack 0
  5946  004116                     ___fleq:
  5947                           	callstack 22
  5948  004116  0E00               	movlw	0
  5949  004118  1405               	andwf	___fleq@ff1^0,w,c
  5950  00411A  6E0D               	movwf	??___fleq^0,c
  5951  00411C  0E00               	movlw	0
  5952  00411E  1406               	andwf	(___fleq@ff1+1)^0,w,c
  5953  004120  6E0E               	movwf	(??___fleq+1)^0,c
  5954  004122  0E80               	movlw	128
  5955  004124  1407               	andwf	(___fleq@ff1+2)^0,w,c
  5956  004126  6E0F               	movwf	(??___fleq+2)^0,c
  5957  004128  0E7F               	movlw	127
  5958  00412A  1408               	andwf	(___fleq@ff1+3)^0,w,c
  5959  00412C  6E10               	movwf	(??___fleq+3)^0,c
  5960  00412E  500D               	movf	??___fleq^0,w,c
  5961  004130  100E               	iorwf	(??___fleq+1)^0,w,c
  5962  004132  100F               	iorwf	(??___fleq+2)^0,w,c
  5963  004134  1010               	iorwf	(??___fleq+3)^0,w,c
  5964  004136  A4D8               	btfss	status,2,c
  5965  004138  EFA0  F020         	goto	u7151
  5966  00413C  EFA2  F020         	goto	u7150
  5967  004140                     u7151:
  5968  004140  EFAA  F020         	goto	l7025
  5969  004144                     u7150:
  5970  004144  0E00               	movlw	0
  5971  004146  6E05               	movwf	___fleq@ff1^0,c
  5972  004148  0E00               	movlw	0
  5973  00414A  6E06               	movwf	(___fleq@ff1+1)^0,c
  5974  00414C  0E00               	movlw	0
  5975  00414E  6E07               	movwf	(___fleq@ff1+2)^0,c
  5976  004150  0E00               	movlw	0
  5977  004152  6E08               	movwf	(___fleq@ff1+3)^0,c
  5978  004154                     l7025:
  5979  004154  0E00               	movlw	0
  5980  004156  1409               	andwf	___fleq@ff2^0,w,c
  5981  004158  6E0D               	movwf	??___fleq^0,c
  5982  00415A  0E00               	movlw	0
  5983  00415C  140A               	andwf	(___fleq@ff2+1)^0,w,c
  5984  00415E  6E0E               	movwf	(??___fleq+1)^0,c
  5985  004160  0E80               	movlw	128
  5986  004162  140B               	andwf	(___fleq@ff2+2)^0,w,c
  5987  004164  6E0F               	movwf	(??___fleq+2)^0,c
  5988  004166  0E7F               	movlw	127
  5989  004168  140C               	andwf	(___fleq@ff2+3)^0,w,c
  5990  00416A  6E10               	movwf	(??___fleq+3)^0,c
  5991  00416C  500D               	movf	??___fleq^0,w,c
  5992  00416E  100E               	iorwf	(??___fleq+1)^0,w,c
  5993  004170  100F               	iorwf	(??___fleq+2)^0,w,c
  5994  004172  1010               	iorwf	(??___fleq+3)^0,w,c
  5995  004174  A4D8               	btfss	status,2,c
  5996  004176  EFBF  F020         	goto	u7161
  5997  00417A  EFC1  F020         	goto	u7160
  5998  00417E                     u7161:
  5999  00417E  EFC9  F020         	goto	l7029
  6000  004182                     u7160:
  6001  004182  0E00               	movlw	0
  6002  004184  6E09               	movwf	___fleq@ff2^0,c
  6003  004186  0E00               	movlw	0
  6004  004188  6E0A               	movwf	(___fleq@ff2+1)^0,c
  6005  00418A  0E00               	movlw	0
  6006  00418C  6E0B               	movwf	(___fleq@ff2+2)^0,c
  6007  00418E  0E00               	movlw	0
  6008  004190  6E0C               	movwf	(___fleq@ff2+3)^0,c
  6009  004192                     l7029:
  6010  004192  5009               	movf	___fleq@ff2^0,w,c
  6011  004194  1805               	xorwf	___fleq@ff1^0,w,c
  6012  004196  E10F               	bnz	u7170
  6013  004198  500A               	movf	(___fleq@ff2+1)^0,w,c
  6014  00419A  1806               	xorwf	(___fleq@ff1+1)^0,w,c
  6015  00419C  E10C               	bnz	u7170
  6016  00419E  500B               	movf	(___fleq@ff2+2)^0,w,c
  6017  0041A0  1807               	xorwf	(___fleq@ff1+2)^0,w,c
  6018  0041A2  E109               	bnz	u7170
  6019  0041A4  500C               	movf	(___fleq@ff2+3)^0,w,c
  6020  0041A6  1808               	xorwf	(___fleq@ff1+3)^0,w,c
  6021  0041A8  B4D8               	btfsc	status,2,c
  6022  0041AA  EFD9  F020         	goto	u7171
  6023  0041AE  EFDB  F020         	goto	u7170
  6024  0041B2                     u7171:
  6025  0041B2  EFDE  F020         	goto	l7033
  6026  0041B6                     u7170:
  6027  0041B6  90D8               	bcf	status,0,c
  6028  0041B8  EFDF  F020         	goto	l1007
  6029  0041BC                     l7033:
  6030  0041BC  80D8               	bsf	status,0,c
  6031  0041BE                     l1007:
  6032  0041BE  0012               	return		;funcret
  6033  0041C0                     __end_of___fleq:
  6034                           	callstack 0
  6035                           
  6036 ;; *************** function ___fldiv *****************
  6037 ;; Defined at:
  6038 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcdiv.c"
  6039 ;; Parameters:    Size  Location     Type
  6040 ;;  b               4    4[COMRAM] long 
  6041 ;;  a               4    8[COMRAM] long 
  6042 ;; Auto vars:     Size  Location     Type
  6043 ;;  grs             4   23[COMRAM] unsigned long 
  6044 ;;  rem             4   16[COMRAM] unsigned long 
  6045 ;;  new_exp         2   21[COMRAM] short 
  6046 ;;  aexp            1   28[COMRAM] unsigned char 
  6047 ;;  bexp            1   27[COMRAM] unsigned char 
  6048 ;;  sign            1   20[COMRAM] unsigned char 
  6049 ;; Return value:  Size  Location     Type
  6050 ;;                  4    4[COMRAM] unsigned char 
  6051 ;; Registers used:
  6052 ;;		wreg, status,2, status,0
  6053 ;; Tracked objects:
  6054 ;;		On entry : 0/0
  6055 ;;		On exit  : 0/0
  6056 ;;		Unchanged: 0/0
  6057 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6058 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6059 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6060 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6061 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6062 ;;Total ram usage:       25 bytes
  6063 ;; Hardware stack levels used: 1
  6064 ;; Hardware stack levels required when called: 4
  6065 ;; This function calls:
  6066 ;;		Nothing
  6067 ;; This function is called by:
  6068 ;;		_efgtoa
  6069 ;; This function uses a non-reentrant model
  6070 ;;
  6071                           
  6072                           	psect	text22
  6073  002B68                     __ptext22:
  6074                           	callstack 0
  6075  002B68                     ___fldiv:
  6076                           	callstack 22
  6077  002B68  5008               	movf	(___fldiv@b+3)^0,w,c
  6078  002B6A  0B80               	andlw	128
  6079  002B6C  6E15               	movwf	___fldiv@sign^0,c
  6080  002B6E  5008               	movf	(___fldiv@b+3)^0,w,c
  6081  002B70  2408               	addwf	(___fldiv@b+3)^0,w,c
  6082  002B72  6E1C               	movwf	___fldiv@bexp^0,c
  6083  002B74  AE07               	btfss	(___fldiv@b+2)^0,7,c
  6084  002B76  EFBF  F015         	goto	u6611
  6085  002B7A  EFC1  F015         	goto	u6610
  6086  002B7E                     u6611:
  6087  002B7E  EFC2  F015         	goto	l6673
  6088  002B82                     u6610:
  6089  002B82  801C               	bsf	___fldiv@bexp^0,0,c
  6090  002B84                     l6673:
  6091  002B84  501C               	movf	___fldiv@bexp^0,w,c
  6092  002B86  B4D8               	btfsc	status,2,c
  6093  002B88  EFC8  F015         	goto	u6621
  6094  002B8C  EFCA  F015         	goto	u6620
  6095  002B90                     u6621:
  6096  002B90  EFDF  F015         	goto	l6683
  6097  002B94                     u6620:
  6098  002B94  281C               	incf	___fldiv@bexp^0,w,c
  6099  002B96  A4D8               	btfss	status,2,c
  6100  002B98  EFD0  F015         	goto	u6631
  6101  002B9C  EFD2  F015         	goto	u6630
  6102  002BA0                     u6631:
  6103  002BA0  EFDA  F015         	goto	l6679
  6104  002BA4                     u6630:
  6105  002BA4  0E00               	movlw	0
  6106  002BA6  6E05               	movwf	___fldiv@b^0,c
  6107  002BA8  0E00               	movlw	0
  6108  002BAA  6E06               	movwf	(___fldiv@b+1)^0,c
  6109  002BAC  0E00               	movlw	0
  6110  002BAE  6E07               	movwf	(___fldiv@b+2)^0,c
  6111  002BB0  0E00               	movlw	0
  6112  002BB2  6E08               	movwf	(___fldiv@b+3)^0,c
  6113  002BB4                     l6679:
  6114  002BB4  8E07               	bsf	(___fldiv@b+2)^0,7,c
  6115  002BB6  0E00               	movlw	0
  6116  002BB8  6E08               	movwf	(___fldiv@b+3)^0,c
  6117  002BBA  EFE7  F015         	goto	l6685
  6118  002BBE                     l6683:
  6119  002BBE  0E00               	movlw	0
  6120  002BC0  6E05               	movwf	___fldiv@b^0,c
  6121  002BC2  0E00               	movlw	0
  6122  002BC4  6E06               	movwf	(___fldiv@b+1)^0,c
  6123  002BC6  0E00               	movlw	0
  6124  002BC8  6E07               	movwf	(___fldiv@b+2)^0,c
  6125  002BCA  0E00               	movlw	0
  6126  002BCC  6E08               	movwf	(___fldiv@b+3)^0,c
  6127  002BCE                     l6685:
  6128  002BCE  500C               	movf	(___fldiv@a+3)^0,w,c
  6129  002BD0  0B80               	andlw	128
  6130  002BD2  1A15               	xorwf	___fldiv@sign^0,f,c
  6131  002BD4  500C               	movf	(___fldiv@a+3)^0,w,c
  6132  002BD6  240C               	addwf	(___fldiv@a+3)^0,w,c
  6133  002BD8  6E1D               	movwf	___fldiv@aexp^0,c
  6134  002BDA  AE0B               	btfss	(___fldiv@a+2)^0,7,c
  6135  002BDC  EFF2  F015         	goto	u6641
  6136  002BE0  EFF4  F015         	goto	u6640
  6137  002BE4                     u6641:
  6138  002BE4  EFF5  F015         	goto	l6693
  6139  002BE8                     u6640:
  6140  002BE8  801D               	bsf	___fldiv@aexp^0,0,c
  6141  002BEA                     l6693:
  6142  002BEA  501D               	movf	___fldiv@aexp^0,w,c
  6143  002BEC  B4D8               	btfsc	status,2,c
  6144  002BEE  EFFB  F015         	goto	u6651
  6145  002BF2  EFFD  F015         	goto	u6650
  6146  002BF6                     u6651:
  6147  002BF6  EF12  F016         	goto	l6703
  6148  002BFA                     u6650:
  6149  002BFA  281D               	incf	___fldiv@aexp^0,w,c
  6150  002BFC  A4D8               	btfss	status,2,c
  6151  002BFE  EF03  F016         	goto	u6661
  6152  002C02  EF05  F016         	goto	u6660
  6153  002C06                     u6661:
  6154  002C06  EF0D  F016         	goto	l6699
  6155  002C0A                     u6660:
  6156  002C0A  0E00               	movlw	0
  6157  002C0C  6E09               	movwf	___fldiv@a^0,c
  6158  002C0E  0E00               	movlw	0
  6159  002C10  6E0A               	movwf	(___fldiv@a+1)^0,c
  6160  002C12  0E00               	movlw	0
  6161  002C14  6E0B               	movwf	(___fldiv@a+2)^0,c
  6162  002C16  0E00               	movlw	0
  6163  002C18  6E0C               	movwf	(___fldiv@a+3)^0,c
  6164  002C1A                     l6699:
  6165  002C1A  8E0B               	bsf	(___fldiv@a+2)^0,7,c
  6166  002C1C  0E00               	movlw	0
  6167  002C1E  6E0C               	movwf	(___fldiv@a+3)^0,c
  6168  002C20  EF1A  F016         	goto	l6705
  6169  002C24                     l6703:
  6170  002C24  0E00               	movlw	0
  6171  002C26  6E09               	movwf	___fldiv@a^0,c
  6172  002C28  0E00               	movlw	0
  6173  002C2A  6E0A               	movwf	(___fldiv@a+1)^0,c
  6174  002C2C  0E00               	movlw	0
  6175  002C2E  6E0B               	movwf	(___fldiv@a+2)^0,c
  6176  002C30  0E00               	movlw	0
  6177  002C32  6E0C               	movwf	(___fldiv@a+3)^0,c
  6178  002C34                     l6705:
  6179  002C34  5009               	movf	___fldiv@a^0,w,c
  6180  002C36  100A               	iorwf	(___fldiv@a+1)^0,w,c
  6181  002C38  100B               	iorwf	(___fldiv@a+2)^0,w,c
  6182  002C3A  100C               	iorwf	(___fldiv@a+3)^0,w,c
  6183  002C3C  A4D8               	btfss	status,2,c
  6184  002C3E  EF23  F016         	goto	u6671
  6185  002C42  EF25  F016         	goto	u6670
  6186  002C46                     u6671:
  6187  002C46  EF3D  F016         	goto	l6717
  6188  002C4A                     u6670:
  6189  002C4A  0E00               	movlw	0
  6190  002C4C  6E05               	movwf	___fldiv@b^0,c
  6191  002C4E  0E00               	movlw	0
  6192  002C50  6E06               	movwf	(___fldiv@b+1)^0,c
  6193  002C52  0E00               	movlw	0
  6194  002C54  6E07               	movwf	(___fldiv@b+2)^0,c
  6195  002C56  0E00               	movlw	0
  6196  002C58  6E08               	movwf	(___fldiv@b+3)^0,c
  6197  002C5A  0E80               	movlw	128
  6198  002C5C  1207               	iorwf	(___fldiv@b+2)^0,f,c
  6199  002C5E  0E7F               	movlw	127
  6200  002C60  1208               	iorwf	(___fldiv@b+3)^0,f,c
  6201  002C62                     l6711:
  6202  002C62  5015               	movf	___fldiv@sign^0,w,c
  6203  002C64  1208               	iorwf	(___fldiv@b+3)^0,f,c
  6204  002C66  C005  F005         	movff	___fldiv@b,?___fldiv
  6205  002C6A  C006  F006         	movff	___fldiv@b+1,?___fldiv+1
  6206  002C6E  C007  F007         	movff	___fldiv@b+2,?___fldiv+2
  6207  002C72  C008  F008         	movff	___fldiv@b+3,?___fldiv+3
  6208  002C76  EF80  F017         	goto	l1330
  6209  002C7A                     l6717:
  6210  002C7A  501C               	movf	___fldiv@bexp^0,w,c
  6211  002C7C  A4D8               	btfss	status,2,c
  6212  002C7E  EF43  F016         	goto	u6681
  6213  002C82  EF45  F016         	goto	u6680
  6214  002C86                     u6681:
  6215  002C86  EF4F  F016         	goto	l6725
  6216  002C8A                     u6680:
  6217  002C8A  0E00               	movlw	0
  6218  002C8C  6E05               	movwf	?___fldiv^0,c
  6219  002C8E  0E00               	movlw	0
  6220  002C90  6E06               	movwf	(?___fldiv+1)^0,c
  6221  002C92  0E00               	movlw	0
  6222  002C94  6E07               	movwf	(?___fldiv+2)^0,c
  6223  002C96  0E00               	movlw	0
  6224  002C98  6E08               	movwf	(?___fldiv+3)^0,c
  6225  002C9A  EF80  F017         	goto	l1330
  6226  002C9E                     l6725:
  6227  002C9E  501D               	movf	___fldiv@aexp^0,w,c
  6228  002CA0  C01C  F00D         	movff	___fldiv@bexp,??___fldiv
  6229  002CA4  6A0E               	clrf	(??___fldiv+1)^0,c
  6230  002CA6  5E0D               	subwf	??___fldiv^0,f,c
  6231  002CA8  0E00               	movlw	0
  6232  002CAA  5A0E               	subwfb	(??___fldiv+1)^0,f,c
  6233  002CAC  0E7F               	movlw	127
  6234  002CAE  240D               	addwf	??___fldiv^0,w,c
  6235  002CB0  6E16               	movwf	___fldiv@new_exp^0,c
  6236  002CB2  0E00               	movlw	0
  6237  002CB4  200E               	addwfc	(??___fldiv+1)^0,w,c
  6238  002CB6  6E17               	movwf	(___fldiv@new_exp+1)^0,c
  6239  002CB8  C005  F011         	movff	___fldiv@b,___fldiv@rem
  6240  002CBC  C006  F012         	movff	___fldiv@b+1,___fldiv@rem+1
  6241  002CC0  C007  F013         	movff	___fldiv@b+2,___fldiv@rem+2
  6242  002CC4  C008  F014         	movff	___fldiv@b+3,___fldiv@rem+3
  6243  002CC8  0E00               	movlw	0
  6244  002CCA  6E05               	movwf	___fldiv@b^0,c
  6245  002CCC  0E00               	movlw	0
  6246  002CCE  6E06               	movwf	(___fldiv@b+1)^0,c
  6247  002CD0  0E00               	movlw	0
  6248  002CD2  6E07               	movwf	(___fldiv@b+2)^0,c
  6249  002CD4  0E00               	movlw	0
  6250  002CD6  6E08               	movwf	(___fldiv@b+3)^0,c
  6251  002CD8  0E00               	movlw	0
  6252  002CDA  6E18               	movwf	___fldiv@grs^0,c
  6253  002CDC  0E00               	movlw	0
  6254  002CDE  6E19               	movwf	(___fldiv@grs+1)^0,c
  6255  002CE0  0E00               	movlw	0
  6256  002CE2  6E1A               	movwf	(___fldiv@grs+2)^0,c
  6257  002CE4  0E00               	movlw	0
  6258  002CE6  6E1B               	movwf	(___fldiv@grs+3)^0,c
  6259  002CE8  0E00               	movlw	0
  6260  002CEA  6E1D               	movwf	___fldiv@aexp^0,c
  6261  002CEC  EFB0  F016         	goto	l1332
  6262  002CF0                     l6735:
  6263  002CF0  501D               	movf	___fldiv@aexp^0,w,c
  6264  002CF2  B4D8               	btfsc	status,2,c
  6265  002CF4  EF7E  F016         	goto	u6691
  6266  002CF8  EF80  F016         	goto	u6690
  6267  002CFC                     u6691:
  6268  002CFC  EF97  F016         	goto	l6743
  6269  002D00                     u6690:
  6270  002D00  90D8               	bcf	status,0,c
  6271  002D02  3611               	rlcf	___fldiv@rem^0,f,c
  6272  002D04  3612               	rlcf	(___fldiv@rem+1)^0,f,c
  6273  002D06  3613               	rlcf	(___fldiv@rem+2)^0,f,c
  6274  002D08  3614               	rlcf	(___fldiv@rem+3)^0,f,c
  6275  002D0A  90D8               	bcf	status,0,c
  6276  002D0C  3605               	rlcf	___fldiv@b^0,f,c
  6277  002D0E  3606               	rlcf	(___fldiv@b+1)^0,f,c
  6278  002D10  3607               	rlcf	(___fldiv@b+2)^0,f,c
  6279  002D12  3608               	rlcf	(___fldiv@b+3)^0,f,c
  6280  002D14  AE1B               	btfss	(___fldiv@grs+3)^0,7,c
  6281  002D16  EF8F  F016         	goto	u6701
  6282  002D1A  EF91  F016         	goto	u6700
  6283  002D1E                     u6701:
  6284  002D1E  EF92  F016         	goto	l1335
  6285  002D22                     u6700:
  6286  002D22  8005               	bsf	___fldiv@b^0,0,c
  6287  002D24                     l1335:
  6288  002D24  90D8               	bcf	status,0,c
  6289  002D26  3618               	rlcf	___fldiv@grs^0,f,c
  6290  002D28  3619               	rlcf	(___fldiv@grs+1)^0,f,c
  6291  002D2A  361A               	rlcf	(___fldiv@grs+2)^0,f,c
  6292  002D2C  361B               	rlcf	(___fldiv@grs+3)^0,f,c
  6293  002D2E                     l6743:
  6294  002D2E  5009               	movf	___fldiv@a^0,w,c
  6295  002D30  5C11               	subwf	___fldiv@rem^0,w,c
  6296  002D32  500A               	movf	(___fldiv@a+1)^0,w,c
  6297  002D34  5812               	subwfb	(___fldiv@rem+1)^0,w,c
  6298  002D36  500B               	movf	(___fldiv@a+2)^0,w,c
  6299  002D38  5813               	subwfb	(___fldiv@rem+2)^0,w,c
  6300  002D3A  500C               	movf	(___fldiv@a+3)^0,w,c
  6301  002D3C  5814               	subwfb	(___fldiv@rem+3)^0,w,c
  6302  002D3E  A0D8               	btfss	status,0,c
  6303  002D40  EFA4  F016         	goto	u6711
  6304  002D44  EFA6  F016         	goto	u6710
  6305  002D48                     u6711:
  6306  002D48  EFAF  F016         	goto	l6749
  6307  002D4C                     u6710:
  6308  002D4C  8C1B               	bsf	(___fldiv@grs+3)^0,6,c
  6309  002D4E  5009               	movf	___fldiv@a^0,w,c
  6310  002D50  5E11               	subwf	___fldiv@rem^0,f,c
  6311  002D52  500A               	movf	(___fldiv@a+1)^0,w,c
  6312  002D54  5A12               	subwfb	(___fldiv@rem+1)^0,f,c
  6313  002D56  500B               	movf	(___fldiv@a+2)^0,w,c
  6314  002D58  5A13               	subwfb	(___fldiv@rem+2)^0,f,c
  6315  002D5A  500C               	movf	(___fldiv@a+3)^0,w,c
  6316  002D5C  5A14               	subwfb	(___fldiv@rem+3)^0,f,c
  6317  002D5E                     l6749:
  6318  002D5E  2A1D               	incf	___fldiv@aexp^0,f,c
  6319  002D60                     l1332:
  6320  002D60  0E19               	movlw	25
  6321  002D62  641D               	cpfsgt	___fldiv@aexp^0,c
  6322  002D64  EFB6  F016         	goto	u6721
  6323  002D68  EFB8  F016         	goto	u6720
  6324  002D6C                     u6721:
  6325  002D6C  EF78  F016         	goto	l6735
  6326  002D70                     u6720:
  6327  002D70  5011               	movf	___fldiv@rem^0,w,c
  6328  002D72  1012               	iorwf	(___fldiv@rem+1)^0,w,c
  6329  002D74  1013               	iorwf	(___fldiv@rem+2)^0,w,c
  6330  002D76  1014               	iorwf	(___fldiv@rem+3)^0,w,c
  6331  002D78  B4D8               	btfsc	status,2,c
  6332  002D7A  EFC1  F016         	goto	u6731
  6333  002D7E  EFC3  F016         	goto	u6730
  6334  002D82                     u6731:
  6335  002D82  EFDB  F016         	goto	l6761
  6336  002D86                     u6730:
  6337  002D86  8018               	bsf	___fldiv@grs^0,0,c
  6338  002D88  EFDB  F016         	goto	l6761
  6339  002D8C                     l6755:
  6340  002D8C  90D8               	bcf	status,0,c
  6341  002D8E  3605               	rlcf	___fldiv@b^0,f,c
  6342  002D90  3606               	rlcf	(___fldiv@b+1)^0,f,c
  6343  002D92  3607               	rlcf	(___fldiv@b+2)^0,f,c
  6344  002D94  3608               	rlcf	(___fldiv@b+3)^0,f,c
  6345  002D96  AE1B               	btfss	(___fldiv@grs+3)^0,7,c
  6346  002D98  EFD0  F016         	goto	u6741
  6347  002D9C  EFD2  F016         	goto	u6740
  6348  002DA0                     u6741:
  6349  002DA0  EFD3  F016         	goto	l1341
  6350  002DA4                     u6740:
  6351  002DA4  8005               	bsf	___fldiv@b^0,0,c
  6352  002DA6                     l1341:
  6353  002DA6  90D8               	bcf	status,0,c
  6354  002DA8  3618               	rlcf	___fldiv@grs^0,f,c
  6355  002DAA  3619               	rlcf	(___fldiv@grs+1)^0,f,c
  6356  002DAC  361A               	rlcf	(___fldiv@grs+2)^0,f,c
  6357  002DAE  361B               	rlcf	(___fldiv@grs+3)^0,f,c
  6358  002DB0  0616               	decf	___fldiv@new_exp^0,f,c
  6359  002DB2  A0D8               	btfss	status,0,c
  6360  002DB4  0617               	decf	(___fldiv@new_exp+1)^0,f,c
  6361  002DB6                     l6761:
  6362  002DB6  AE07               	btfss	(___fldiv@b+2)^0,7,c
  6363  002DB8  EFE0  F016         	goto	u6751
  6364  002DBC  EFE2  F016         	goto	u6750
  6365  002DC0                     u6751:
  6366  002DC0  EFC6  F016         	goto	l6755
  6367  002DC4                     u6750:
  6368  002DC4  0E00               	movlw	0
  6369  002DC6  6E1D               	movwf	___fldiv@aexp^0,c
  6370  002DC8  AE1B               	btfss	(___fldiv@grs+3)^0,7,c
  6371  002DCA  EFE9  F016         	goto	u6761
  6372  002DCE  EFEB  F016         	goto	u6760
  6373  002DD2                     u6761:
  6374  002DD2  EF0F  F017         	goto	l1343
  6375  002DD6                     u6760:
  6376  002DD6  0EFF               	movlw	255
  6377  002DD8  1418               	andwf	___fldiv@grs^0,w,c
  6378  002DDA  6E0D               	movwf	??___fldiv^0,c
  6379  002DDC  0EFF               	movlw	255
  6380  002DDE  1419               	andwf	(___fldiv@grs+1)^0,w,c
  6381  002DE0  6E0E               	movwf	(??___fldiv+1)^0,c
  6382  002DE2  0EFF               	movlw	255
  6383  002DE4  141A               	andwf	(___fldiv@grs+2)^0,w,c
  6384  002DE6  6E0F               	movwf	(??___fldiv+2)^0,c
  6385  002DE8  0E7F               	movlw	127
  6386  002DEA  141B               	andwf	(___fldiv@grs+3)^0,w,c
  6387  002DEC  6E10               	movwf	(??___fldiv+3)^0,c
  6388  002DEE  500D               	movf	??___fldiv^0,w,c
  6389  002DF0  100E               	iorwf	(??___fldiv+1)^0,w,c
  6390  002DF2  100F               	iorwf	(??___fldiv+2)^0,w,c
  6391  002DF4  1010               	iorwf	(??___fldiv+3)^0,w,c
  6392  002DF6  B4D8               	btfsc	status,2,c
  6393  002DF8  EF00  F017         	goto	u6771
  6394  002DFC  EF02  F017         	goto	u6770
  6395  002E00                     u6771:
  6396  002E00  EF06  F017         	goto	l1344
  6397  002E04                     u6770:
  6398  002E04                     l6769:
  6399  002E04  0E01               	movlw	1
  6400  002E06  6E1D               	movwf	___fldiv@aexp^0,c
  6401  002E08  EF0F  F017         	goto	l1343
  6402  002E0C                     l1344:
  6403  002E0C  A005               	btfss	___fldiv@b^0,0,c
  6404  002E0E  EF0B  F017         	goto	u6781
  6405  002E12  EF0D  F017         	goto	u6780
  6406  002E16                     u6781:
  6407  002E16  EF0F  F017         	goto	l1343
  6408  002E1A                     u6780:
  6409  002E1A  EF02  F017         	goto	l6769
  6410  002E1E                     l1343:
  6411  002E1E  501D               	movf	___fldiv@aexp^0,w,c
  6412  002E20  B4D8               	btfsc	status,2,c
  6413  002E22  EF15  F017         	goto	u6791
  6414  002E26  EF17  F017         	goto	u6790
  6415  002E2A                     u6791:
  6416  002E2A  EF3B  F017         	goto	l6781
  6417  002E2E                     u6790:
  6418  002E2E  0E01               	movlw	1
  6419  002E30  2605               	addwf	___fldiv@b^0,f,c
  6420  002E32  0E00               	movlw	0
  6421  002E34  2206               	addwfc	(___fldiv@b+1)^0,f,c
  6422  002E36  2207               	addwfc	(___fldiv@b+2)^0,f,c
  6423  002E38  2208               	addwfc	(___fldiv@b+3)^0,f,c
  6424  002E3A  A008               	btfss	(___fldiv@b+3)^0,0,c
  6425  002E3C  EF22  F017         	goto	u6801
  6426  002E40  EF24  F017         	goto	u6800
  6427  002E44                     u6801:
  6428  002E44  EF3B  F017         	goto	l6781
  6429  002E48                     u6800:
  6430  002E48  C005  F00D         	movff	___fldiv@b,??___fldiv
  6431  002E4C  C006  F00E         	movff	___fldiv@b+1,??___fldiv+1
  6432  002E50  C007  F00F         	movff	___fldiv@b+2,??___fldiv+2
  6433  002E54  C008  F010         	movff	___fldiv@b+3,??___fldiv+3
  6434  002E58  3410               	rlcf	(??___fldiv+3)^0,w,c
  6435  002E5A  3210               	rrcf	(??___fldiv+3)^0,f,c
  6436  002E5C  320F               	rrcf	(??___fldiv+2)^0,f,c
  6437  002E5E  320E               	rrcf	(??___fldiv+1)^0,f,c
  6438  002E60  320D               	rrcf	??___fldiv^0,f,c
  6439  002E62  C00D  F005         	movff	??___fldiv,___fldiv@b
  6440  002E66  C00E  F006         	movff	??___fldiv+1,___fldiv@b+1
  6441  002E6A  C00F  F007         	movff	??___fldiv+2,___fldiv@b+2
  6442  002E6E  C010  F008         	movff	??___fldiv+3,___fldiv@b+3
  6443  002E72  4A16               	infsnz	___fldiv@new_exp^0,f,c
  6444  002E74  2A17               	incf	(___fldiv@new_exp+1)^0,f,c
  6445  002E76                     l6781:
  6446  002E76  BE17               	btfsc	(___fldiv@new_exp+1)^0,7,c
  6447  002E78  EF46  F017         	goto	u6811
  6448  002E7C  5017               	movf	(___fldiv@new_exp+1)^0,w,c
  6449  002E7E  E108               	bnz	u6810
  6450  002E80  2816               	incf	___fldiv@new_exp^0,w,c
  6451  002E82  A0D8               	btfss	status,0,c
  6452  002E84  EF46  F017         	goto	u6811
  6453  002E88  EF48  F017         	goto	u6810
  6454  002E8C                     u6811:
  6455  002E8C  EF53  F017         	goto	l6785
  6456  002E90                     u6810:
  6457  002E90  0E00               	movlw	0
  6458  002E92  6E17               	movwf	(___fldiv@new_exp+1)^0,c
  6459  002E94  6816               	setf	___fldiv@new_exp^0,c
  6460  002E96  0E00               	movlw	0
  6461  002E98  6E05               	movwf	___fldiv@b^0,c
  6462  002E9A  0E00               	movlw	0
  6463  002E9C  6E06               	movwf	(___fldiv@b+1)^0,c
  6464  002E9E  0E00               	movlw	0
  6465  002EA0  6E07               	movwf	(___fldiv@b+2)^0,c
  6466  002EA2  0E00               	movlw	0
  6467  002EA4  6E08               	movwf	(___fldiv@b+3)^0,c
  6468  002EA6                     l6785:
  6469  002EA6  BE17               	btfsc	(___fldiv@new_exp+1)^0,7,c
  6470  002EA8  EF60  F017         	goto	u6820
  6471  002EAC  5017               	movf	(___fldiv@new_exp+1)^0,w,c
  6472  002EAE  E106               	bnz	u6821
  6473  002EB0  0416               	decf	___fldiv@new_exp^0,w,c
  6474  002EB2  B0D8               	btfsc	status,0,c
  6475  002EB4  EF5E  F017         	goto	u6821
  6476  002EB8  EF60  F017         	goto	u6820
  6477  002EBC                     u6821:
  6478  002EBC  EF6E  F017         	goto	l6789
  6479  002EC0                     u6820:
  6480  002EC0  0E00               	movlw	0
  6481  002EC2  6E17               	movwf	(___fldiv@new_exp+1)^0,c
  6482  002EC4  0E00               	movlw	0
  6483  002EC6  6E16               	movwf	___fldiv@new_exp^0,c
  6484  002EC8  0E00               	movlw	0
  6485  002ECA  6E05               	movwf	___fldiv@b^0,c
  6486  002ECC  0E00               	movlw	0
  6487  002ECE  6E06               	movwf	(___fldiv@b+1)^0,c
  6488  002ED0  0E00               	movlw	0
  6489  002ED2  6E07               	movwf	(___fldiv@b+2)^0,c
  6490  002ED4  0E00               	movlw	0
  6491  002ED6  6E08               	movwf	(___fldiv@b+3)^0,c
  6492  002ED8  0E00               	movlw	0
  6493  002EDA  6E15               	movwf	___fldiv@sign^0,c
  6494  002EDC                     l6789:
  6495  002EDC  C016  F01C         	movff	___fldiv@new_exp,___fldiv@bexp
  6496  002EE0  A01C               	btfss	___fldiv@bexp^0,0,c
  6497  002EE2  EF75  F017         	goto	u6831
  6498  002EE6  EF77  F017         	goto	u6830
  6499  002EEA                     u6831:
  6500  002EEA  EF7A  F017         	goto	l6795
  6501  002EEE                     u6830:
  6502  002EEE  8E07               	bsf	(___fldiv@b+2)^0,7,c
  6503  002EF0  EF7B  F017         	goto	l6797
  6504  002EF4                     l6795:
  6505  002EF4  9E07               	bcf	(___fldiv@b+2)^0,7,c
  6506  002EF6                     l6797:
  6507  002EF6  90D8               	bcf	status,0,c
  6508  002EF8  301C               	rrcf	___fldiv@bexp^0,w,c
  6509  002EFA  6E08               	movwf	(___fldiv@b+3)^0,c
  6510  002EFC  EF31  F016         	goto	l6711
  6511  002F00                     l1330:
  6512  002F00  0012               	return		;funcret
  6513  002F02                     __end_of___fldiv:
  6514                           	callstack 0
  6515                           
  6516 ;; *************** function ___awmod *****************
  6517 ;; Defined at:
  6518 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\awmod.c"
  6519 ;; Parameters:    Size  Location     Type
  6520 ;;  dividend        2    4[COMRAM] int 
  6521 ;;  divisor         2    6[COMRAM] int 
  6522 ;; Auto vars:     Size  Location     Type
  6523 ;;  sign            1    9[COMRAM] unsigned char 
  6524 ;;  counter         1    8[COMRAM] unsigned char 
  6525 ;; Return value:  Size  Location     Type
  6526 ;;                  2    4[COMRAM] int 
  6527 ;; Registers used:
  6528 ;;		wreg, status,2, status,0
  6529 ;; Tracked objects:
  6530 ;;		On entry : 0/0
  6531 ;;		On exit  : 0/0
  6532 ;;		Unchanged: 0/0
  6533 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6534 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6535 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6536 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6537 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6538 ;;Total ram usage:        6 bytes
  6539 ;; Hardware stack levels used: 1
  6540 ;; Hardware stack levels required when called: 4
  6541 ;; This function calls:
  6542 ;;		Nothing
  6543 ;; This function is called by:
  6544 ;;		_efgtoa
  6545 ;; This function uses a non-reentrant model
  6546 ;;
  6547                           
  6548                           	psect	text23
  6549  004066                     __ptext23:
  6550                           	callstack 0
  6551  004066                     ___awmod:
  6552                           	callstack 22
  6553  004066  0E00               	movlw	0
  6554  004068  6E0A               	movwf	___awmod@sign^0,c
  6555  00406A  BE06               	btfsc	(___awmod@dividend+1)^0,7,c
  6556  00406C  EF3C  F020         	goto	u7090
  6557  004070  EF3A  F020         	goto	u7091
  6558  004074                     u7091:
  6559  004074  EF42  F020         	goto	l6993
  6560  004078                     u7090:
  6561  004078  6C05               	negf	___awmod@dividend^0,c
  6562  00407A  1E06               	comf	(___awmod@dividend+1)^0,f,c
  6563  00407C  B0D8               	btfsc	status,0,c
  6564  00407E  2A06               	incf	(___awmod@dividend+1)^0,f,c
  6565  004080  0E01               	movlw	1
  6566  004082  6E0A               	movwf	___awmod@sign^0,c
  6567  004084                     l6993:
  6568  004084  BE08               	btfsc	(___awmod@divisor+1)^0,7,c
  6569  004086  EF49  F020         	goto	u7100
  6570  00408A  EF47  F020         	goto	u7101
  6571  00408E                     u7101:
  6572  00408E  EF4D  F020         	goto	l6997
  6573  004092                     u7100:
  6574  004092  6C07               	negf	___awmod@divisor^0,c
  6575  004094  1E08               	comf	(___awmod@divisor+1)^0,f,c
  6576  004096  B0D8               	btfsc	status,0,c
  6577  004098  2A08               	incf	(___awmod@divisor+1)^0,f,c
  6578  00409A                     l6997:
  6579  00409A  5007               	movf	___awmod@divisor^0,w,c
  6580  00409C  1008               	iorwf	(___awmod@divisor+1)^0,w,c
  6581  00409E  B4D8               	btfsc	status,2,c
  6582  0040A0  EF54  F020         	goto	u7111
  6583  0040A4  EF56  F020         	goto	u7110
  6584  0040A8                     u7111:
  6585  0040A8  EF7A  F020         	goto	l7013
  6586  0040AC                     u7110:
  6587  0040AC  0E01               	movlw	1
  6588  0040AE  6E09               	movwf	___awmod@counter^0,c
  6589  0040B0  EF5E  F020         	goto	l7003
  6590  0040B4                     l7001:
  6591  0040B4  90D8               	bcf	status,0,c
  6592  0040B6  3607               	rlcf	___awmod@divisor^0,f,c
  6593  0040B8  3608               	rlcf	(___awmod@divisor+1)^0,f,c
  6594  0040BA  2A09               	incf	___awmod@counter^0,f,c
  6595  0040BC                     l7003:
  6596  0040BC  AE08               	btfss	(___awmod@divisor+1)^0,7,c
  6597  0040BE  EF63  F020         	goto	u7121
  6598  0040C2  EF65  F020         	goto	u7120
  6599  0040C6                     u7121:
  6600  0040C6  EF5A  F020         	goto	l7001
  6601  0040CA                     u7120:
  6602  0040CA                     l7005:
  6603  0040CA  5007               	movf	___awmod@divisor^0,w,c
  6604  0040CC  5C05               	subwf	___awmod@dividend^0,w,c
  6605  0040CE  5008               	movf	(___awmod@divisor+1)^0,w,c
  6606  0040D0  5806               	subwfb	(___awmod@dividend+1)^0,w,c
  6607  0040D2  A0D8               	btfss	status,0,c
  6608  0040D4  EF6E  F020         	goto	u7131
  6609  0040D8  EF70  F020         	goto	u7130
  6610  0040DC                     u7131:
  6611  0040DC  EF74  F020         	goto	l7009
  6612  0040E0                     u7130:
  6613  0040E0  5007               	movf	___awmod@divisor^0,w,c
  6614  0040E2  5E05               	subwf	___awmod@dividend^0,f,c
  6615  0040E4  5008               	movf	(___awmod@divisor+1)^0,w,c
  6616  0040E6  5A06               	subwfb	(___awmod@dividend+1)^0,f,c
  6617  0040E8                     l7009:
  6618  0040E8  90D8               	bcf	status,0,c
  6619  0040EA  3208               	rrcf	(___awmod@divisor+1)^0,f,c
  6620  0040EC  3207               	rrcf	___awmod@divisor^0,f,c
  6621  0040EE  2E09               	decfsz	___awmod@counter^0,f,c
  6622  0040F0  EF65  F020         	goto	l7005
  6623  0040F4                     l7013:
  6624  0040F4  500A               	movf	___awmod@sign^0,w,c
  6625  0040F6  B4D8               	btfsc	status,2,c
  6626  0040F8  EF80  F020         	goto	u7141
  6627  0040FC  EF82  F020         	goto	u7140
  6628  004100                     u7141:
  6629  004100  EF86  F020         	goto	l7017
  6630  004104                     u7140:
  6631  004104  6C05               	negf	___awmod@dividend^0,c
  6632  004106  1E06               	comf	(___awmod@dividend+1)^0,f,c
  6633  004108  B0D8               	btfsc	status,0,c
  6634  00410A  2A06               	incf	(___awmod@dividend+1)^0,f,c
  6635  00410C                     l7017:
  6636  00410C  C005  F005         	movff	___awmod@dividend,?___awmod
  6637  004110  C006  F006         	movff	___awmod@dividend+1,?___awmod+1
  6638  004114  0012               	return		;funcret
  6639  004116                     __end_of___awmod:
  6640                           	callstack 0
  6641                           
  6642 ;; *************** function ___awdiv *****************
  6643 ;; Defined at:
  6644 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\awdiv.c"
  6645 ;; Parameters:    Size  Location     Type
  6646 ;;  dividend        2    4[COMRAM] int 
  6647 ;;  divisor         2    6[COMRAM] int 
  6648 ;; Auto vars:     Size  Location     Type
  6649 ;;  quotient        2   10[COMRAM] int 
  6650 ;;  sign            1    9[COMRAM] unsigned char 
  6651 ;;  counter         1    8[COMRAM] unsigned char 
  6652 ;; Return value:  Size  Location     Type
  6653 ;;                  2    4[COMRAM] int 
  6654 ;; Registers used:
  6655 ;;		wreg, status,2, status,0
  6656 ;; Tracked objects:
  6657 ;;		On entry : 0/0
  6658 ;;		On exit  : 0/0
  6659 ;;		Unchanged: 0/0
  6660 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6661 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6662 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6663 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6664 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6665 ;;Total ram usage:        8 bytes
  6666 ;; Hardware stack levels used: 1
  6667 ;; Hardware stack levels required when called: 4
  6668 ;; This function calls:
  6669 ;;		Nothing
  6670 ;; This function is called by:
  6671 ;;		_efgtoa
  6672 ;; This function uses a non-reentrant model
  6673 ;;
  6674                           
  6675                           	psect	text24
  6676  003BE8                     __ptext24:
  6677                           	callstack 0
  6678  003BE8                     ___awdiv:
  6679                           	callstack 22
  6680  003BE8  0E00               	movlw	0
  6681  003BEA  6E0A               	movwf	___awdiv@sign^0,c
  6682  003BEC  BE08               	btfsc	(___awdiv@divisor+1)^0,7,c
  6683  003BEE  EFFD  F01D         	goto	u7030
  6684  003BF2  EFFB  F01D         	goto	u7031
  6685  003BF6                     u7031:
  6686  003BF6  EF03  F01E         	goto	l6949
  6687  003BFA                     u7030:
  6688  003BFA  6C07               	negf	___awdiv@divisor^0,c
  6689  003BFC  1E08               	comf	(___awdiv@divisor+1)^0,f,c
  6690  003BFE  B0D8               	btfsc	status,0,c
  6691  003C00  2A08               	incf	(___awdiv@divisor+1)^0,f,c
  6692  003C02  0E01               	movlw	1
  6693  003C04  6E0A               	movwf	___awdiv@sign^0,c
  6694  003C06                     l6949:
  6695  003C06  BE06               	btfsc	(___awdiv@dividend+1)^0,7,c
  6696  003C08  EF0A  F01E         	goto	u7040
  6697  003C0C  EF08  F01E         	goto	u7041
  6698  003C10                     u7041:
  6699  003C10  EF10  F01E         	goto	l6955
  6700  003C14                     u7040:
  6701  003C14  6C05               	negf	___awdiv@dividend^0,c
  6702  003C16  1E06               	comf	(___awdiv@dividend+1)^0,f,c
  6703  003C18  B0D8               	btfsc	status,0,c
  6704  003C1A  2A06               	incf	(___awdiv@dividend+1)^0,f,c
  6705  003C1C  0E01               	movlw	1
  6706  003C1E  1A0A               	xorwf	___awdiv@sign^0,f,c
  6707  003C20                     l6955:
  6708  003C20  0E00               	movlw	0
  6709  003C22  6E0C               	movwf	(___awdiv@quotient+1)^0,c
  6710  003C24  0E00               	movlw	0
  6711  003C26  6E0B               	movwf	___awdiv@quotient^0,c
  6712  003C28  5007               	movf	___awdiv@divisor^0,w,c
  6713  003C2A  1008               	iorwf	(___awdiv@divisor+1)^0,w,c
  6714  003C2C  B4D8               	btfsc	status,2,c
  6715  003C2E  EF1B  F01E         	goto	u7051
  6716  003C32  EF1D  F01E         	goto	u7050
  6717  003C36                     u7051:
  6718  003C36  EF45  F01E         	goto	l6977
  6719  003C3A                     u7050:
  6720  003C3A  0E01               	movlw	1
  6721  003C3C  6E09               	movwf	___awdiv@counter^0,c
  6722  003C3E  EF25  F01E         	goto	l6963
  6723  003C42                     l6961:
  6724  003C42  90D8               	bcf	status,0,c
  6725  003C44  3607               	rlcf	___awdiv@divisor^0,f,c
  6726  003C46  3608               	rlcf	(___awdiv@divisor+1)^0,f,c
  6727  003C48  2A09               	incf	___awdiv@counter^0,f,c
  6728  003C4A                     l6963:
  6729  003C4A  AE08               	btfss	(___awdiv@divisor+1)^0,7,c
  6730  003C4C  EF2A  F01E         	goto	u7061
  6731  003C50  EF2C  F01E         	goto	u7060
  6732  003C54                     u7061:
  6733  003C54  EF21  F01E         	goto	l6961
  6734  003C58                     u7060:
  6735  003C58                     l6965:
  6736  003C58  90D8               	bcf	status,0,c
  6737  003C5A  360B               	rlcf	___awdiv@quotient^0,f,c
  6738  003C5C  360C               	rlcf	(___awdiv@quotient+1)^0,f,c
  6739  003C5E  5007               	movf	___awdiv@divisor^0,w,c
  6740  003C60  5C05               	subwf	___awdiv@dividend^0,w,c
  6741  003C62  5008               	movf	(___awdiv@divisor+1)^0,w,c
  6742  003C64  5806               	subwfb	(___awdiv@dividend+1)^0,w,c
  6743  003C66  A0D8               	btfss	status,0,c
  6744  003C68  EF38  F01E         	goto	u7071
  6745  003C6C  EF3A  F01E         	goto	u7070
  6746  003C70                     u7071:
  6747  003C70  EF3F  F01E         	goto	l6973
  6748  003C74                     u7070:
  6749  003C74  5007               	movf	___awdiv@divisor^0,w,c
  6750  003C76  5E05               	subwf	___awdiv@dividend^0,f,c
  6751  003C78  5008               	movf	(___awdiv@divisor+1)^0,w,c
  6752  003C7A  5A06               	subwfb	(___awdiv@dividend+1)^0,f,c
  6753  003C7C  800B               	bsf	___awdiv@quotient^0,0,c
  6754  003C7E                     l6973:
  6755  003C7E  90D8               	bcf	status,0,c
  6756  003C80  3208               	rrcf	(___awdiv@divisor+1)^0,f,c
  6757  003C82  3207               	rrcf	___awdiv@divisor^0,f,c
  6758  003C84  2E09               	decfsz	___awdiv@counter^0,f,c
  6759  003C86  EF2C  F01E         	goto	l6965
  6760  003C8A                     l6977:
  6761  003C8A  500A               	movf	___awdiv@sign^0,w,c
  6762  003C8C  B4D8               	btfsc	status,2,c
  6763  003C8E  EF4B  F01E         	goto	u7081
  6764  003C92  EF4D  F01E         	goto	u7080
  6765  003C96                     u7081:
  6766  003C96  EF51  F01E         	goto	l6981
  6767  003C9A                     u7080:
  6768  003C9A  6C0B               	negf	___awdiv@quotient^0,c
  6769  003C9C  1E0C               	comf	(___awdiv@quotient+1)^0,f,c
  6770  003C9E  B0D8               	btfsc	status,0,c
  6771  003CA0  2A0C               	incf	(___awdiv@quotient+1)^0,f,c
  6772  003CA2                     l6981:
  6773  003CA2  C00B  F005         	movff	___awdiv@quotient,?___awdiv
  6774  003CA6  C00C  F006         	movff	___awdiv@quotient+1,?___awdiv+1
  6775  003CAA  0012               	return		;funcret
  6776  003CAC                     __end_of___awdiv:
  6777                           	callstack 0
  6778                           
  6779 ;; *************** function _atoi *****************
  6780 ;; Defined at:
  6781 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\atoi.c"
  6782 ;; Parameters:    Size  Location     Type
  6783 ;;  s               2   11[COMRAM] PTR const unsigned char 
  6784 ;;		 -> STR_4(16), STR_3(15), STR_2(15), STR_1(15), 
  6785 ;; Auto vars:     Size  Location     Type
  6786 ;;  n               2   24[COMRAM] int 
  6787 ;;  neg             2   17[COMRAM] int 
  6788 ;; Return value:  Size  Location     Type
  6789 ;;                  2   11[COMRAM] int 
  6790 ;; Registers used:
  6791 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6792 ;; Tracked objects:
  6793 ;;		On entry : 0/0
  6794 ;;		On exit  : 0/0
  6795 ;;		Unchanged: 0/0
  6796 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6797 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6798 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6799 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6800 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6801 ;;Total ram usage:       15 bytes
  6802 ;; Hardware stack levels used: 1
  6803 ;; Hardware stack levels required when called: 5
  6804 ;; This function calls:
  6805 ;;		___wmul
  6806 ;;		_isdigit
  6807 ;;		_isspace
  6808 ;; This function is called by:
  6809 ;;		_vfpfcnvrt
  6810 ;; This function uses a non-reentrant model
  6811 ;;
  6812                           
  6813                           	psect	text25
  6814  0032C8                     __ptext25:
  6815                           	callstack 0
  6816  0032C8                     _atoi:
  6817                           	callstack 22
  6818  0032C8  0E00               	movlw	0
  6819  0032CA  6E1A               	movwf	(atoi@n+1)^0,c
  6820  0032CC  0E00               	movlw	0
  6821  0032CE  6E19               	movwf	atoi@n^0,c
  6822  0032D0  0E00               	movlw	0
  6823  0032D2  6E13               	movwf	(atoi@neg+1)^0,c
  6824  0032D4  0E00               	movlw	0
  6825  0032D6  6E12               	movwf	atoi@neg^0,c
  6826  0032D8  EF70  F019         	goto	l7525
  6827  0032DC                     l7523:
  6828  0032DC  4A0C               	infsnz	atoi@s^0,f,c
  6829  0032DE  2A0D               	incf	(atoi@s+1)^0,f,c
  6830  0032E0                     l7525:
  6831  0032E0  0E01               	movlw	1
  6832  0032E2  6E18               	movwf	_atoi$2188^0,c
  6833  0032E4  C00C  FFF6         	movff	atoi@s,tblptrl
  6834  0032E8  C00D  FFF7         	movff	atoi@s+1,tblptrh
  6835  0032EC                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6836  0032EC  6AF8               	clrf	tblptru,c
  6837  0032EE                     	endif
  6838  0032EE                     	if	0	;tblptru may be non-zero
  6839  0032EE                     	endif
  6840  0032EE  0008               	tblrd		*
  6841  0032F0  50F5               	movf	tablat,w,c
  6842  0032F2  0A20               	xorlw	32
  6843  0032F4  B4D8               	btfsc	status,2,c
  6844  0032F6  EF7F  F019         	goto	u8151
  6845  0032FA  EF81  F019         	goto	u8150
  6846  0032FE                     u8151:
  6847  0032FE  EF9F  F019         	goto	l7533
  6848  003302                     u8150:
  6849  003302  0EF7               	movlw	247
  6850  003304  6E0E               	movwf	??_atoi^0,c
  6851  003306  0EFF               	movlw	255
  6852  003308  6E0F               	movwf	(??_atoi+1)^0,c
  6853  00330A  C00C  FFF6         	movff	atoi@s,tblptrl
  6854  00330E  C00D  FFF7         	movff	atoi@s+1,tblptrh
  6855  003312                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6856  003312  6AF8               	clrf	tblptru,c
  6857  003314                     	endif
  6858  003314                     	if	0	;tblptru may be non-zero
  6859  003314                     	endif
  6860  003314  0008               	tblrd		*
  6861  003316  50F5               	movf	tablat,w,c
  6862  003318  6E10               	movwf	(??_atoi+2)^0,c
  6863  00331A  6A11               	clrf	(??_atoi+3)^0,c
  6864  00331C  500E               	movf	??_atoi^0,w,c
  6865  00331E  2610               	addwf	(??_atoi+2)^0,f,c
  6866  003320  500F               	movf	(??_atoi+1)^0,w,c
  6867  003322  2211               	addwfc	(??_atoi+3)^0,f,c
  6868  003324  5011               	movf	(??_atoi+3)^0,w,c
  6869  003326  E109               	bnz	u8160
  6870  003328  0E05               	movlw	5
  6871  00332A  5C10               	subwf	(??_atoi+2)^0,w,c
  6872  00332C  A0D8               	btfss	status,0,c
  6873  00332E  EF9B  F019         	goto	u8161
  6874  003332  EF9D  F019         	goto	u8160
  6875  003336                     u8161:
  6876  003336  EF9F  F019         	goto	l7533
  6877  00333A                     u8160:
  6878  00333A  0E00               	movlw	0
  6879  00333C  6E18               	movwf	_atoi$2188^0,c
  6880  00333E                     l7533:
  6881  00333E  C018  F014         	movff	_atoi$2188,_atoi$2187
  6882  003342  6A15               	clrf	(_atoi$2187+1)^0,c
  6883  003344  5014               	movf	_atoi$2187^0,w,c
  6884  003346  1015               	iorwf	(_atoi$2187+1)^0,w,c
  6885  003348  A4D8               	btfss	status,2,c
  6886  00334A  EFA9  F019         	goto	u8171
  6887  00334E  EFAB  F019         	goto	u8170
  6888  003352                     u8171:
  6889  003352  EF6E  F019         	goto	l7523
  6890  003356                     u8170:
  6891  003356  EFB5  F019         	goto	l7543
  6892  00335A                     l7539:
  6893  00335A  0E00               	movlw	0
  6894  00335C  6E13               	movwf	(atoi@neg+1)^0,c
  6895  00335E  0E01               	movlw	1
  6896  003360  6E12               	movwf	atoi@neg^0,c
  6897  003362                     l7541:
  6898  003362  4A0C               	infsnz	atoi@s^0,f,c
  6899  003364  2A0D               	incf	(atoi@s+1)^0,f,c
  6900  003366  EFEC  F019         	goto	l7549
  6901  00336A                     l7543:
  6902  00336A  C00C  FFF6         	movff	atoi@s,tblptrl
  6903  00336E  C00D  FFF7         	movff	atoi@s+1,tblptrh
  6904  003372                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6905  003372  6AF8               	clrf	tblptru,c
  6906  003374                     	endif
  6907  003374                     	if	0	;tblptru may be non-zero
  6908  003374                     	endif
  6909  003374  0008               	tblrd		*
  6910  003376  50F5               	movf	tablat,w,c
  6911  003378  6E0E               	movwf	??_atoi^0,c
  6912  00337A  6A0F               	clrf	(??_atoi+1)^0,c
  6913                           
  6914                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6915                           ; Switch size 1, requested type "simple"
  6916                           ; Number of cases is 1, Range of values is 0 to 0
  6917                           ; switch strategies available:
  6918                           ; Name         Instructions Cycles
  6919                           ; simple_byte            4     3 (average)
  6920                           ;	Chosen strategy is simple_byte
  6921  00337C  500F               	movf	(??_atoi+1)^0,w,c
  6922  00337E  0A00               	xorlw	0	; case 0
  6923  003380  B4D8               	btfsc	status,2,c
  6924  003382  EFC5  F019         	goto	l7959
  6925  003386  EFEC  F019         	goto	l7549
  6926  00338A                     l7959:
  6927                           
  6928                           ; Switch size 1, requested type "simple"
  6929                           ; Number of cases is 2, Range of values is 43 to 45
  6930                           ; switch strategies available:
  6931                           ; Name         Instructions Cycles
  6932                           ; simple_byte            7     4 (average)
  6933                           ;	Chosen strategy is simple_byte
  6934  00338A  500E               	movf	??_atoi^0,w,c
  6935  00338C  0A2B               	xorlw	43	; case 43
  6936  00338E  B4D8               	btfsc	status,2,c
  6937  003390  EFB1  F019         	goto	l7541
  6938  003394  0A06               	xorlw	6	; case 45
  6939  003396  B4D8               	btfsc	status,2,c
  6940  003398  EFAD  F019         	goto	l7539
  6941  00339C  EFEC  F019         	goto	l7549
  6942  0033A0                     l7545:
  6943  0033A0  C019  F005         	movff	atoi@n,___wmul@multiplier
  6944  0033A4  C01A  F006         	movff	atoi@n+1,___wmul@multiplier+1
  6945  0033A8  0E00               	movlw	0
  6946  0033AA  6E08               	movwf	(___wmul@multiplicand+1)^0,c
  6947  0033AC  0E0A               	movlw	10
  6948  0033AE  6E07               	movwf	___wmul@multiplicand^0,c
  6949  0033B0  ECF9  F025         	call	___wmul	;wreg free
  6950  0033B4  C00C  FFF6         	movff	atoi@s,tblptrl
  6951  0033B8  C00D  FFF7         	movff	atoi@s+1,tblptrh
  6952  0033BC                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6953  0033BC  6AF8               	clrf	tblptru,c
  6954  0033BE                     	endif
  6955  0033BE                     	if	0	;tblptru may be non-zero
  6956  0033BE                     	endif
  6957  0033BE  0008               	tblrd		*
  6958  0033C0  50F5               	movf	tablat,w,c
  6959  0033C2  5E05               	subwf	?___wmul^0,f,c
  6960  0033C4  0E00               	movlw	0
  6961  0033C6  5A06               	subwfb	(?___wmul+1)^0,f,c
  6962  0033C8  0E30               	movlw	48
  6963  0033CA  2405               	addwf	?___wmul^0,w,c
  6964  0033CC  6E19               	movwf	atoi@n^0,c
  6965  0033CE  0E00               	movlw	0
  6966  0033D0  2006               	addwfc	(?___wmul+1)^0,w,c
  6967  0033D2  6E1A               	movwf	(atoi@n+1)^0,c
  6968  0033D4  EFB1  F019         	goto	l7541
  6969  0033D8                     l7549:
  6970  0033D8  0ED0               	movlw	208
  6971  0033DA  6E0E               	movwf	??_atoi^0,c
  6972  0033DC  0EFF               	movlw	255
  6973  0033DE  6E0F               	movwf	(??_atoi+1)^0,c
  6974  0033E0  C00C  FFF6         	movff	atoi@s,tblptrl
  6975  0033E4  C00D  FFF7         	movff	atoi@s+1,tblptrh
  6976  0033E8                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6977  0033E8  6AF8               	clrf	tblptru,c
  6978  0033EA                     	endif
  6979  0033EA                     	if	0	;tblptru may be non-zero
  6980  0033EA                     	endif
  6981  0033EA  0008               	tblrd		*
  6982  0033EC  50F5               	movf	tablat,w,c
  6983  0033EE  6E10               	movwf	(??_atoi+2)^0,c
  6984  0033F0  6A11               	clrf	(??_atoi+3)^0,c
  6985  0033F2  500E               	movf	??_atoi^0,w,c
  6986  0033F4  2610               	addwf	(??_atoi+2)^0,f,c
  6987  0033F6  500F               	movf	(??_atoi+1)^0,w,c
  6988  0033F8  2211               	addwfc	(??_atoi+3)^0,f,c
  6989  0033FA  5011               	movf	(??_atoi+3)^0,w,c
  6990  0033FC  E10A               	bnz	u8180
  6991  0033FE  0E0A               	movlw	10
  6992  003400  5C10               	subwf	(??_atoi+2)^0,w,c
  6993  003402  A0D8               	btfss	status,0,c
  6994  003404  EF06  F01A         	goto	u8181
  6995  003408  EF09  F01A         	goto	u8180
  6996  00340C                     u8181:
  6997  00340C  0E01               	movlw	1
  6998  00340E  EF0A  F01A         	goto	u8190
  6999  003412                     u8180:
  7000  003412  0E00               	movlw	0
  7001  003414                     u8190:
  7002  003414  6E16               	movwf	_atoi$2189^0,c
  7003  003416  6A17               	clrf	(_atoi$2189+1)^0,c
  7004  003418  5016               	movf	_atoi$2189^0,w,c
  7005  00341A  1017               	iorwf	(_atoi$2189+1)^0,w,c
  7006  00341C  A4D8               	btfss	status,2,c
  7007  00341E  EF13  F01A         	goto	u8201
  7008  003422  EF15  F01A         	goto	u8200
  7009  003426                     u8201:
  7010  003426  EFD0  F019         	goto	l7545
  7011  00342A                     u8200:
  7012  00342A  5012               	movf	atoi@neg^0,w,c
  7013  00342C  1013               	iorwf	(atoi@neg+1)^0,w,c
  7014  00342E  A4D8               	btfss	status,2,c
  7015  003430  EF1C  F01A         	goto	u8211
  7016  003434  EF1E  F01A         	goto	u8210
  7017  003438                     u8211:
  7018  003438  EF2C  F01A         	goto	l1647
  7019  00343C                     u8210:
  7020  00343C  C019  F00E         	movff	atoi@n,??_atoi
  7021  003440  C01A  F00F         	movff	atoi@n+1,??_atoi+1
  7022  003444  1E0E               	comf	??_atoi^0,f,c
  7023  003446  1E0F               	comf	(??_atoi+1)^0,f,c
  7024  003448  4A0E               	infsnz	??_atoi^0,f,c
  7025  00344A  2A0F               	incf	(??_atoi+1)^0,f,c
  7026  00344C  C00E  F00C         	movff	??_atoi,?_atoi
  7027  003450  C00F  F00D         	movff	??_atoi+1,?_atoi+1
  7028  003454  EF30  F01A         	goto	l1650
  7029  003458                     l1647:
  7030  003458  C019  F00C         	movff	atoi@n,?_atoi
  7031  00345C  C01A  F00D         	movff	atoi@n+1,?_atoi+1
  7032  003460                     l1650:
  7033  003460  0012               	return		;funcret
  7034  003462                     __end_of_atoi:
  7035                           	callstack 0
  7036                           
  7037 ;; *************** function _isspace *****************
  7038 ;; Defined at:
  7039 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\isspace.c"
  7040 ;; Parameters:    Size  Location     Type
  7041 ;;  c               2    4[COMRAM] int 
  7042 ;; Auto vars:     Size  Location     Type
  7043 ;;		None
  7044 ;; Return value:  Size  Location     Type
  7045 ;;                  2    4[COMRAM] int 
  7046 ;; Registers used:
  7047 ;;		wreg, status,2, status,0
  7048 ;; Tracked objects:
  7049 ;;		On entry : 0/0
  7050 ;;		On exit  : 0/0
  7051 ;;		Unchanged: 0/0
  7052 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7053 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7054 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7055 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7056 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7057 ;;Total ram usage:        7 bytes
  7058 ;; Hardware stack levels used: 1
  7059 ;; Hardware stack levels required when called: 4
  7060 ;; This function calls:
  7061 ;;		Nothing
  7062 ;; This function is called by:
  7063 ;;		_atoi
  7064 ;; This function uses a non-reentrant model
  7065 ;;
  7066                           
  7067                           	psect	text26
  7068  0047A0                     __ptext26:
  7069                           	callstack 0
  7070  0047A0                     _isspace:
  7071                           	callstack 22
  7072  0047A0  0E01               	movlw	1
  7073  0047A2  6E0B               	movwf	_isspace$2218^0,c
  7074  0047A4  0E20               	movlw	32
  7075  0047A6  1805               	xorwf	isspace@c^0,w,c
  7076  0047A8  1006               	iorwf	(isspace@c+1)^0,w,c
  7077  0047AA  B4D8               	btfsc	status,2,c
  7078  0047AC  EFDA  F023         	goto	u7591
  7079  0047B0  EFDC  F023         	goto	u7590
  7080  0047B4                     u7591:
  7081  0047B4  EFF5  F023         	goto	l7209
  7082  0047B8                     u7590:
  7083  0047B8  0EF7               	movlw	247
  7084  0047BA  6E07               	movwf	??_isspace^0,c
  7085  0047BC  0EFF               	movlw	255
  7086  0047BE  6E08               	movwf	(??_isspace+1)^0,c
  7087  0047C0  C005  F009         	movff	isspace@c,??_isspace+2
  7088  0047C4  C006  F00A         	movff	isspace@c+1,??_isspace+3
  7089  0047C8  5007               	movf	??_isspace^0,w,c
  7090  0047CA  2609               	addwf	(??_isspace+2)^0,f,c
  7091  0047CC  5008               	movf	(??_isspace+1)^0,w,c
  7092  0047CE  220A               	addwfc	(??_isspace+3)^0,f,c
  7093  0047D0  500A               	movf	(??_isspace+3)^0,w,c
  7094  0047D2  E109               	bnz	u7600
  7095  0047D4  0E05               	movlw	5
  7096  0047D6  5C09               	subwf	(??_isspace+2)^0,w,c
  7097  0047D8  A0D8               	btfss	status,0,c
  7098  0047DA  EFF1  F023         	goto	u7601
  7099  0047DE  EFF3  F023         	goto	u7600
  7100  0047E2                     u7601:
  7101  0047E2  EFF5  F023         	goto	l7209
  7102  0047E6                     u7600:
  7103  0047E6  0E00               	movlw	0
  7104  0047E8  6E0B               	movwf	_isspace$2218^0,c
  7105  0047EA                     l7209:
  7106  0047EA  C00B  F005         	movff	_isspace$2218,?_isspace
  7107  0047EE  6A06               	clrf	(?_isspace+1)^0,c
  7108  0047F0  0012               	return		;funcret
  7109  0047F2                     __end_of_isspace:
  7110                           	callstack 0
  7111                           
  7112 ;; *************** function _isdigit *****************
  7113 ;; Defined at:
  7114 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\isdigit.c"
  7115 ;; Parameters:    Size  Location     Type
  7116 ;;  c               2    4[COMRAM] int 
  7117 ;; Auto vars:     Size  Location     Type
  7118 ;;		None
  7119 ;; Return value:  Size  Location     Type
  7120 ;;                  2    4[COMRAM] int 
  7121 ;; Registers used:
  7122 ;;		wreg, status,2, status,0
  7123 ;; Tracked objects:
  7124 ;;		On entry : 0/0
  7125 ;;		On exit  : 0/0
  7126 ;;		Unchanged: 0/0
  7127 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7128 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7129 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7130 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7131 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7132 ;;Total ram usage:        6 bytes
  7133 ;; Hardware stack levels used: 1
  7134 ;; Hardware stack levels required when called: 4
  7135 ;; This function calls:
  7136 ;;		Nothing
  7137 ;; This function is called by:
  7138 ;;		_vfpfcnvrt
  7139 ;;		_atoi
  7140 ;; This function uses a non-reentrant model
  7141 ;;
  7142                           
  7143                           	psect	text27
  7144  0049F8                     __ptext27:
  7145                           	callstack 0
  7146  0049F8                     _isdigit:
  7147                           	callstack 23
  7148  0049F8  0ED0               	movlw	208
  7149  0049FA  6E07               	movwf	??_isdigit^0,c
  7150  0049FC  0EFF               	movlw	255
  7151  0049FE  6E08               	movwf	(??_isdigit+1)^0,c
  7152  004A00  C005  F009         	movff	isdigit@c,??_isdigit+2
  7153  004A04  C006  F00A         	movff	isdigit@c+1,??_isdigit+3
  7154  004A08  5007               	movf	??_isdigit^0,w,c
  7155  004A0A  2609               	addwf	(??_isdigit+2)^0,f,c
  7156  004A0C  5008               	movf	(??_isdigit+1)^0,w,c
  7157  004A0E  220A               	addwfc	(??_isdigit+3)^0,f,c
  7158  004A10  500A               	movf	(??_isdigit+3)^0,w,c
  7159  004A12  E10A               	bnz	u7570
  7160  004A14  0E0A               	movlw	10
  7161  004A16  5C09               	subwf	(??_isdigit+2)^0,w,c
  7162  004A18  A0D8               	btfss	status,0,c
  7163  004A1A  EF11  F025         	goto	u7571
  7164  004A1E  EF14  F025         	goto	u7570
  7165  004A22                     u7571:
  7166  004A22  0E01               	movlw	1
  7167  004A24  EF15  F025         	goto	u7580
  7168  004A28                     u7570:
  7169  004A28  0E00               	movlw	0
  7170  004A2A                     u7580:
  7171  004A2A  6E05               	movwf	?_isdigit^0,c
  7172  004A2C  6A06               	clrf	(?_isdigit+1)^0,c
  7173  004A2E  0012               	return		;funcret
  7174  004A30                     __end_of_isdigit:
  7175                           	callstack 0
  7176                           
  7177 ;; *************** function ___wmul *****************
  7178 ;; Defined at:
  7179 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\Umul16.c"
  7180 ;; Parameters:    Size  Location     Type
  7181 ;;  multiplier      2    4[COMRAM] unsigned int 
  7182 ;;  multiplicand    2    6[COMRAM] unsigned int 
  7183 ;; Auto vars:     Size  Location     Type
  7184 ;;  product         2    8[COMRAM] unsigned int 
  7185 ;; Return value:  Size  Location     Type
  7186 ;;                  2    4[COMRAM] unsigned int 
  7187 ;; Registers used:
  7188 ;;		wreg, status,2, status,0, prodl, prodh
  7189 ;; Tracked objects:
  7190 ;;		On entry : 0/0
  7191 ;;		On exit  : 0/0
  7192 ;;		Unchanged: 0/0
  7193 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7194 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7195 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7196 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7197 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7198 ;;Total ram usage:        6 bytes
  7199 ;; Hardware stack levels used: 1
  7200 ;; Hardware stack levels required when called: 4
  7201 ;; This function calls:
  7202 ;;		Nothing
  7203 ;; This function is called by:
  7204 ;;		_atoi
  7205 ;; This function uses a non-reentrant model
  7206 ;;
  7207                           
  7208                           	psect	text28
  7209  004BF2                     __ptext28:
  7210                           	callstack 0
  7211  004BF2                     ___wmul:
  7212                           	callstack 22
  7213  004BF2  5005               	movf	___wmul@multiplier^0,w,c
  7214  004BF4  0207               	mulwf	___wmul@multiplicand^0,c
  7215  004BF6  CFF3 F009          	movff	prodl,___wmul@product
  7216  004BFA  CFF4 F00A          	movff	prodh,___wmul@product+1
  7217  004BFE  5005               	movf	___wmul@multiplier^0,w,c
  7218  004C00  0208               	mulwf	(___wmul@multiplicand+1)^0,c
  7219  004C02  50F3               	movf	243,w,c
  7220  004C04  260A               	addwf	(___wmul@product+1)^0,f,c
  7221  004C06  5006               	movf	(___wmul@multiplier+1)^0,w,c
  7222  004C08  0207               	mulwf	___wmul@multiplicand^0,c
  7223  004C0A  50F3               	movf	243,w,c
  7224  004C0C  260A               	addwf	(___wmul@product+1)^0,f,c
  7225  004C0E  C009  F005         	movff	___wmul@product,?___wmul
  7226  004C12  C00A  F006         	movff	___wmul@product+1,?___wmul+1
  7227  004C16  0012               	return		;funcret
  7228  004C18                     __end_of___wmul:
  7229                           	callstack 0
  7230                           
  7231 ;; *************** function _TLV493_Z_GetValue *****************
  7232 ;; Defined at:
  7233 ;;		line 65 in file "tlv493.c"
  7234 ;; Parameters:    Size  Location     Type
  7235 ;;		None
  7236 ;; Auto vars:     Size  Location     Type
  7237 ;;  ZDataAnz        4   49[COMRAM] float 
  7238 ;;  z_axis          2   53[COMRAM] short 
  7239 ;; Return value:  Size  Location     Type
  7240 ;;                  4   43[COMRAM] float 
  7241 ;; Registers used:
  7242 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7243 ;; Tracked objects:
  7244 ;;		On entry : 0/0
  7245 ;;		On exit  : 0/0
  7246 ;;		Unchanged: 0/0
  7247 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7248 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7249 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7250 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7251 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7252 ;;Total ram usage:       12 bytes
  7253 ;; Hardware stack levels used: 1
  7254 ;; Hardware stack levels required when called: 14
  7255 ;; This function calls:
  7256 ;;		_TLV493_Read
  7257 ;;		___flmul
  7258 ;;		___xxtofl
  7259 ;; This function is called by:
  7260 ;;		_main
  7261 ;; This function uses a non-reentrant model
  7262 ;;
  7263                           
  7264                           	psect	text29
  7265  003E32                     __ptext29:
  7266                           	callstack 0
  7267  003E32                     _TLV493_Z_GetValue:
  7268                           	callstack 16
  7269  003E32                     
  7270                           ;tlv493.c: 66:     float ZDataAnz;;tlv493.c: 67:     int16_t z_axis;;tlv493.c: 69:     T
      +                          LV493_Read();
  7271  003E32  EC3E  F026         	call	_TLV493_Read	;wreg free
  7272  003E36                     
  7273                           ;tlv493.c: 70:     z_axis = readBuffer[2];
  7274  003E36  C16A  F036         	movff	_readBuffer+2,TLV493_Z_GetValue@z_axis
  7275  003E3A  6A37               	clrf	(TLV493_Z_GetValue@z_axis+1)^0,c
  7276  003E3C                     
  7277                           ;tlv493.c: 71:     z_axis = z_axis << 4;
  7278  003E3C  C036  F030         	movff	TLV493_Z_GetValue@z_axis,??_TLV493_Z_GetValue
  7279  003E40  C037  F031         	movff	TLV493_Z_GetValue@z_axis+1,??_TLV493_Z_GetValue+1
  7280  003E44  3A30               	swapf	??_TLV493_Z_GetValue^0,f,c
  7281  003E46  3A31               	swapf	(??_TLV493_Z_GetValue+1)^0,f,c
  7282  003E48  0EF0               	movlw	240
  7283  003E4A  1631               	andwf	(??_TLV493_Z_GetValue+1)^0,f,c
  7284  003E4C  5030               	movf	??_TLV493_Z_GetValue^0,w,c
  7285  003E4E  0B0F               	andlw	15
  7286  003E50  1231               	iorwf	(??_TLV493_Z_GetValue+1)^0,f,c
  7287  003E52  0EF0               	movlw	240
  7288  003E54  1630               	andwf	??_TLV493_Z_GetValue^0,f,c
  7289  003E56  C030  F036         	movff	??_TLV493_Z_GetValue,TLV493_Z_GetValue@z_axis
  7290  003E5A  C031  F037         	movff	??_TLV493_Z_GetValue+1,TLV493_Z_GetValue@z_axis+1
  7291  003E5E                     
  7292                           ;tlv493.c: 72:     z_axis |= (readBuffer[5] & 0x0F);
  7293  003E5E  C16D  F030         	movff	_readBuffer+5,??_TLV493_Z_GetValue
  7294  003E62  0E0F               	movlw	15
  7295  003E64  1630               	andwf	??_TLV493_Z_GetValue^0,f,c
  7296  003E66  5030               	movf	??_TLV493_Z_GetValue^0,w,c
  7297  003E68  1236               	iorwf	TLV493_Z_GetValue@z_axis^0,f,c
  7298  003E6A                     
  7299                           ;tlv493.c: 73:     if(z_axis > 2048){
  7300  003E6A  BE37               	btfsc	(TLV493_Z_GetValue@z_axis+1)^0,7,c
  7301  003E6C  EF40  F01F         	goto	u8461
  7302  003E70  0436               	decf	TLV493_Z_GetValue@z_axis^0,w,c
  7303  003E72  0E08               	movlw	8
  7304  003E74  5837               	subwfb	(TLV493_Z_GetValue@z_axis+1)^0,w,c
  7305  003E76  A0D8               	btfss	status,0,c
  7306  003E78  EF40  F01F         	goto	u8461
  7307  003E7C  EF42  F01F         	goto	u8460
  7308  003E80                     u8461:
  7309  003E80  EF48  F01F         	goto	l7767
  7310  003E84                     u8460:
  7311  003E84                     
  7312                           ;tlv493.c: 74:         z_axis = z_axis - 4096;
  7313  003E84  0E00               	movlw	0
  7314  003E86  2436               	addwf	TLV493_Z_GetValue@z_axis^0,w,c
  7315  003E88  6E36               	movwf	TLV493_Z_GetValue@z_axis^0,c
  7316  003E8A  0EF0               	movlw	240
  7317  003E8C  2037               	addwfc	(TLV493_Z_GetValue@z_axis+1)^0,w,c
  7318  003E8E  6E37               	movwf	(TLV493_Z_GetValue@z_axis+1)^0,c
  7319  003E90                     l7767:
  7320                           
  7321                           ;tlv493.c: 76:     ZDataAnz = z_axis * 0.098;
  7322  003E90  C036  F005         	movff	TLV493_Z_GetValue@z_axis,___xxtofl@val
  7323  003E94  C037  F006         	movff	TLV493_Z_GetValue@z_axis+1,___xxtofl@val+1
  7324  003E98  0E00               	movlw	0
  7325  003E9A  BE06               	btfsc	(___xxtofl@val+1)^0,7,c
  7326  003E9C  0EFF               	movlw	-1
  7327  003E9E  6E07               	movwf	(___xxtofl@val+2)^0,c
  7328  003EA0  6E08               	movwf	(___xxtofl@val+3)^0,c
  7329  003EA2  0E01               	movlw	1
  7330  003EA4  EC8A  F018         	call	___xxtofl
  7331  003EA8  C005  F013         	movff	?___xxtofl,___flmul@b
  7332  003EAC  C006  F014         	movff	?___xxtofl+1,___flmul@b+1
  7333  003EB0  C007  F015         	movff	?___xxtofl+2,___flmul@b+2
  7334  003EB4  C008  F016         	movff	?___xxtofl+3,___flmul@b+3
  7335  003EB8  0E39               	movlw	57
  7336  003EBA  6E17               	movwf	___flmul@a^0,c
  7337  003EBC  0EB4               	movlw	180
  7338  003EBE  6E18               	movwf	(___flmul@a+1)^0,c
  7339  003EC0  0EC8               	movlw	200
  7340  003EC2  6E19               	movwf	(___flmul@a+2)^0,c
  7341  003EC4  0E3D               	movlw	61
  7342  003EC6  6E1A               	movwf	(___flmul@a+3)^0,c
  7343  003EC8  EC9F  F013         	call	___flmul	;wreg free
  7344  003ECC  C013  F032         	movff	?___flmul,TLV493_Z_GetValue@ZDataAnz
  7345  003ED0  C014  F033         	movff	?___flmul+1,TLV493_Z_GetValue@ZDataAnz+1
  7346  003ED4  C015  F034         	movff	?___flmul+2,TLV493_Z_GetValue@ZDataAnz+2
  7347  003ED8  C016  F035         	movff	?___flmul+3,TLV493_Z_GetValue@ZDataAnz+3
  7348  003EDC                     
  7349                           ;tlv493.c: 77:     return ZDataAnz;
  7350  003EDC  C032  F02C         	movff	TLV493_Z_GetValue@ZDataAnz,?_TLV493_Z_GetValue
  7351  003EE0  C033  F02D         	movff	TLV493_Z_GetValue@ZDataAnz+1,?_TLV493_Z_GetValue+1
  7352  003EE4  C034  F02E         	movff	TLV493_Z_GetValue@ZDataAnz+2,?_TLV493_Z_GetValue+2
  7353  003EE8  C035  F02F         	movff	TLV493_Z_GetValue@ZDataAnz+3,?_TLV493_Z_GetValue+3
  7354  003EEC  0012               	return		;funcret
  7355  003EEE                     __end_of_TLV493_Z_GetValue:
  7356                           	callstack 0
  7357                           
  7358 ;; *************** function _TLV493_Y_GetValue *****************
  7359 ;; Defined at:
  7360 ;;		line 50 in file "tlv493.c"
  7361 ;; Parameters:    Size  Location     Type
  7362 ;;		None
  7363 ;; Auto vars:     Size  Location     Type
  7364 ;;  YDataAnz        4   49[COMRAM] float 
  7365 ;;  y_axis          2   53[COMRAM] short 
  7366 ;; Return value:  Size  Location     Type
  7367 ;;                  4   43[COMRAM] float 
  7368 ;; Registers used:
  7369 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7370 ;; Tracked objects:
  7371 ;;		On entry : 0/0
  7372 ;;		On exit  : 0/0
  7373 ;;		Unchanged: 0/0
  7374 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7375 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7376 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7377 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7378 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7379 ;;Total ram usage:       12 bytes
  7380 ;; Hardware stack levels used: 1
  7381 ;; Hardware stack levels required when called: 14
  7382 ;; This function calls:
  7383 ;;		_TLV493_Read
  7384 ;;		___flmul
  7385 ;;		___xxtofl
  7386 ;; This function is called by:
  7387 ;;		_main
  7388 ;; This function uses a non-reentrant model
  7389 ;;
  7390                           
  7391                           	psect	text30
  7392  003EEE                     __ptext30:
  7393                           	callstack 0
  7394  003EEE                     _TLV493_Y_GetValue:
  7395                           	callstack 16
  7396  003EEE                     
  7397                           ;tlv493.c: 51:     float YDataAnz;;tlv493.c: 52:     int16_t y_axis;;tlv493.c: 54:     T
      +                          LV493_Read();
  7398  003EEE  EC3E  F026         	call	_TLV493_Read	;wreg free
  7399  003EF2                     
  7400                           ;tlv493.c: 55:     y_axis = readBuffer[1];
  7401  003EF2  C169  F036         	movff	_readBuffer+1,TLV493_Y_GetValue@y_axis
  7402  003EF6  6A37               	clrf	(TLV493_Y_GetValue@y_axis+1)^0,c
  7403  003EF8                     
  7404                           ;tlv493.c: 56:     y_axis = y_axis << 4;
  7405  003EF8  C036  F030         	movff	TLV493_Y_GetValue@y_axis,??_TLV493_Y_GetValue
  7406  003EFC  C037  F031         	movff	TLV493_Y_GetValue@y_axis+1,??_TLV493_Y_GetValue+1
  7407  003F00  3A30               	swapf	??_TLV493_Y_GetValue^0,f,c
  7408  003F02  3A31               	swapf	(??_TLV493_Y_GetValue+1)^0,f,c
  7409  003F04  0EF0               	movlw	240
  7410  003F06  1631               	andwf	(??_TLV493_Y_GetValue+1)^0,f,c
  7411  003F08  5030               	movf	??_TLV493_Y_GetValue^0,w,c
  7412  003F0A  0B0F               	andlw	15
  7413  003F0C  1231               	iorwf	(??_TLV493_Y_GetValue+1)^0,f,c
  7414  003F0E  0EF0               	movlw	240
  7415  003F10  1630               	andwf	??_TLV493_Y_GetValue^0,f,c
  7416  003F12  C030  F036         	movff	??_TLV493_Y_GetValue,TLV493_Y_GetValue@y_axis
  7417  003F16  C031  F037         	movff	??_TLV493_Y_GetValue+1,TLV493_Y_GetValue@y_axis+1
  7418  003F1A                     
  7419                           ;tlv493.c: 57:     y_axis |= (readBuffer[4] & 0x0F);
  7420  003F1A  C16C  F030         	movff	_readBuffer+4,??_TLV493_Y_GetValue
  7421  003F1E  0E0F               	movlw	15
  7422  003F20  1630               	andwf	??_TLV493_Y_GetValue^0,f,c
  7423  003F22  5030               	movf	??_TLV493_Y_GetValue^0,w,c
  7424  003F24  1236               	iorwf	TLV493_Y_GetValue@y_axis^0,f,c
  7425  003F26                     
  7426                           ;tlv493.c: 58:     if(y_axis > 2048){
  7427  003F26  BE37               	btfsc	(TLV493_Y_GetValue@y_axis+1)^0,7,c
  7428  003F28  EF9E  F01F         	goto	u8451
  7429  003F2C  0436               	decf	TLV493_Y_GetValue@y_axis^0,w,c
  7430  003F2E  0E08               	movlw	8
  7431  003F30  5837               	subwfb	(TLV493_Y_GetValue@y_axis+1)^0,w,c
  7432  003F32  A0D8               	btfss	status,0,c
  7433  003F34  EF9E  F01F         	goto	u8451
  7434  003F38  EFA0  F01F         	goto	u8450
  7435  003F3C                     u8451:
  7436  003F3C  EFA6  F01F         	goto	l7749
  7437  003F40                     u8450:
  7438  003F40                     
  7439                           ;tlv493.c: 59:         y_axis = y_axis - 4096;
  7440  003F40  0E00               	movlw	0
  7441  003F42  2436               	addwf	TLV493_Y_GetValue@y_axis^0,w,c
  7442  003F44  6E36               	movwf	TLV493_Y_GetValue@y_axis^0,c
  7443  003F46  0EF0               	movlw	240
  7444  003F48  2037               	addwfc	(TLV493_Y_GetValue@y_axis+1)^0,w,c
  7445  003F4A  6E37               	movwf	(TLV493_Y_GetValue@y_axis+1)^0,c
  7446  003F4C                     l7749:
  7447                           
  7448                           ;tlv493.c: 61:     YDataAnz = y_axis * 0.098;
  7449  003F4C  C036  F005         	movff	TLV493_Y_GetValue@y_axis,___xxtofl@val
  7450  003F50  C037  F006         	movff	TLV493_Y_GetValue@y_axis+1,___xxtofl@val+1
  7451  003F54  0E00               	movlw	0
  7452  003F56  BE06               	btfsc	(___xxtofl@val+1)^0,7,c
  7453  003F58  0EFF               	movlw	-1
  7454  003F5A  6E07               	movwf	(___xxtofl@val+2)^0,c
  7455  003F5C  6E08               	movwf	(___xxtofl@val+3)^0,c
  7456  003F5E  0E01               	movlw	1
  7457  003F60  EC8A  F018         	call	___xxtofl
  7458  003F64  C005  F013         	movff	?___xxtofl,___flmul@b
  7459  003F68  C006  F014         	movff	?___xxtofl+1,___flmul@b+1
  7460  003F6C  C007  F015         	movff	?___xxtofl+2,___flmul@b+2
  7461  003F70  C008  F016         	movff	?___xxtofl+3,___flmul@b+3
  7462  003F74  0E39               	movlw	57
  7463  003F76  6E17               	movwf	___flmul@a^0,c
  7464  003F78  0EB4               	movlw	180
  7465  003F7A  6E18               	movwf	(___flmul@a+1)^0,c
  7466  003F7C  0EC8               	movlw	200
  7467  003F7E  6E19               	movwf	(___flmul@a+2)^0,c
  7468  003F80  0E3D               	movlw	61
  7469  003F82  6E1A               	movwf	(___flmul@a+3)^0,c
  7470  003F84  EC9F  F013         	call	___flmul	;wreg free
  7471  003F88  C013  F032         	movff	?___flmul,TLV493_Y_GetValue@YDataAnz
  7472  003F8C  C014  F033         	movff	?___flmul+1,TLV493_Y_GetValue@YDataAnz+1
  7473  003F90  C015  F034         	movff	?___flmul+2,TLV493_Y_GetValue@YDataAnz+2
  7474  003F94  C016  F035         	movff	?___flmul+3,TLV493_Y_GetValue@YDataAnz+3
  7475  003F98                     
  7476                           ;tlv493.c: 62:     return YDataAnz;
  7477  003F98  C032  F02C         	movff	TLV493_Y_GetValue@YDataAnz,?_TLV493_Y_GetValue
  7478  003F9C  C033  F02D         	movff	TLV493_Y_GetValue@YDataAnz+1,?_TLV493_Y_GetValue+1
  7479  003FA0  C034  F02E         	movff	TLV493_Y_GetValue@YDataAnz+2,?_TLV493_Y_GetValue+2
  7480  003FA4  C035  F02F         	movff	TLV493_Y_GetValue@YDataAnz+3,?_TLV493_Y_GetValue+3
  7481  003FA8  0012               	return		;funcret
  7482  003FAA                     __end_of_TLV493_Y_GetValue:
  7483                           	callstack 0
  7484                           
  7485 ;; *************** function _TLV493_X_GetValue *****************
  7486 ;; Defined at:
  7487 ;;		line 35 in file "tlv493.c"
  7488 ;; Parameters:    Size  Location     Type
  7489 ;;		None
  7490 ;; Auto vars:     Size  Location     Type
  7491 ;;  XDataAnz        4   49[COMRAM] float 
  7492 ;;  x_axis          2   53[COMRAM] short 
  7493 ;; Return value:  Size  Location     Type
  7494 ;;                  4   43[COMRAM] float 
  7495 ;; Registers used:
  7496 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7497 ;; Tracked objects:
  7498 ;;		On entry : 0/0
  7499 ;;		On exit  : 0/0
  7500 ;;		Unchanged: 0/0
  7501 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7502 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7503 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7504 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7505 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7506 ;;Total ram usage:       12 bytes
  7507 ;; Hardware stack levels used: 1
  7508 ;; Hardware stack levels required when called: 14
  7509 ;; This function calls:
  7510 ;;		_TLV493_Read
  7511 ;;		___flmul
  7512 ;;		___xxtofl
  7513 ;; This function is called by:
  7514 ;;		_main
  7515 ;; This function uses a non-reentrant model
  7516 ;;
  7517                           
  7518                           	psect	text31
  7519  003D70                     __ptext31:
  7520                           	callstack 0
  7521  003D70                     _TLV493_X_GetValue:
  7522                           	callstack 16
  7523  003D70                     
  7524                           ;tlv493.c: 36:     float XDataAnz;;tlv493.c: 37:     int16_t x_axis;;tlv493.c: 39:     T
      +                          LV493_Read();
  7525  003D70  EC3E  F026         	call	_TLV493_Read	;wreg free
  7526  003D74                     
  7527                           ;tlv493.c: 40:     x_axis = readBuffer[0];
  7528  003D74  C168  F036         	movff	_readBuffer,TLV493_X_GetValue@x_axis
  7529  003D78  6A37               	clrf	(TLV493_X_GetValue@x_axis+1)^0,c
  7530  003D7A                     
  7531                           ;tlv493.c: 41:     x_axis = x_axis << 4;
  7532  003D7A  C036  F030         	movff	TLV493_X_GetValue@x_axis,??_TLV493_X_GetValue
  7533  003D7E  C037  F031         	movff	TLV493_X_GetValue@x_axis+1,??_TLV493_X_GetValue+1
  7534  003D82  3A30               	swapf	??_TLV493_X_GetValue^0,f,c
  7535  003D84  3A31               	swapf	(??_TLV493_X_GetValue+1)^0,f,c
  7536  003D86  0EF0               	movlw	240
  7537  003D88  1631               	andwf	(??_TLV493_X_GetValue+1)^0,f,c
  7538  003D8A  5030               	movf	??_TLV493_X_GetValue^0,w,c
  7539  003D8C  0B0F               	andlw	15
  7540  003D8E  1231               	iorwf	(??_TLV493_X_GetValue+1)^0,f,c
  7541  003D90  0EF0               	movlw	240
  7542  003D92  1630               	andwf	??_TLV493_X_GetValue^0,f,c
  7543  003D94  C030  F036         	movff	??_TLV493_X_GetValue,TLV493_X_GetValue@x_axis
  7544  003D98  C031  F037         	movff	??_TLV493_X_GetValue+1,TLV493_X_GetValue@x_axis+1
  7545  003D9C                     
  7546                           ;tlv493.c: 42:     x_axis |= ((readBuffer[4] >> 4 ) & 0x0F);
  7547  003D9C  C16C  F030         	movff	_readBuffer+4,??_TLV493_X_GetValue
  7548  003DA0  3A30               	swapf	??_TLV493_X_GetValue^0,f,c
  7549  003DA2  0E0F               	movlw	15
  7550  003DA4  1630               	andwf	??_TLV493_X_GetValue^0,f,c
  7551  003DA6  0E0F               	movlw	15
  7552  003DA8  1630               	andwf	??_TLV493_X_GetValue^0,f,c
  7553  003DAA  5030               	movf	??_TLV493_X_GetValue^0,w,c
  7554  003DAC  1236               	iorwf	TLV493_X_GetValue@x_axis^0,f,c
  7555  003DAE                     
  7556                           ;tlv493.c: 43:     if(x_axis > 2048){
  7557  003DAE  BE37               	btfsc	(TLV493_X_GetValue@x_axis+1)^0,7,c
  7558  003DB0  EFE2  F01E         	goto	u8441
  7559  003DB4  0436               	decf	TLV493_X_GetValue@x_axis^0,w,c
  7560  003DB6  0E08               	movlw	8
  7561  003DB8  5837               	subwfb	(TLV493_X_GetValue@x_axis+1)^0,w,c
  7562  003DBA  A0D8               	btfss	status,0,c
  7563  003DBC  EFE2  F01E         	goto	u8441
  7564  003DC0  EFE4  F01E         	goto	u8440
  7565  003DC4                     u8441:
  7566  003DC4  EFEA  F01E         	goto	l7731
  7567  003DC8                     u8440:
  7568  003DC8                     
  7569                           ;tlv493.c: 44:         x_axis = x_axis - 4096;
  7570  003DC8  0E00               	movlw	0
  7571  003DCA  2436               	addwf	TLV493_X_GetValue@x_axis^0,w,c
  7572  003DCC  6E36               	movwf	TLV493_X_GetValue@x_axis^0,c
  7573  003DCE  0EF0               	movlw	240
  7574  003DD0  2037               	addwfc	(TLV493_X_GetValue@x_axis+1)^0,w,c
  7575  003DD2  6E37               	movwf	(TLV493_X_GetValue@x_axis+1)^0,c
  7576  003DD4                     l7731:
  7577                           
  7578                           ;tlv493.c: 46:     XDataAnz = x_axis * 0.098;
  7579  003DD4  C036  F005         	movff	TLV493_X_GetValue@x_axis,___xxtofl@val
  7580  003DD8  C037  F006         	movff	TLV493_X_GetValue@x_axis+1,___xxtofl@val+1
  7581  003DDC  0E00               	movlw	0
  7582  003DDE  BE06               	btfsc	(___xxtofl@val+1)^0,7,c
  7583  003DE0  0EFF               	movlw	-1
  7584  003DE2  6E07               	movwf	(___xxtofl@val+2)^0,c
  7585  003DE4  6E08               	movwf	(___xxtofl@val+3)^0,c
  7586  003DE6  0E01               	movlw	1
  7587  003DE8  EC8A  F018         	call	___xxtofl
  7588  003DEC  C005  F013         	movff	?___xxtofl,___flmul@b
  7589  003DF0  C006  F014         	movff	?___xxtofl+1,___flmul@b+1
  7590  003DF4  C007  F015         	movff	?___xxtofl+2,___flmul@b+2
  7591  003DF8  C008  F016         	movff	?___xxtofl+3,___flmul@b+3
  7592  003DFC  0E39               	movlw	57
  7593  003DFE  6E17               	movwf	___flmul@a^0,c
  7594  003E00  0EB4               	movlw	180
  7595  003E02  6E18               	movwf	(___flmul@a+1)^0,c
  7596  003E04  0EC8               	movlw	200
  7597  003E06  6E19               	movwf	(___flmul@a+2)^0,c
  7598  003E08  0E3D               	movlw	61
  7599  003E0A  6E1A               	movwf	(___flmul@a+3)^0,c
  7600  003E0C  EC9F  F013         	call	___flmul	;wreg free
  7601  003E10  C013  F032         	movff	?___flmul,TLV493_X_GetValue@XDataAnz
  7602  003E14  C014  F033         	movff	?___flmul+1,TLV493_X_GetValue@XDataAnz+1
  7603  003E18  C015  F034         	movff	?___flmul+2,TLV493_X_GetValue@XDataAnz+2
  7604  003E1C  C016  F035         	movff	?___flmul+3,TLV493_X_GetValue@XDataAnz+3
  7605  003E20                     
  7606                           ;tlv493.c: 47:     return XDataAnz;
  7607  003E20  C032  F02C         	movff	TLV493_X_GetValue@XDataAnz,?_TLV493_X_GetValue
  7608  003E24  C033  F02D         	movff	TLV493_X_GetValue@XDataAnz+1,?_TLV493_X_GetValue+1
  7609  003E28  C034  F02E         	movff	TLV493_X_GetValue@XDataAnz+2,?_TLV493_X_GetValue+2
  7610  003E2C  C035  F02F         	movff	TLV493_X_GetValue@XDataAnz+3,?_TLV493_X_GetValue+3
  7611  003E30  0012               	return		;funcret
  7612  003E32                     __end_of_TLV493_X_GetValue:
  7613                           	callstack 0
  7614                           
  7615 ;; *************** function _TLV493_Temp_GetValue *****************
  7616 ;; Defined at:
  7617 ;;		line 80 in file "tlv493.c"
  7618 ;; Parameters:    Size  Location     Type
  7619 ;;		None
  7620 ;; Auto vars:     Size  Location     Type
  7621 ;;  TempDataAnz     4   65[COMRAM] float 
  7622 ;;  temp            2   69[COMRAM] short 
  7623 ;; Return value:  Size  Location     Type
  7624 ;;                  4   59[COMRAM] float 
  7625 ;; Registers used:
  7626 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7627 ;; Tracked objects:
  7628 ;;		On entry : 0/0
  7629 ;;		On exit  : 0/0
  7630 ;;		Unchanged: 0/0
  7631 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7632 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7633 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7634 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7635 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7636 ;;Total ram usage:       12 bytes
  7637 ;; Hardware stack levels used: 1
  7638 ;; Hardware stack levels required when called: 14
  7639 ;; This function calls:
  7640 ;;		_TLV493_Read
  7641 ;;		___fladd
  7642 ;;		___flmul
  7643 ;;		___xxtofl
  7644 ;; This function is called by:
  7645 ;;		_main
  7646 ;; This function uses a non-reentrant model
  7647 ;;
  7648                           
  7649                           	psect	text32
  7650  00387E                     __ptext32:
  7651                           	callstack 0
  7652  00387E                     _TLV493_Temp_GetValue:
  7653                           	callstack 16
  7654  00387E                     
  7655                           ;tlv493.c: 81:     float TempDataAnz;;tlv493.c: 82:     int16_t temp;;tlv493.c: 84:     
      +                          TLV493_Read();
  7656  00387E  EC3E  F026         	call	_TLV493_Read	;wreg free
  7657  003882                     
  7658                           ;tlv493.c: 85:     temp = readBuffer[3];
  7659  003882  C16B  F046         	movff	_readBuffer+3,TLV493_Temp_GetValue@temp
  7660  003886  6A47               	clrf	(TLV493_Temp_GetValue@temp+1)^0,c
  7661  003888                     
  7662                           ;tlv493.c: 86:     temp = temp << 4;
  7663  003888  C046  F040         	movff	TLV493_Temp_GetValue@temp,??_TLV493_Temp_GetValue
  7664  00388C  C047  F041         	movff	TLV493_Temp_GetValue@temp+1,??_TLV493_Temp_GetValue+1
  7665  003890  3A40               	swapf	??_TLV493_Temp_GetValue^0,f,c
  7666  003892  3A41               	swapf	(??_TLV493_Temp_GetValue+1)^0,f,c
  7667  003894  0EF0               	movlw	240
  7668  003896  1641               	andwf	(??_TLV493_Temp_GetValue+1)^0,f,c
  7669  003898  5040               	movf	??_TLV493_Temp_GetValue^0,w,c
  7670  00389A  0B0F               	andlw	15
  7671  00389C  1241               	iorwf	(??_TLV493_Temp_GetValue+1)^0,f,c
  7672  00389E  0EF0               	movlw	240
  7673  0038A0  1640               	andwf	??_TLV493_Temp_GetValue^0,f,c
  7674  0038A2  C040  F046         	movff	??_TLV493_Temp_GetValue,TLV493_Temp_GetValue@temp
  7675  0038A6  C041  F047         	movff	??_TLV493_Temp_GetValue+1,TLV493_Temp_GetValue@temp+1
  7676  0038AA                     
  7677                           ;tlv493.c: 87:     temp = temp & 0x0F00;
  7678  0038AA  0E00               	movlw	0
  7679  0038AC  1446               	andwf	TLV493_Temp_GetValue@temp^0,w,c
  7680  0038AE  6E46               	movwf	TLV493_Temp_GetValue@temp^0,c
  7681  0038B0  0E0F               	movlw	15
  7682  0038B2  1447               	andwf	(TLV493_Temp_GetValue@temp+1)^0,w,c
  7683  0038B4  6E47               	movwf	(TLV493_Temp_GetValue@temp+1)^0,c
  7684  0038B6                     
  7685                           ;tlv493.c: 88:     temp = temp | readBuffer[6];
  7686  0038B6  5046               	movf	TLV493_Temp_GetValue@temp^0,w,c
  7687  0038B8  0101               	movlb	1	; () banked
  7688  0038BA  116E               	iorwf	(_readBuffer+6)& (0+255),w,b
  7689  0038BC  6E46               	movwf	TLV493_Temp_GetValue@temp^0,c
  7690  0038BE  5047               	movf	(TLV493_Temp_GetValue@temp+1)^0,w,c
  7691  0038C0  6E47               	movwf	(TLV493_Temp_GetValue@temp+1)^0,c
  7692  0038C2                     
  7693                           ; BSR set to: 1
  7694                           ;tlv493.c: 89:     if(temp > 2048){
  7695  0038C2  BE47               	btfsc	(TLV493_Temp_GetValue@temp+1)^0,7,c
  7696  0038C4  EF6C  F01C         	goto	u8471
  7697  0038C8  0446               	decf	TLV493_Temp_GetValue@temp^0,w,c
  7698  0038CA  0E08               	movlw	8
  7699  0038CC  5847               	subwfb	(TLV493_Temp_GetValue@temp+1)^0,w,c
  7700  0038CE  A0D8               	btfss	status,0,c
  7701  0038D0  EF6C  F01C         	goto	u8471
  7702  0038D4  EF6E  F01C         	goto	u8470
  7703  0038D8                     u8471:
  7704  0038D8  EF74  F01C         	goto	l7787
  7705  0038DC                     u8470:
  7706  0038DC                     
  7707                           ; BSR set to: 1
  7708                           ;tlv493.c: 90:         temp = temp - 4096;
  7709  0038DC  0E00               	movlw	0
  7710  0038DE  2446               	addwf	TLV493_Temp_GetValue@temp^0,w,c
  7711  0038E0  6E46               	movwf	TLV493_Temp_GetValue@temp^0,c
  7712  0038E2  0EF0               	movlw	240
  7713  0038E4  2047               	addwfc	(TLV493_Temp_GetValue@temp+1)^0,w,c
  7714  0038E6  6E47               	movwf	(TLV493_Temp_GetValue@temp+1)^0,c
  7715  0038E8                     l7787:
  7716                           
  7717                           ; BSR set to: 1
  7718                           ;tlv493.c: 92:     TempDataAnz = (temp * 1.1) - 340;
  7719  0038E8  0ECD               	movlw	205
  7720  0038EA  6E17               	movwf	___flmul@a^0,c
  7721  0038EC  0ECC               	movlw	204
  7722  0038EE  6E18               	movwf	(___flmul@a+1)^0,c
  7723  0038F0  0E8C               	movlw	140
  7724  0038F2  6E19               	movwf	(___flmul@a+2)^0,c
  7725  0038F4  0E3F               	movlw	63
  7726  0038F6  6E1A               	movwf	(___flmul@a+3)^0,c
  7727  0038F8  C046  F005         	movff	TLV493_Temp_GetValue@temp,___xxtofl@val
  7728  0038FC  C047  F006         	movff	TLV493_Temp_GetValue@temp+1,___xxtofl@val+1
  7729  003900  0E00               	movlw	0
  7730  003902  BE06               	btfsc	(___xxtofl@val+1)^0,7,c
  7731  003904  0EFF               	movlw	-1
  7732  003906  6E07               	movwf	(___xxtofl@val+2)^0,c
  7733  003908  6E08               	movwf	(___xxtofl@val+3)^0,c
  7734  00390A  0E01               	movlw	1
  7735  00390C  EC8A  F018         	call	___xxtofl
  7736  003910  C005  F013         	movff	?___xxtofl,___flmul@b
  7737  003914  C006  F014         	movff	?___xxtofl+1,___flmul@b+1
  7738  003918  C007  F015         	movff	?___xxtofl+2,___flmul@b+2
  7739  00391C  C008  F016         	movff	?___xxtofl+3,___flmul@b+3
  7740  003920  EC9F  F013         	call	___flmul	;wreg free
  7741  003924  C013  F02C         	movff	?___flmul,___fladd@b
  7742  003928  C014  F02D         	movff	?___flmul+1,___fladd@b+1
  7743  00392C  C015  F02E         	movff	?___flmul+2,___fladd@b+2
  7744  003930  C016  F02F         	movff	?___flmul+3,___fladd@b+3
  7745  003934  0E00               	movlw	0
  7746  003936  6E30               	movwf	___fladd@a^0,c
  7747  003938  0E00               	movlw	0
  7748  00393A  6E31               	movwf	(___fladd@a+1)^0,c
  7749  00393C  0EAA               	movlw	170
  7750  00393E  6E32               	movwf	(___fladd@a+2)^0,c
  7751  003940  0EC3               	movlw	195
  7752  003942  6E33               	movwf	(___fladd@a+3)^0,c
  7753  003944  EC3F  F011         	call	___fladd	;wreg free
  7754  003948  C02C  F042         	movff	?___fladd,TLV493_Temp_GetValue@TempDataAnz
  7755  00394C  C02D  F043         	movff	?___fladd+1,TLV493_Temp_GetValue@TempDataAnz+1
  7756  003950  C02E  F044         	movff	?___fladd+2,TLV493_Temp_GetValue@TempDataAnz+2
  7757  003954  C02F  F045         	movff	?___fladd+3,TLV493_Temp_GetValue@TempDataAnz+3
  7758  003958                     
  7759                           ;tlv493.c: 93:     return TempDataAnz;
  7760  003958  C042  F03C         	movff	TLV493_Temp_GetValue@TempDataAnz,?_TLV493_Temp_GetValue
  7761  00395C  C043  F03D         	movff	TLV493_Temp_GetValue@TempDataAnz+1,?_TLV493_Temp_GetValue+1
  7762  003960  C044  F03E         	movff	TLV493_Temp_GetValue@TempDataAnz+2,?_TLV493_Temp_GetValue+2
  7763  003964  C045  F03F         	movff	TLV493_Temp_GetValue@TempDataAnz+3,?_TLV493_Temp_GetValue+3
  7764  003968  0012               	return		;funcret
  7765  00396A                     __end_of_TLV493_Temp_GetValue:
  7766                           	callstack 0
  7767                           
  7768 ;; *************** function ___xxtofl *****************
  7769 ;; Defined at:
  7770 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\xxtofl.c"
  7771 ;; Parameters:    Size  Location     Type
  7772 ;;  sign            1    wreg     unsigned char 
  7773 ;;  val             4    4[COMRAM] long 
  7774 ;; Auto vars:     Size  Location     Type
  7775 ;;  sign            1   12[COMRAM] unsigned char 
  7776 ;;  arg             4   14[COMRAM] unsigned long 
  7777 ;;  exp             1   13[COMRAM] unsigned char 
  7778 ;; Return value:  Size  Location     Type
  7779 ;;                  4    4[COMRAM] unsigned char 
  7780 ;; Registers used:
  7781 ;;		wreg, status,2, status,0
  7782 ;; Tracked objects:
  7783 ;;		On entry : 0/0
  7784 ;;		On exit  : 0/0
  7785 ;;		Unchanged: 0/0
  7786 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7787 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7788 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7789 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7790 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7791 ;;Total ram usage:       14 bytes
  7792 ;; Hardware stack levels used: 1
  7793 ;; Hardware stack levels required when called: 4
  7794 ;; This function calls:
  7795 ;;		Nothing
  7796 ;; This function is called by:
  7797 ;;		_TLV493_X_GetValue
  7798 ;;		_TLV493_Y_GetValue
  7799 ;;		_TLV493_Z_GetValue
  7800 ;;		_TLV493_Temp_GetValue
  7801 ;; This function uses a non-reentrant model
  7802 ;;
  7803                           
  7804                           	psect	text33
  7805  003114                     __ptext33:
  7806                           	callstack 0
  7807  003114                     ___xxtofl:
  7808                           	callstack 25
  7809                           
  7810                           ;incstack = 0
  7811                           ;___xxtofl@sign stored from wreg
  7812  003114  6E0D               	movwf	___xxtofl@sign^0,c
  7813  003116  500D               	movf	___xxtofl@sign^0,w,c
  7814  003118  B4D8               	btfsc	status,2,c
  7815  00311A  EF91  F018         	goto	u5631
  7816  00311E  EF93  F018         	goto	u5630
  7817  003122                     u5631:
  7818  003122  EFB5  F018         	goto	l1403
  7819  003126                     u5630:
  7820  003126  BE08               	btfsc	(___xxtofl@val+3)^0,7,c
  7821  003128  EF9A  F018         	goto	u5640
  7822  00312C  EF98  F018         	goto	u5641
  7823  003130                     u5641:
  7824  003130  EFB5  F018         	goto	l1403
  7825  003134                     u5640:
  7826  003134  C005  F009         	movff	___xxtofl@val,??___xxtofl
  7827  003138  C006  F00A         	movff	___xxtofl@val+1,??___xxtofl+1
  7828  00313C  C007  F00B         	movff	___xxtofl@val+2,??___xxtofl+2
  7829  003140  C008  F00C         	movff	___xxtofl@val+3,??___xxtofl+3
  7830  003144  1E09               	comf	??___xxtofl^0,f,c
  7831  003146  1E0A               	comf	(??___xxtofl+1)^0,f,c
  7832  003148  1E0B               	comf	(??___xxtofl+2)^0,f,c
  7833  00314A  1E0C               	comf	(??___xxtofl+3)^0,f,c
  7834  00314C  2A09               	incf	??___xxtofl^0,f,c
  7835  00314E  0E00               	movlw	0
  7836  003150  220A               	addwfc	(??___xxtofl+1)^0,f,c
  7837  003152  220B               	addwfc	(??___xxtofl+2)^0,f,c
  7838  003154  220C               	addwfc	(??___xxtofl+3)^0,f,c
  7839  003156  C009  F00F         	movff	??___xxtofl,___xxtofl@arg
  7840  00315A  C00A  F010         	movff	??___xxtofl+1,___xxtofl@arg+1
  7841  00315E  C00B  F011         	movff	??___xxtofl+2,___xxtofl@arg+2
  7842  003162  C00C  F012         	movff	??___xxtofl+3,___xxtofl@arg+3
  7843  003166  EFBD  F018         	goto	l5889
  7844  00316A                     l1403:
  7845  00316A  C005  F00F         	movff	___xxtofl@val,___xxtofl@arg
  7846  00316E  C006  F010         	movff	___xxtofl@val+1,___xxtofl@arg+1
  7847  003172  C007  F011         	movff	___xxtofl@val+2,___xxtofl@arg+2
  7848  003176  C008  F012         	movff	___xxtofl@val+3,___xxtofl@arg+3
  7849  00317A                     l5889:
  7850  00317A  5005               	movf	___xxtofl@val^0,w,c
  7851  00317C  1006               	iorwf	(___xxtofl@val+1)^0,w,c
  7852  00317E  1007               	iorwf	(___xxtofl@val+2)^0,w,c
  7853  003180  1008               	iorwf	(___xxtofl@val+3)^0,w,c
  7854  003182  A4D8               	btfss	status,2,c
  7855  003184  EFC6  F018         	goto	u5651
  7856  003188  EFC8  F018         	goto	u5650
  7857  00318C                     u5651:
  7858  00318C  EFD2  F018         	goto	l5895
  7859  003190                     u5650:
  7860  003190  0E00               	movlw	0
  7861  003192  6E05               	movwf	?___xxtofl^0,c
  7862  003194  0E00               	movlw	0
  7863  003196  6E06               	movwf	(?___xxtofl+1)^0,c
  7864  003198  0E00               	movlw	0
  7865  00319A  6E07               	movwf	(?___xxtofl+2)^0,c
  7866  00319C  0E00               	movlw	0
  7867  00319E  6E08               	movwf	(?___xxtofl+3)^0,c
  7868  0031A0  EF63  F019         	goto	l1406
  7869  0031A4                     l5895:
  7870  0031A4  0E96               	movlw	150
  7871  0031A6  6E0E               	movwf	___xxtofl@exp^0,c
  7872  0031A8  EFDC  F018         	goto	l5899
  7873  0031AC                     l5897:
  7874  0031AC  2A0E               	incf	___xxtofl@exp^0,f,c
  7875  0031AE  90D8               	bcf	status,0,c
  7876  0031B0  3212               	rrcf	(___xxtofl@arg+3)^0,f,c
  7877  0031B2  3211               	rrcf	(___xxtofl@arg+2)^0,f,c
  7878  0031B4  3210               	rrcf	(___xxtofl@arg+1)^0,f,c
  7879  0031B6  320F               	rrcf	___xxtofl@arg^0,f,c
  7880  0031B8                     l5899:
  7881  0031B8  0E00               	movlw	0
  7882  0031BA  140F               	andwf	___xxtofl@arg^0,w,c
  7883  0031BC  6E09               	movwf	??___xxtofl^0,c
  7884  0031BE  0E00               	movlw	0
  7885  0031C0  1410               	andwf	(___xxtofl@arg+1)^0,w,c
  7886  0031C2  6E0A               	movwf	(??___xxtofl+1)^0,c
  7887  0031C4  0E00               	movlw	0
  7888  0031C6  1411               	andwf	(___xxtofl@arg+2)^0,w,c
  7889  0031C8  6E0B               	movwf	(??___xxtofl+2)^0,c
  7890  0031CA  0EFE               	movlw	254
  7891  0031CC  1412               	andwf	(___xxtofl@arg+3)^0,w,c
  7892  0031CE  6E0C               	movwf	(??___xxtofl+3)^0,c
  7893  0031D0  5009               	movf	??___xxtofl^0,w,c
  7894  0031D2  100A               	iorwf	(??___xxtofl+1)^0,w,c
  7895  0031D4  100B               	iorwf	(??___xxtofl+2)^0,w,c
  7896  0031D6  100C               	iorwf	(??___xxtofl+3)^0,w,c
  7897  0031D8  A4D8               	btfss	status,2,c
  7898  0031DA  EFF1  F018         	goto	u5661
  7899  0031DE  EFF3  F018         	goto	u5660
  7900  0031E2                     u5661:
  7901  0031E2  EFD6  F018         	goto	l5897
  7902  0031E6                     u5660:
  7903  0031E6  EF01  F019         	goto	l1410
  7904  0031EA                     l5901:
  7905  0031EA  2A0E               	incf	___xxtofl@exp^0,f,c
  7906  0031EC  0E01               	movlw	1
  7907  0031EE  260F               	addwf	___xxtofl@arg^0,f,c
  7908  0031F0  0E00               	movlw	0
  7909  0031F2  2210               	addwfc	(___xxtofl@arg+1)^0,f,c
  7910  0031F4  2211               	addwfc	(___xxtofl@arg+2)^0,f,c
  7911  0031F6  2212               	addwfc	(___xxtofl@arg+3)^0,f,c
  7912  0031F8  90D8               	bcf	status,0,c
  7913  0031FA  3212               	rrcf	(___xxtofl@arg+3)^0,f,c
  7914  0031FC  3211               	rrcf	(___xxtofl@arg+2)^0,f,c
  7915  0031FE  3210               	rrcf	(___xxtofl@arg+1)^0,f,c
  7916  003200  320F               	rrcf	___xxtofl@arg^0,f,c
  7917  003202                     l1410:
  7918  003202  0E00               	movlw	0
  7919  003204  140F               	andwf	___xxtofl@arg^0,w,c
  7920  003206  6E09               	movwf	??___xxtofl^0,c
  7921  003208  0E00               	movlw	0
  7922  00320A  1410               	andwf	(___xxtofl@arg+1)^0,w,c
  7923  00320C  6E0A               	movwf	(??___xxtofl+1)^0,c
  7924  00320E  0E00               	movlw	0
  7925  003210  1411               	andwf	(___xxtofl@arg+2)^0,w,c
  7926  003212  6E0B               	movwf	(??___xxtofl+2)^0,c
  7927  003214  0EFF               	movlw	255
  7928  003216  1412               	andwf	(___xxtofl@arg+3)^0,w,c
  7929  003218  6E0C               	movwf	(??___xxtofl+3)^0,c
  7930  00321A  5009               	movf	??___xxtofl^0,w,c
  7931  00321C  100A               	iorwf	(??___xxtofl+1)^0,w,c
  7932  00321E  100B               	iorwf	(??___xxtofl+2)^0,w,c
  7933  003220  100C               	iorwf	(??___xxtofl+3)^0,w,c
  7934  003222  A4D8               	btfss	status,2,c
  7935  003224  EF16  F019         	goto	u5671
  7936  003228  EF18  F019         	goto	u5670
  7937  00322C                     u5671:
  7938  00322C  EFF5  F018         	goto	l5901
  7939  003230                     u5670:
  7940  003230  EF20  F019         	goto	l5909
  7941  003234                     l5907:
  7942  003234  060E               	decf	___xxtofl@exp^0,f,c
  7943  003236  90D8               	bcf	status,0,c
  7944  003238  360F               	rlcf	___xxtofl@arg^0,f,c
  7945  00323A  3610               	rlcf	(___xxtofl@arg+1)^0,f,c
  7946  00323C  3611               	rlcf	(___xxtofl@arg+2)^0,f,c
  7947  00323E  3612               	rlcf	(___xxtofl@arg+3)^0,f,c
  7948  003240                     l5909:
  7949  003240  BE11               	btfsc	(___xxtofl@arg+2)^0,7,c
  7950  003242  EF25  F019         	goto	u5681
  7951  003246  EF27  F019         	goto	u5680
  7952  00324A                     u5681:
  7953  00324A  EF2F  F019         	goto	l1417
  7954  00324E                     u5680:
  7955  00324E  0E02               	movlw	2
  7956  003250  600E               	cpfslt	___xxtofl@exp^0,c
  7957  003252  EF2D  F019         	goto	u5691
  7958  003256  EF2F  F019         	goto	u5690
  7959  00325A                     u5691:
  7960  00325A  EF1A  F019         	goto	l5907
  7961  00325E                     u5690:
  7962  00325E                     l1417:
  7963  00325E  B00E               	btfsc	___xxtofl@exp^0,0,c
  7964  003260  EF34  F019         	goto	u5701
  7965  003264  EF36  F019         	goto	u5700
  7966  003268                     u5701:
  7967  003268  EF37  F019         	goto	l5915
  7968  00326C                     u5700:
  7969  00326C  9E11               	bcf	(___xxtofl@arg+2)^0,7,c
  7970  00326E                     l5915:
  7971  00326E  90D8               	bcf	status,0,c
  7972  003270  320E               	rrcf	___xxtofl@exp^0,f,c
  7973  003272  C00E  F009         	movff	___xxtofl@exp,??___xxtofl
  7974  003276  6A0A               	clrf	(??___xxtofl+1)^0,c
  7975  003278  6A0B               	clrf	(??___xxtofl+2)^0,c
  7976  00327A  6A0C               	clrf	(??___xxtofl+3)^0,c
  7977  00327C  C009  F00C         	movff	??___xxtofl,??___xxtofl+3
  7978  003280  6A0B               	clrf	(??___xxtofl+2)^0,c
  7979  003282  6A0A               	clrf	(??___xxtofl+1)^0,c
  7980  003284  6A09               	clrf	??___xxtofl^0,c
  7981  003286  5009               	movf	??___xxtofl^0,w,c
  7982  003288  120F               	iorwf	___xxtofl@arg^0,f,c
  7983  00328A  500A               	movf	(??___xxtofl+1)^0,w,c
  7984  00328C  1210               	iorwf	(___xxtofl@arg+1)^0,f,c
  7985  00328E  500B               	movf	(??___xxtofl+2)^0,w,c
  7986  003290  1211               	iorwf	(___xxtofl@arg+2)^0,f,c
  7987  003292  500C               	movf	(??___xxtofl+3)^0,w,c
  7988  003294  1212               	iorwf	(___xxtofl@arg+3)^0,f,c
  7989  003296  500D               	movf	___xxtofl@sign^0,w,c
  7990  003298  B4D8               	btfsc	status,2,c
  7991  00329A  EF51  F019         	goto	u5711
  7992  00329E  EF53  F019         	goto	u5710
  7993  0032A2                     u5711:
  7994  0032A2  EF5B  F019         	goto	l5925
  7995  0032A6                     u5710:
  7996  0032A6  BE08               	btfsc	(___xxtofl@val+3)^0,7,c
  7997  0032A8  EF5A  F019         	goto	u5720
  7998  0032AC  EF58  F019         	goto	u5721
  7999  0032B0                     u5721:
  8000  0032B0  EF5B  F019         	goto	l5925
  8001  0032B4                     u5720:
  8002  0032B4  8E12               	bsf	(___xxtofl@arg+3)^0,7,c
  8003  0032B6                     l5925:
  8004  0032B6  C00F  F005         	movff	___xxtofl@arg,?___xxtofl
  8005  0032BA  C010  F006         	movff	___xxtofl@arg+1,?___xxtofl+1
  8006  0032BE  C011  F007         	movff	___xxtofl@arg+2,?___xxtofl+2
  8007  0032C2  C012  F008         	movff	___xxtofl@arg+3,?___xxtofl+3
  8008  0032C6                     l1406:
  8009  0032C6  0012               	return		;funcret
  8010  0032C8                     __end_of___xxtofl:
  8011                           	callstack 0
  8012                           
  8013 ;; *************** function ___flmul *****************
  8014 ;; Defined at:
  8015 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcmul.c"
  8016 ;; Parameters:    Size  Location     Type
  8017 ;;  b               4   18[COMRAM] unsigned char 
  8018 ;;  a               4   22[COMRAM] unsigned char 
  8019 ;; Auto vars:     Size  Location     Type
  8020 ;;  prod            4   37[COMRAM] struct .
  8021 ;;  grs             4   32[COMRAM] unsigned long 
  8022 ;;  temp            2   41[COMRAM] struct .
  8023 ;;  bexp            1   36[COMRAM] unsigned char 
  8024 ;;  aexp            1   31[COMRAM] unsigned char 
  8025 ;;  sign            1   30[COMRAM] unsigned char 
  8026 ;; Return value:  Size  Location     Type
  8027 ;;                  4   18[COMRAM] unsigned char 
  8028 ;; Registers used:
  8029 ;;		wreg, status,2, status,0, prodl, prodh
  8030 ;; Tracked objects:
  8031 ;;		On entry : 0/0
  8032 ;;		On exit  : 0/0
  8033 ;;		Unchanged: 0/0
  8034 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8035 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8036 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8037 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8038 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8039 ;;Total ram usage:       25 bytes
  8040 ;; Hardware stack levels used: 1
  8041 ;; Hardware stack levels required when called: 4
  8042 ;; This function calls:
  8043 ;;		Nothing
  8044 ;; This function is called by:
  8045 ;;		_TLV493_X_GetValue
  8046 ;;		_TLV493_Y_GetValue
  8047 ;;		_TLV493_Z_GetValue
  8048 ;;		_TLV493_Temp_GetValue
  8049 ;;		_efgtoa
  8050 ;; This function uses a non-reentrant model
  8051 ;;
  8052                           
  8053                           	psect	text34
  8054  00273E                     __ptext34:
  8055                           	callstack 0
  8056  00273E                     ___flmul:
  8057                           	callstack 22
  8058  00273E  5016               	movf	(___flmul@b+3)^0,w,c
  8059  002740  0B80               	andlw	128
  8060  002742  6E1F               	movwf	___flmul@sign^0,c
  8061  002744  5016               	movf	(___flmul@b+3)^0,w,c
  8062  002746  2416               	addwf	(___flmul@b+3)^0,w,c
  8063  002748  6E25               	movwf	___flmul@bexp^0,c
  8064  00274A  AE15               	btfss	(___flmul@b+2)^0,7,c
  8065  00274C  EFAA  F013         	goto	u6841
  8066  002750  EFAC  F013         	goto	u6840
  8067  002754                     u6841:
  8068  002754  EFAD  F013         	goto	l6811
  8069  002758                     u6840:
  8070  002758  8025               	bsf	___flmul@bexp^0,0,c
  8071  00275A                     l6811:
  8072  00275A  5025               	movf	___flmul@bexp^0,w,c
  8073  00275C  B4D8               	btfsc	status,2,c
  8074  00275E  EFB3  F013         	goto	u6851
  8075  002762  EFB5  F013         	goto	u6850
  8076  002766                     u6851:
  8077  002766  EFC8  F013         	goto	l6819
  8078  00276A                     u6850:
  8079  00276A  2825               	incf	___flmul@bexp^0,w,c
  8080  00276C  A4D8               	btfss	status,2,c
  8081  00276E  EFBB  F013         	goto	u6861
  8082  002772  EFBD  F013         	goto	u6860
  8083  002776                     u6861:
  8084  002776  EFC5  F013         	goto	l6817
  8085  00277A                     u6860:
  8086  00277A  0E00               	movlw	0
  8087  00277C  6E13               	movwf	___flmul@b^0,c
  8088  00277E  0E00               	movlw	0
  8089  002780  6E14               	movwf	(___flmul@b+1)^0,c
  8090  002782  0E00               	movlw	0
  8091  002784  6E15               	movwf	(___flmul@b+2)^0,c
  8092  002786  0E00               	movlw	0
  8093  002788  6E16               	movwf	(___flmul@b+3)^0,c
  8094  00278A                     l6817:
  8095  00278A  8E15               	bsf	(___flmul@b+2)^0,7,c
  8096  00278C  EFD0  F013         	goto	l6821
  8097  002790                     l6819:
  8098  002790  0E00               	movlw	0
  8099  002792  6E13               	movwf	___flmul@b^0,c
  8100  002794  0E00               	movlw	0
  8101  002796  6E14               	movwf	(___flmul@b+1)^0,c
  8102  002798  0E00               	movlw	0
  8103  00279A  6E15               	movwf	(___flmul@b+2)^0,c
  8104  00279C  0E00               	movlw	0
  8105  00279E  6E16               	movwf	(___flmul@b+3)^0,c
  8106  0027A0                     l6821:
  8107  0027A0  501A               	movf	(___flmul@a+3)^0,w,c
  8108  0027A2  0B80               	andlw	128
  8109  0027A4  1A1F               	xorwf	___flmul@sign^0,f,c
  8110  0027A6  501A               	movf	(___flmul@a+3)^0,w,c
  8111  0027A8  241A               	addwf	(___flmul@a+3)^0,w,c
  8112  0027AA  6E20               	movwf	___flmul@aexp^0,c
  8113  0027AC  AE19               	btfss	(___flmul@a+2)^0,7,c
  8114  0027AE  EFDB  F013         	goto	u6871
  8115  0027B2  EFDD  F013         	goto	u6870
  8116  0027B6                     u6871:
  8117  0027B6  EFDE  F013         	goto	l6829
  8118  0027BA                     u6870:
  8119  0027BA  8020               	bsf	___flmul@aexp^0,0,c
  8120  0027BC                     l6829:
  8121  0027BC  5020               	movf	___flmul@aexp^0,w,c
  8122  0027BE  B4D8               	btfsc	status,2,c
  8123  0027C0  EFE4  F013         	goto	u6881
  8124  0027C4  EFE6  F013         	goto	u6880
  8125  0027C8                     u6881:
  8126  0027C8  EFF9  F013         	goto	l6837
  8127  0027CC                     u6880:
  8128  0027CC  2820               	incf	___flmul@aexp^0,w,c
  8129  0027CE  A4D8               	btfss	status,2,c
  8130  0027D0  EFEC  F013         	goto	u6891
  8131  0027D4  EFEE  F013         	goto	u6890
  8132  0027D8                     u6891:
  8133  0027D8  EFF6  F013         	goto	l6835
  8134  0027DC                     u6890:
  8135  0027DC  0E00               	movlw	0
  8136  0027DE  6E17               	movwf	___flmul@a^0,c
  8137  0027E0  0E00               	movlw	0
  8138  0027E2  6E18               	movwf	(___flmul@a+1)^0,c
  8139  0027E4  0E00               	movlw	0
  8140  0027E6  6E19               	movwf	(___flmul@a+2)^0,c
  8141  0027E8  0E00               	movlw	0
  8142  0027EA  6E1A               	movwf	(___flmul@a+3)^0,c
  8143  0027EC                     l6835:
  8144  0027EC  8E19               	bsf	(___flmul@a+2)^0,7,c
  8145  0027EE  EF01  F014         	goto	l1362
  8146  0027F2                     l6837:
  8147  0027F2  0E00               	movlw	0
  8148  0027F4  6E17               	movwf	___flmul@a^0,c
  8149  0027F6  0E00               	movlw	0
  8150  0027F8  6E18               	movwf	(___flmul@a+1)^0,c
  8151  0027FA  0E00               	movlw	0
  8152  0027FC  6E19               	movwf	(___flmul@a+2)^0,c
  8153  0027FE  0E00               	movlw	0
  8154  002800  6E1A               	movwf	(___flmul@a+3)^0,c
  8155  002802                     l1362:
  8156  002802  5020               	movf	___flmul@aexp^0,w,c
  8157  002804  B4D8               	btfsc	status,2,c
  8158  002806  EF07  F014         	goto	u6901
  8159  00280A  EF09  F014         	goto	u6900
  8160  00280E                     u6901:
  8161  00280E  EF11  F014         	goto	l6841
  8162  002812                     u6900:
  8163  002812  5025               	movf	___flmul@bexp^0,w,c
  8164  002814  A4D8               	btfss	status,2,c
  8165  002816  EF0F  F014         	goto	u6911
  8166  00281A  EF11  F014         	goto	u6910
  8167  00281E                     u6911:
  8168  00281E  EF1B  F014         	goto	l6845
  8169  002822                     u6910:
  8170  002822                     l6841:
  8171  002822  0E00               	movlw	0
  8172  002824  6E13               	movwf	?___flmul^0,c
  8173  002826  0E00               	movlw	0
  8174  002828  6E14               	movwf	(?___flmul+1)^0,c
  8175  00282A  0E00               	movlw	0
  8176  00282C  6E15               	movwf	(?___flmul+2)^0,c
  8177  00282E  0E00               	movlw	0
  8178  002830  6E16               	movwf	(?___flmul+3)^0,c
  8179  002832  EFB3  F015         	goto	l1366
  8180  002836                     l6845:
  8181  002836  5019               	movf	(___flmul@a+2)^0,w,c
  8182  002838  0213               	mulwf	___flmul@b^0,c
  8183  00283A  CFF3 F02A          	movff	prodl,___flmul@temp
  8184  00283E  CFF4 F02B          	movff	prodh,___flmul@temp+1
  8185  002842  502A               	movf	___flmul@temp^0,w,c
  8186  002844  6E21               	movwf	___flmul@grs^0,c
  8187  002846  6A22               	clrf	(___flmul@grs+1)^0,c
  8188  002848  6A23               	clrf	(___flmul@grs+2)^0,c
  8189  00284A  6A24               	clrf	(___flmul@grs+3)^0,c
  8190  00284C  502B               	movf	(___flmul@temp+1)^0,w,c
  8191  00284E  6E26               	movwf	___flmul@prod^0,c
  8192  002850  6A27               	clrf	(___flmul@prod+1)^0,c
  8193  002852  6A28               	clrf	(___flmul@prod+2)^0,c
  8194  002854  6A29               	clrf	(___flmul@prod+3)^0,c
  8195  002856  5018               	movf	(___flmul@a+1)^0,w,c
  8196  002858  0214               	mulwf	(___flmul@b+1)^0,c
  8197  00285A  CFF3 F02A          	movff	prodl,___flmul@temp
  8198  00285E  CFF4 F02B          	movff	prodh,___flmul@temp+1
  8199  002862  502A               	movf	___flmul@temp^0,w,c
  8200  002864  2621               	addwf	___flmul@grs^0,f,c
  8201  002866  0E00               	movlw	0
  8202  002868  2222               	addwfc	(___flmul@grs+1)^0,f,c
  8203  00286A  2223               	addwfc	(___flmul@grs+2)^0,f,c
  8204  00286C  2224               	addwfc	(___flmul@grs+3)^0,f,c
  8205  00286E  502B               	movf	(___flmul@temp+1)^0,w,c
  8206  002870  2626               	addwf	___flmul@prod^0,f,c
  8207  002872  0E00               	movlw	0
  8208  002874  2227               	addwfc	(___flmul@prod+1)^0,f,c
  8209  002876  2228               	addwfc	(___flmul@prod+2)^0,f,c
  8210  002878  2229               	addwfc	(___flmul@prod+3)^0,f,c
  8211  00287A  5017               	movf	___flmul@a^0,w,c
  8212  00287C  0215               	mulwf	(___flmul@b+2)^0,c
  8213  00287E  CFF3 F02A          	movff	prodl,___flmul@temp
  8214  002882  CFF4 F02B          	movff	prodh,___flmul@temp+1
  8215  002886  502A               	movf	___flmul@temp^0,w,c
  8216  002888  2621               	addwf	___flmul@grs^0,f,c
  8217  00288A  0E00               	movlw	0
  8218  00288C  2222               	addwfc	(___flmul@grs+1)^0,f,c
  8219  00288E  2223               	addwfc	(___flmul@grs+2)^0,f,c
  8220  002890  2224               	addwfc	(___flmul@grs+3)^0,f,c
  8221  002892  502B               	movf	(___flmul@temp+1)^0,w,c
  8222  002894  2626               	addwf	___flmul@prod^0,f,c
  8223  002896  0E00               	movlw	0
  8224  002898  2227               	addwfc	(___flmul@prod+1)^0,f,c
  8225  00289A  2228               	addwfc	(___flmul@prod+2)^0,f,c
  8226  00289C  2229               	addwfc	(___flmul@prod+3)^0,f,c
  8227  00289E  C023  F024         	movff	___flmul@grs+2,___flmul@grs+3
  8228  0028A2  C022  F023         	movff	___flmul@grs+1,___flmul@grs+2
  8229  0028A6  C021  F022         	movff	___flmul@grs,___flmul@grs+1
  8230  0028AA  6A21               	clrf	___flmul@grs^0,c
  8231  0028AC  5017               	movf	___flmul@a^0,w,c
  8232  0028AE  0214               	mulwf	(___flmul@b+1)^0,c
  8233  0028B0  CFF3 F02A          	movff	prodl,___flmul@temp
  8234  0028B4  CFF4 F02B          	movff	prodh,___flmul@temp+1
  8235  0028B8  502A               	movf	___flmul@temp^0,w,c
  8236  0028BA  2621               	addwf	___flmul@grs^0,f,c
  8237  0028BC  502B               	movf	(___flmul@temp+1)^0,w,c
  8238  0028BE  2222               	addwfc	(___flmul@grs+1)^0,f,c
  8239  0028C0  0E00               	movlw	0
  8240  0028C2  2223               	addwfc	(___flmul@grs+2)^0,f,c
  8241  0028C4  0E00               	movlw	0
  8242  0028C6  2224               	addwfc	(___flmul@grs+3)^0,f,c
  8243  0028C8  5018               	movf	(___flmul@a+1)^0,w,c
  8244  0028CA  0213               	mulwf	___flmul@b^0,c
  8245  0028CC  CFF3 F02A          	movff	prodl,___flmul@temp
  8246  0028D0  CFF4 F02B          	movff	prodh,___flmul@temp+1
  8247  0028D4  502A               	movf	___flmul@temp^0,w,c
  8248  0028D6  2621               	addwf	___flmul@grs^0,f,c
  8249  0028D8  502B               	movf	(___flmul@temp+1)^0,w,c
  8250  0028DA  2222               	addwfc	(___flmul@grs+1)^0,f,c
  8251  0028DC  0E00               	movlw	0
  8252  0028DE  2223               	addwfc	(___flmul@grs+2)^0,f,c
  8253  0028E0  0E00               	movlw	0
  8254  0028E2  2224               	addwfc	(___flmul@grs+3)^0,f,c
  8255  0028E4  C023  F024         	movff	___flmul@grs+2,___flmul@grs+3
  8256  0028E8  C022  F023         	movff	___flmul@grs+1,___flmul@grs+2
  8257  0028EC  C021  F022         	movff	___flmul@grs,___flmul@grs+1
  8258  0028F0  6A21               	clrf	___flmul@grs^0,c
  8259  0028F2  5017               	movf	___flmul@a^0,w,c
  8260  0028F4  0213               	mulwf	___flmul@b^0,c
  8261  0028F6  CFF3 F02A          	movff	prodl,___flmul@temp
  8262  0028FA  CFF4 F02B          	movff	prodh,___flmul@temp+1
  8263  0028FE  502A               	movf	___flmul@temp^0,w,c
  8264  002900  2621               	addwf	___flmul@grs^0,f,c
  8265  002902  502B               	movf	(___flmul@temp+1)^0,w,c
  8266  002904  2222               	addwfc	(___flmul@grs+1)^0,f,c
  8267  002906  0E00               	movlw	0
  8268  002908  2223               	addwfc	(___flmul@grs+2)^0,f,c
  8269  00290A  0E00               	movlw	0
  8270  00290C  2224               	addwfc	(___flmul@grs+3)^0,f,c
  8271  00290E  5019               	movf	(___flmul@a+2)^0,w,c
  8272  002910  0214               	mulwf	(___flmul@b+1)^0,c
  8273  002912  CFF3 F02A          	movff	prodl,___flmul@temp
  8274  002916  CFF4 F02B          	movff	prodh,___flmul@temp+1
  8275  00291A  502A               	movf	___flmul@temp^0,w,c
  8276  00291C  2626               	addwf	___flmul@prod^0,f,c
  8277  00291E  502B               	movf	(___flmul@temp+1)^0,w,c
  8278  002920  2227               	addwfc	(___flmul@prod+1)^0,f,c
  8279  002922  0E00               	movlw	0
  8280  002924  2228               	addwfc	(___flmul@prod+2)^0,f,c
  8281  002926  0E00               	movlw	0
  8282  002928  2229               	addwfc	(___flmul@prod+3)^0,f,c
  8283  00292A  5018               	movf	(___flmul@a+1)^0,w,c
  8284  00292C  0215               	mulwf	(___flmul@b+2)^0,c
  8285  00292E  CFF3 F02A          	movff	prodl,___flmul@temp
  8286  002932  CFF4 F02B          	movff	prodh,___flmul@temp+1
  8287  002936  502A               	movf	___flmul@temp^0,w,c
  8288  002938  2626               	addwf	___flmul@prod^0,f,c
  8289  00293A  502B               	movf	(___flmul@temp+1)^0,w,c
  8290  00293C  2227               	addwfc	(___flmul@prod+1)^0,f,c
  8291  00293E  0E00               	movlw	0
  8292  002940  2228               	addwfc	(___flmul@prod+2)^0,f,c
  8293  002942  0E00               	movlw	0
  8294  002944  2229               	addwfc	(___flmul@prod+3)^0,f,c
  8295  002946  5019               	movf	(___flmul@a+2)^0,w,c
  8296  002948  0215               	mulwf	(___flmul@b+2)^0,c
  8297  00294A  CFF3 F02A          	movff	prodl,___flmul@temp
  8298  00294E  CFF4 F02B          	movff	prodh,___flmul@temp+1
  8299  002952  502A               	movf	___flmul@temp^0,w,c
  8300  002954  6E1B               	movwf	??___flmul^0,c
  8301  002956  502B               	movf	(___flmul@temp+1)^0,w,c
  8302  002958  6E1C               	movwf	(??___flmul+1)^0,c
  8303  00295A  6A1D               	clrf	(??___flmul+2)^0,c
  8304  00295C  6A1E               	clrf	(??___flmul+3)^0,c
  8305  00295E  C01D  F01E         	movff	??___flmul+2,??___flmul+3
  8306  002962  C01C  F01D         	movff	??___flmul+1,??___flmul+2
  8307  002966  C01B  F01C         	movff	??___flmul,??___flmul+1
  8308  00296A  6A1B               	clrf	??___flmul^0,c
  8309  00296C  501B               	movf	??___flmul^0,w,c
  8310  00296E  2626               	addwf	___flmul@prod^0,f,c
  8311  002970  501C               	movf	(??___flmul+1)^0,w,c
  8312  002972  2227               	addwfc	(___flmul@prod+1)^0,f,c
  8313  002974  501D               	movf	(??___flmul+2)^0,w,c
  8314  002976  2228               	addwfc	(___flmul@prod+2)^0,f,c
  8315  002978  501E               	movf	(??___flmul+3)^0,w,c
  8316  00297A  2229               	addwfc	(___flmul@prod+3)^0,f,c
  8317  00297C  C021  F01B         	movff	___flmul@grs,??___flmul
  8318  002980  C022  F01C         	movff	___flmul@grs+1,??___flmul+1
  8319  002984  C023  F01D         	movff	___flmul@grs+2,??___flmul+2
  8320  002988  C024  F01E         	movff	___flmul@grs+3,??___flmul+3
  8321  00298C  0E19               	movlw	25
  8322  00298E  EFCE  F014         	goto	u6920
  8323  002992                     u6925:
  8324  002992  90D8               	bcf	status,0,c
  8325  002994  321E               	rrcf	(??___flmul+3)^0,f,c
  8326  002996  321D               	rrcf	(??___flmul+2)^0,f,c
  8327  002998  321C               	rrcf	(??___flmul+1)^0,f,c
  8328  00299A  321B               	rrcf	??___flmul^0,f,c
  8329  00299C                     u6920:
  8330  00299C  2EE8               	decfsz	wreg,f,c
  8331  00299E  EFC9  F014         	goto	u6925
  8332  0029A2  501B               	movf	??___flmul^0,w,c
  8333  0029A4  2626               	addwf	___flmul@prod^0,f,c
  8334  0029A6  501C               	movf	(??___flmul+1)^0,w,c
  8335  0029A8  2227               	addwfc	(___flmul@prod+1)^0,f,c
  8336  0029AA  501D               	movf	(??___flmul+2)^0,w,c
  8337  0029AC  2228               	addwfc	(___flmul@prod+2)^0,f,c
  8338  0029AE  501E               	movf	(??___flmul+3)^0,w,c
  8339  0029B0  2229               	addwfc	(___flmul@prod+3)^0,f,c
  8340  0029B2  C023  F024         	movff	___flmul@grs+2,___flmul@grs+3
  8341  0029B6  C022  F023         	movff	___flmul@grs+1,___flmul@grs+2
  8342  0029BA  C021  F022         	movff	___flmul@grs,___flmul@grs+1
  8343  0029BE  6A21               	clrf	___flmul@grs^0,c
  8344  0029C0  5020               	movf	___flmul@aexp^0,w,c
  8345  0029C2  C025  F01B         	movff	___flmul@bexp,??___flmul
  8346  0029C6  6A1C               	clrf	(??___flmul+1)^0,c
  8347  0029C8  261B               	addwf	??___flmul^0,f,c
  8348  0029CA  0E00               	movlw	0
  8349  0029CC  221C               	addwfc	(??___flmul+1)^0,f,c
  8350  0029CE  0E82               	movlw	130
  8351  0029D0  241B               	addwf	??___flmul^0,w,c
  8352  0029D2  6E2A               	movwf	___flmul@temp^0,c
  8353  0029D4  0EFF               	movlw	255
  8354  0029D6  201C               	addwfc	(??___flmul+1)^0,w,c
  8355  0029D8  6E2B               	movwf	(___flmul@temp+1)^0,c
  8356  0029DA  EF04  F015         	goto	l6893
  8357  0029DE                     l6887:
  8358  0029DE  90D8               	bcf	status,0,c
  8359  0029E0  3626               	rlcf	___flmul@prod^0,f,c
  8360  0029E2  3627               	rlcf	(___flmul@prod+1)^0,f,c
  8361  0029E4  3628               	rlcf	(___flmul@prod+2)^0,f,c
  8362  0029E6  3629               	rlcf	(___flmul@prod+3)^0,f,c
  8363  0029E8  AE24               	btfss	(___flmul@grs+3)^0,7,c
  8364  0029EA  EFF9  F014         	goto	u6931
  8365  0029EE  EFFB  F014         	goto	u6930
  8366  0029F2                     u6931:
  8367  0029F2  EFFC  F014         	goto	l1369
  8368  0029F6                     u6930:
  8369  0029F6  8026               	bsf	___flmul@prod^0,0,c
  8370  0029F8                     l1369:
  8371  0029F8  90D8               	bcf	status,0,c
  8372  0029FA  3621               	rlcf	___flmul@grs^0,f,c
  8373  0029FC  3622               	rlcf	(___flmul@grs+1)^0,f,c
  8374  0029FE  3623               	rlcf	(___flmul@grs+2)^0,f,c
  8375  002A00  3624               	rlcf	(___flmul@grs+3)^0,f,c
  8376  002A02  062A               	decf	___flmul@temp^0,f,c
  8377  002A04  A0D8               	btfss	status,0,c
  8378  002A06  062B               	decf	(___flmul@temp+1)^0,f,c
  8379  002A08                     l6893:
  8380  002A08  AE28               	btfss	(___flmul@prod+2)^0,7,c
  8381  002A0A  EF09  F015         	goto	u6941
  8382  002A0E  EF0B  F015         	goto	u6940
  8383  002A12                     u6941:
  8384  002A12  EFEF  F014         	goto	l6887
  8385  002A16                     u6940:
  8386  002A16  0E00               	movlw	0
  8387  002A18  6E20               	movwf	___flmul@aexp^0,c
  8388  002A1A  AE24               	btfss	(___flmul@grs+3)^0,7,c
  8389  002A1C  EF12  F015         	goto	u6951
  8390  002A20  EF14  F015         	goto	u6950
  8391  002A24                     u6951:
  8392  002A24  EF38  F015         	goto	l1371
  8393  002A28                     u6950:
  8394  002A28  0EFF               	movlw	255
  8395  002A2A  1421               	andwf	___flmul@grs^0,w,c
  8396  002A2C  6E1B               	movwf	??___flmul^0,c
  8397  002A2E  0EFF               	movlw	255
  8398  002A30  1422               	andwf	(___flmul@grs+1)^0,w,c
  8399  002A32  6E1C               	movwf	(??___flmul+1)^0,c
  8400  002A34  0EFF               	movlw	255
  8401  002A36  1423               	andwf	(___flmul@grs+2)^0,w,c
  8402  002A38  6E1D               	movwf	(??___flmul+2)^0,c
  8403  002A3A  0E7F               	movlw	127
  8404  002A3C  1424               	andwf	(___flmul@grs+3)^0,w,c
  8405  002A3E  6E1E               	movwf	(??___flmul+3)^0,c
  8406  002A40  501B               	movf	??___flmul^0,w,c
  8407  002A42  101C               	iorwf	(??___flmul+1)^0,w,c
  8408  002A44  101D               	iorwf	(??___flmul+2)^0,w,c
  8409  002A46  101E               	iorwf	(??___flmul+3)^0,w,c
  8410  002A48  B4D8               	btfsc	status,2,c
  8411  002A4A  EF29  F015         	goto	u6961
  8412  002A4E  EF2B  F015         	goto	u6960
  8413  002A52                     u6961:
  8414  002A52  EF2F  F015         	goto	l1372
  8415  002A56                     u6960:
  8416  002A56                     l6901:
  8417  002A56  0E01               	movlw	1
  8418  002A58  6E20               	movwf	___flmul@aexp^0,c
  8419  002A5A  EF38  F015         	goto	l1371
  8420  002A5E                     l1372:
  8421  002A5E  A026               	btfss	___flmul@prod^0,0,c
  8422  002A60  EF34  F015         	goto	u6971
  8423  002A64  EF36  F015         	goto	u6970
  8424  002A68                     u6971:
  8425  002A68  EF38  F015         	goto	l1371
  8426  002A6C                     u6970:
  8427  002A6C  EF2B  F015         	goto	l6901
  8428  002A70                     l1371:
  8429  002A70  5020               	movf	___flmul@aexp^0,w,c
  8430  002A72  B4D8               	btfsc	status,2,c
  8431  002A74  EF3E  F015         	goto	u6981
  8432  002A78  EF40  F015         	goto	u6980
  8433  002A7C                     u6981:
  8434  002A7C  EF64  F015         	goto	l6913
  8435  002A80                     u6980:
  8436  002A80  0E01               	movlw	1
  8437  002A82  2626               	addwf	___flmul@prod^0,f,c
  8438  002A84  0E00               	movlw	0
  8439  002A86  2227               	addwfc	(___flmul@prod+1)^0,f,c
  8440  002A88  2228               	addwfc	(___flmul@prod+2)^0,f,c
  8441  002A8A  2229               	addwfc	(___flmul@prod+3)^0,f,c
  8442  002A8C  A029               	btfss	(___flmul@prod+3)^0,0,c
  8443  002A8E  EF4B  F015         	goto	u6991
  8444  002A92  EF4D  F015         	goto	u6990
  8445  002A96                     u6991:
  8446  002A96  EF64  F015         	goto	l6913
  8447  002A9A                     u6990:
  8448  002A9A  C026  F01B         	movff	___flmul@prod,??___flmul
  8449  002A9E  C027  F01C         	movff	___flmul@prod+1,??___flmul+1
  8450  002AA2  C028  F01D         	movff	___flmul@prod+2,??___flmul+2
  8451  002AA6  C029  F01E         	movff	___flmul@prod+3,??___flmul+3
  8452  002AAA  341E               	rlcf	(??___flmul+3)^0,w,c
  8453  002AAC  321E               	rrcf	(??___flmul+3)^0,f,c
  8454  002AAE  321D               	rrcf	(??___flmul+2)^0,f,c
  8455  002AB0  321C               	rrcf	(??___flmul+1)^0,f,c
  8456  002AB2  321B               	rrcf	??___flmul^0,f,c
  8457  002AB4  C01B  F026         	movff	??___flmul,___flmul@prod
  8458  002AB8  C01C  F027         	movff	??___flmul+1,___flmul@prod+1
  8459  002ABC  C01D  F028         	movff	??___flmul+2,___flmul@prod+2
  8460  002AC0  C01E  F029         	movff	??___flmul+3,___flmul@prod+3
  8461  002AC4  4A2A               	infsnz	___flmul@temp^0,f,c
  8462  002AC6  2A2B               	incf	(___flmul@temp+1)^0,f,c
  8463  002AC8                     l6913:
  8464  002AC8  BE2B               	btfsc	(___flmul@temp+1)^0,7,c
  8465  002ACA  EF6F  F015         	goto	u7001
  8466  002ACE  502B               	movf	(___flmul@temp+1)^0,w,c
  8467  002AD0  E108               	bnz	u7000
  8468  002AD2  282A               	incf	___flmul@temp^0,w,c
  8469  002AD4  A0D8               	btfss	status,0,c
  8470  002AD6  EF6F  F015         	goto	u7001
  8471  002ADA  EF71  F015         	goto	u7000
  8472  002ADE                     u7001:
  8473  002ADE  EF7B  F015         	goto	l6917
  8474  002AE2                     u7000:
  8475  002AE2  0E00               	movlw	0
  8476  002AE4  6E26               	movwf	___flmul@prod^0,c
  8477  002AE6  0E00               	movlw	0
  8478  002AE8  6E27               	movwf	(___flmul@prod+1)^0,c
  8479  002AEA  0E80               	movlw	128
  8480  002AEC  6E28               	movwf	(___flmul@prod+2)^0,c
  8481  002AEE  0E7F               	movlw	127
  8482  002AF0  6E29               	movwf	(___flmul@prod+3)^0,c
  8483  002AF2  EFA9  F015         	goto	l6929
  8484  002AF6                     l6917:
  8485  002AF6  BE2B               	btfsc	(___flmul@temp+1)^0,7,c
  8486  002AF8  EF88  F015         	goto	u7010
  8487  002AFC  502B               	movf	(___flmul@temp+1)^0,w,c
  8488  002AFE  E106               	bnz	u7011
  8489  002B00  042A               	decf	___flmul@temp^0,w,c
  8490  002B02  B0D8               	btfsc	status,0,c
  8491  002B04  EF86  F015         	goto	u7011
  8492  002B08  EF88  F015         	goto	u7010
  8493  002B0C                     u7011:
  8494  002B0C  EF94  F015         	goto	l1379
  8495  002B10                     u7010:
  8496  002B10  0E00               	movlw	0
  8497  002B12  6E26               	movwf	___flmul@prod^0,c
  8498  002B14  0E00               	movlw	0
  8499  002B16  6E27               	movwf	(___flmul@prod+1)^0,c
  8500  002B18  0E00               	movlw	0
  8501  002B1A  6E28               	movwf	(___flmul@prod+2)^0,c
  8502  002B1C  0E00               	movlw	0
  8503  002B1E  6E29               	movwf	(___flmul@prod+3)^0,c
  8504  002B20  0E00               	movlw	0
  8505  002B22  6E1F               	movwf	___flmul@sign^0,c
  8506  002B24  EFA9  F015         	goto	l6929
  8507  002B28                     l1379:
  8508  002B28  C02A  F025         	movff	___flmul@temp,___flmul@bexp
  8509  002B2C  0EFF               	movlw	255
  8510  002B2E  1626               	andwf	___flmul@prod^0,f,c
  8511  002B30  0EFF               	movlw	255
  8512  002B32  1627               	andwf	(___flmul@prod+1)^0,f,c
  8513  002B34  0E7F               	movlw	127
  8514  002B36  1628               	andwf	(___flmul@prod+2)^0,f,c
  8515  002B38  0E00               	movlw	0
  8516  002B3A  1629               	andwf	(___flmul@prod+3)^0,f,c
  8517  002B3C  A025               	btfss	___flmul@bexp^0,0,c
  8518  002B3E  EFA3  F015         	goto	u7021
  8519  002B42  EFA5  F015         	goto	u7020
  8520  002B46                     u7021:
  8521  002B46  EFA6  F015         	goto	l6927
  8522  002B4A                     u7020:
  8523  002B4A  8E28               	bsf	(___flmul@prod+2)^0,7,c
  8524  002B4C                     l6927:
  8525  002B4C  90D8               	bcf	status,0,c
  8526  002B4E  3025               	rrcf	___flmul@bexp^0,w,c
  8527  002B50  6E29               	movwf	(___flmul@prod+3)^0,c
  8528  002B52                     l6929:
  8529  002B52  501F               	movf	___flmul@sign^0,w,c
  8530  002B54  1229               	iorwf	(___flmul@prod+3)^0,f,c
  8531  002B56  C026  F013         	movff	___flmul@prod,?___flmul
  8532  002B5A  C027  F014         	movff	___flmul@prod+1,?___flmul+1
  8533  002B5E  C028  F015         	movff	___flmul@prod+2,?___flmul+2
  8534  002B62  C029  F016         	movff	___flmul@prod+3,?___flmul+3
  8535  002B66                     l1366:
  8536  002B66  0012               	return		;funcret
  8537  002B68                     __end_of___flmul:
  8538                           	callstack 0
  8539                           
  8540 ;; *************** function ___fladd *****************
  8541 ;; Defined at:
  8542 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcadd.c"
  8543 ;; Parameters:    Size  Location     Type
  8544 ;;  b               4   43[COMRAM] unsigned char 
  8545 ;;  a               4   47[COMRAM] unsigned char 
  8546 ;; Auto vars:     Size  Location     Type
  8547 ;;  grs             1   58[COMRAM] unsigned char 
  8548 ;;  bexp            1   57[COMRAM] unsigned char 
  8549 ;;  aexp            1   56[COMRAM] unsigned char 
  8550 ;;  signs           1   55[COMRAM] unsigned char 
  8551 ;; Return value:  Size  Location     Type
  8552 ;;                  4   43[COMRAM] unsigned char 
  8553 ;; Registers used:
  8554 ;;		wreg, status,2, status,0
  8555 ;; Tracked objects:
  8556 ;;		On entry : 0/0
  8557 ;;		On exit  : 0/0
  8558 ;;		Unchanged: 0/0
  8559 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8560 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8561 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8562 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8563 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8564 ;;Total ram usage:       16 bytes
  8565 ;; Hardware stack levels used: 1
  8566 ;; Hardware stack levels required when called: 4
  8567 ;; This function calls:
  8568 ;;		Nothing
  8569 ;; This function is called by:
  8570 ;;		_TLV493_Temp_GetValue
  8571 ;;		___flsub
  8572 ;;		_efgtoa
  8573 ;; This function uses a non-reentrant model
  8574 ;;
  8575                           
  8576                           	psect	text35
  8577  00227E                     __ptext35:
  8578                           	callstack 0
  8579  00227E                     ___fladd:
  8580                           	callstack 21
  8581  00227E  502F               	movf	(___fladd@b+3)^0,w,c
  8582  002280  0B80               	andlw	128
  8583  002282  6E38               	movwf	___fladd@signs^0,c
  8584  002284  502F               	movf	(___fladd@b+3)^0,w,c
  8585  002286  242F               	addwf	(___fladd@b+3)^0,w,c
  8586  002288  6E3A               	movwf	___fladd@bexp^0,c
  8587  00228A  AE2E               	btfss	(___fladd@b+2)^0,7,c
  8588  00228C  EF4A  F011         	goto	u6181
  8589  002290  EF4C  F011         	goto	u6180
  8590  002294                     u6181:
  8591  002294  EF4D  F011         	goto	l6443
  8592  002298                     u6180:
  8593  002298  803A               	bsf	___fladd@bexp^0,0,c
  8594  00229A                     l6443:
  8595  00229A  503A               	movf	___fladd@bexp^0,w,c
  8596  00229C  B4D8               	btfsc	status,2,c
  8597  00229E  EF53  F011         	goto	u6191
  8598  0022A2  EF55  F011         	goto	u6190
  8599  0022A6                     u6191:
  8600  0022A6  EF6A  F011         	goto	l6453
  8601  0022AA                     u6190:
  8602  0022AA  283A               	incf	___fladd@bexp^0,w,c
  8603  0022AC  A4D8               	btfss	status,2,c
  8604  0022AE  EF5B  F011         	goto	u6201
  8605  0022B2  EF5D  F011         	goto	u6200
  8606  0022B6                     u6201:
  8607  0022B6  EF65  F011         	goto	l6449
  8608  0022BA                     u6200:
  8609  0022BA  0E00               	movlw	0
  8610  0022BC  6E2C               	movwf	___fladd@b^0,c
  8611  0022BE  0E00               	movlw	0
  8612  0022C0  6E2D               	movwf	(___fladd@b+1)^0,c
  8613  0022C2  0E00               	movlw	0
  8614  0022C4  6E2E               	movwf	(___fladd@b+2)^0,c
  8615  0022C6  0E00               	movlw	0
  8616  0022C8  6E2F               	movwf	(___fladd@b+3)^0,c
  8617  0022CA                     l6449:
  8618  0022CA  8E2E               	bsf	(___fladd@b+2)^0,7,c
  8619  0022CC  0E00               	movlw	0
  8620  0022CE  6E2F               	movwf	(___fladd@b+3)^0,c
  8621  0022D0  EF72  F011         	goto	l6455
  8622  0022D4                     l6453:
  8623  0022D4  0E00               	movlw	0
  8624  0022D6  6E2C               	movwf	___fladd@b^0,c
  8625  0022D8  0E00               	movlw	0
  8626  0022DA  6E2D               	movwf	(___fladd@b+1)^0,c
  8627  0022DC  0E00               	movlw	0
  8628  0022DE  6E2E               	movwf	(___fladd@b+2)^0,c
  8629  0022E0  0E00               	movlw	0
  8630  0022E2  6E2F               	movwf	(___fladd@b+3)^0,c
  8631  0022E4                     l6455:
  8632  0022E4  5033               	movf	(___fladd@a+3)^0,w,c
  8633  0022E6  0B80               	andlw	128
  8634  0022E8  6E39               	movwf	___fladd@aexp^0,c
  8635  0022EA  5038               	movf	___fladd@signs^0,w,c
  8636  0022EC  1839               	xorwf	___fladd@aexp^0,w,c
  8637  0022EE  B4D8               	btfsc	status,2,c
  8638  0022F0  EF7C  F011         	goto	u6211
  8639  0022F4  EF7E  F011         	goto	u6210
  8640  0022F8                     u6211:
  8641  0022F8  EF7F  F011         	goto	l6461
  8642  0022FC                     u6210:
  8643  0022FC  8C38               	bsf	___fladd@signs^0,6,c
  8644  0022FE                     l6461:
  8645  0022FE  5033               	movf	(___fladd@a+3)^0,w,c
  8646  002300  2433               	addwf	(___fladd@a+3)^0,w,c
  8647  002302  6E39               	movwf	___fladd@aexp^0,c
  8648  002304  AE32               	btfss	(___fladd@a+2)^0,7,c
  8649  002306  EF87  F011         	goto	u6221
  8650  00230A  EF89  F011         	goto	u6220
  8651  00230E                     u6221:
  8652  00230E  EF8A  F011         	goto	l6467
  8653  002312                     u6220:
  8654  002312  8039               	bsf	___fladd@aexp^0,0,c
  8655  002314                     l6467:
  8656  002314  5039               	movf	___fladd@aexp^0,w,c
  8657  002316  B4D8               	btfsc	status,2,c
  8658  002318  EF90  F011         	goto	u6231
  8659  00231C  EF92  F011         	goto	u6230
  8660  002320                     u6231:
  8661  002320  EFA7  F011         	goto	l6477
  8662  002324                     u6230:
  8663  002324  2839               	incf	___fladd@aexp^0,w,c
  8664  002326  A4D8               	btfss	status,2,c
  8665  002328  EF98  F011         	goto	u6241
  8666  00232C  EF9A  F011         	goto	u6240
  8667  002330                     u6241:
  8668  002330  EFA2  F011         	goto	l6473
  8669  002334                     u6240:
  8670  002334  0E00               	movlw	0
  8671  002336  6E30               	movwf	___fladd@a^0,c
  8672  002338  0E00               	movlw	0
  8673  00233A  6E31               	movwf	(___fladd@a+1)^0,c
  8674  00233C  0E00               	movlw	0
  8675  00233E  6E32               	movwf	(___fladd@a+2)^0,c
  8676  002340  0E00               	movlw	0
  8677  002342  6E33               	movwf	(___fladd@a+3)^0,c
  8678  002344                     l6473:
  8679  002344  8E32               	bsf	(___fladd@a+2)^0,7,c
  8680  002346  0E00               	movlw	0
  8681  002348  6E33               	movwf	(___fladd@a+3)^0,c
  8682  00234A  EFAF  F011         	goto	l6479
  8683  00234E                     l6477:
  8684  00234E  0E00               	movlw	0
  8685  002350  6E30               	movwf	___fladd@a^0,c
  8686  002352  0E00               	movlw	0
  8687  002354  6E31               	movwf	(___fladd@a+1)^0,c
  8688  002356  0E00               	movlw	0
  8689  002358  6E32               	movwf	(___fladd@a+2)^0,c
  8690  00235A  0E00               	movlw	0
  8691  00235C  6E33               	movwf	(___fladd@a+3)^0,c
  8692  00235E                     l6479:
  8693  00235E  503A               	movf	___fladd@bexp^0,w,c
  8694  002360  5C39               	subwf	___fladd@aexp^0,w,c
  8695  002362  B0D8               	btfsc	status,0,c
  8696  002364  EFB6  F011         	goto	u6251
  8697  002368  EFB8  F011         	goto	u6250
  8698  00236C                     u6251:
  8699  00236C  EFDF  F011         	goto	l6515
  8700  002370                     u6250:
  8701  002370  AC38               	btfss	___fladd@signs^0,6,c
  8702  002372  EFBD  F011         	goto	u6261
  8703  002376  EFBF  F011         	goto	u6260
  8704  00237A                     u6261:
  8705  00237A  EFC1  F011         	goto	l6485
  8706  00237E                     u6260:
  8707  00237E  0E80               	movlw	128
  8708  002380  1A38               	xorwf	___fladd@signs^0,f,c
  8709  002382                     l6485:
  8710  002382  C03A  F03B         	movff	___fladd@bexp,___fladd@grs
  8711  002386  C039  F03A         	movff	___fladd@aexp,___fladd@bexp
  8712  00238A  C03B  F039         	movff	___fladd@grs,___fladd@aexp
  8713  00238E  C02C  F03B         	movff	___fladd@b,___fladd@grs
  8714  002392  C030  F02C         	movff	___fladd@a,___fladd@b
  8715  002396  C03B  F030         	movff	___fladd@grs,___fladd@a
  8716  00239A  C02D  F03B         	movff	___fladd@b+1,___fladd@grs
  8717  00239E  C031  F02D         	movff	___fladd@a+1,___fladd@b+1
  8718  0023A2  C03B  F031         	movff	___fladd@grs,___fladd@a+1
  8719  0023A6  C02E  F03B         	movff	___fladd@b+2,___fladd@grs
  8720  0023AA  C032  F02E         	movff	___fladd@a+2,___fladd@b+2
  8721  0023AE  C03B  F032         	movff	___fladd@grs,___fladd@a+2
  8722  0023B2  C02F  F03B         	movff	___fladd@b+3,___fladd@grs
  8723  0023B6  C033  F02F         	movff	___fladd@a+3,___fladd@b+3
  8724  0023BA  C03B  F033         	movff	___fladd@grs,___fladd@a+3
  8725  0023BE                     l6515:
  8726  0023BE  0E00               	movlw	0
  8727  0023C0  6E3B               	movwf	___fladd@grs^0,c
  8728  0023C2  503A               	movf	___fladd@bexp^0,w,c
  8729  0023C4  C039  F034         	movff	___fladd@aexp,??___fladd
  8730  0023C8  6A35               	clrf	(??___fladd+1)^0,c
  8731  0023CA  5E34               	subwf	??___fladd^0,f,c
  8732  0023CC  0E00               	movlw	0
  8733  0023CE  5A35               	subwfb	(??___fladd+1)^0,f,c
  8734  0023D0  BE35               	btfsc	(??___fladd+1)^0,7,c
  8735  0023D2  EFF4  F011         	goto	u6271
  8736  0023D6  5035               	movf	(??___fladd+1)^0,w,c
  8737  0023D8  E109               	bnz	u6270
  8738  0023DA  0E1A               	movlw	26
  8739  0023DC  5C34               	subwf	??___fladd^0,w,c
  8740  0023DE  A0D8               	btfss	status,0,c
  8741  0023E0  EFF4  F011         	goto	u6271
  8742  0023E4  EFF6  F011         	goto	u6270
  8743  0023E8                     u6271:
  8744  0023E8  EF2D  F012         	goto	l1277
  8745  0023EC                     u6270:
  8746  0023EC  502C               	movf	___fladd@b^0,w,c
  8747  0023EE  102D               	iorwf	(___fladd@b+1)^0,w,c
  8748  0023F0  102E               	iorwf	(___fladd@b+2)^0,w,c
  8749  0023F2  102F               	iorwf	(___fladd@b+3)^0,w,c
  8750  0023F4  A4D8               	btfss	status,2,c
  8751  0023F6  EFFF  F011         	goto	u6281
  8752  0023FA  EF02  F012         	goto	u6280
  8753  0023FE                     u6281:
  8754  0023FE  0E01               	movlw	1
  8755  002400  EF03  F012         	goto	u6290
  8756  002404                     u6280:
  8757  002404  0E00               	movlw	0
  8758  002406                     u6290:
  8759  002406  6E3B               	movwf	___fladd@grs^0,c
  8760  002408  0E00               	movlw	0
  8761  00240A  6E2C               	movwf	___fladd@b^0,c
  8762  00240C  0E00               	movlw	0
  8763  00240E  6E2D               	movwf	(___fladd@b+1)^0,c
  8764  002410  0E00               	movlw	0
  8765  002412  6E2E               	movwf	(___fladd@b+2)^0,c
  8766  002414  0E00               	movlw	0
  8767  002416  6E2F               	movwf	(___fladd@b+3)^0,c
  8768  002418  C039  F03A         	movff	___fladd@aexp,___fladd@bexp
  8769  00241C  EF36  F012         	goto	l1276
  8770  002420                     l1278:
  8771  002420  A03B               	btfss	___fladd@grs^0,0,c
  8772  002422  EF15  F012         	goto	u6301
  8773  002426  EF17  F012         	goto	u6300
  8774  00242A                     u6301:
  8775  00242A  EF1D  F012         	goto	l6527
  8776  00242E                     u6300:
  8777  00242E  90D8               	bcf	status,0,c
  8778  002430  303B               	rrcf	___fladd@grs^0,w,c
  8779  002432  0901               	iorlw	1
  8780  002434  6E3B               	movwf	___fladd@grs^0,c
  8781  002436  EF1F  F012         	goto	l6529
  8782  00243A                     l6527:
  8783  00243A  90D8               	bcf	status,0,c
  8784  00243C  323B               	rrcf	___fladd@grs^0,f,c
  8785  00243E                     l6529:
  8786  00243E  A02C               	btfss	___fladd@b^0,0,c
  8787  002440  EF24  F012         	goto	u6311
  8788  002444  EF26  F012         	goto	u6310
  8789  002448                     u6311:
  8790  002448  EF27  F012         	goto	l6533
  8791  00244C                     u6310:
  8792  00244C  8E3B               	bsf	___fladd@grs^0,7,c
  8793  00244E                     l6533:
  8794  00244E  342F               	rlcf	(___fladd@b+3)^0,w,c
  8795  002450  322F               	rrcf	(___fladd@b+3)^0,f,c
  8796  002452  322E               	rrcf	(___fladd@b+2)^0,f,c
  8797  002454  322D               	rrcf	(___fladd@b+1)^0,f,c
  8798  002456  322C               	rrcf	___fladd@b^0,f,c
  8799  002458  2A3A               	incf	___fladd@bexp^0,f,c
  8800  00245A                     l1277:
  8801  00245A  5039               	movf	___fladd@aexp^0,w,c
  8802  00245C  5C3A               	subwf	___fladd@bexp^0,w,c
  8803  00245E  A0D8               	btfss	status,0,c
  8804  002460  EF34  F012         	goto	u6321
  8805  002464  EF36  F012         	goto	u6320
  8806  002468                     u6321:
  8807  002468  EF10  F012         	goto	l1278
  8808  00246C                     u6320:
  8809  00246C                     l1276:
  8810  00246C  BC38               	btfsc	___fladd@signs^0,6,c
  8811  00246E  EF3B  F012         	goto	u6331
  8812  002472  EF3D  F012         	goto	u6330
  8813  002476                     u6331:
  8814  002476  EF7D  F012         	goto	l6561
  8815  00247A                     u6330:
  8816  00247A  503A               	movf	___fladd@bexp^0,w,c
  8817  00247C  A4D8               	btfss	status,2,c
  8818  00247E  EF43  F012         	goto	u6341
  8819  002482  EF45  F012         	goto	u6340
  8820  002486                     u6341:
  8821  002486  EF4F  F012         	goto	l6543
  8822  00248A                     u6340:
  8823  00248A  0E00               	movlw	0
  8824  00248C  6E2C               	movwf	?___fladd^0,c
  8825  00248E  0E00               	movlw	0
  8826  002490  6E2D               	movwf	(?___fladd+1)^0,c
  8827  002492  0E00               	movlw	0
  8828  002494  6E2E               	movwf	(?___fladd+2)^0,c
  8829  002496  0E00               	movlw	0
  8830  002498  6E2F               	movwf	(?___fladd+3)^0,c
  8831  00249A  EF9E  F013         	goto	l1285
  8832  00249E                     l6543:
  8833  00249E  5030               	movf	___fladd@a^0,w,c
  8834  0024A0  262C               	addwf	___fladd@b^0,f,c
  8835  0024A2  5031               	movf	(___fladd@a+1)^0,w,c
  8836  0024A4  222D               	addwfc	(___fladd@b+1)^0,f,c
  8837  0024A6  5032               	movf	(___fladd@a+2)^0,w,c
  8838  0024A8  222E               	addwfc	(___fladd@b+2)^0,f,c
  8839  0024AA  5033               	movf	(___fladd@a+3)^0,w,c
  8840  0024AC  222F               	addwfc	(___fladd@b+3)^0,f,c
  8841  0024AE  A02F               	btfss	(___fladd@b+3)^0,0,c
  8842  0024B0  EF5C  F012         	goto	u6351
  8843  0024B4  EF5E  F012         	goto	u6350
  8844  0024B8                     u6351:
  8845  0024B8  EF0A  F013         	goto	l6597
  8846  0024BC                     u6350:
  8847  0024BC  A03B               	btfss	___fladd@grs^0,0,c
  8848  0024BE  EF63  F012         	goto	u6361
  8849  0024C2  EF65  F012         	goto	u6360
  8850  0024C6                     u6361:
  8851  0024C6  EF6B  F012         	goto	l6551
  8852  0024CA                     u6360:
  8853  0024CA  90D8               	bcf	status,0,c
  8854  0024CC  303B               	rrcf	___fladd@grs^0,w,c
  8855  0024CE  0901               	iorlw	1
  8856  0024D0  6E3B               	movwf	___fladd@grs^0,c
  8857  0024D2  EF6D  F012         	goto	l6553
  8858  0024D6                     l6551:
  8859  0024D6  90D8               	bcf	status,0,c
  8860  0024D8  323B               	rrcf	___fladd@grs^0,f,c
  8861  0024DA                     l6553:
  8862  0024DA  A02C               	btfss	___fladd@b^0,0,c
  8863  0024DC  EF72  F012         	goto	u6371
  8864  0024E0  EF74  F012         	goto	u6370
  8865  0024E4                     u6371:
  8866  0024E4  EF75  F012         	goto	l6557
  8867  0024E8                     u6370:
  8868  0024E8  8E3B               	bsf	___fladd@grs^0,7,c
  8869  0024EA                     l6557:
  8870  0024EA  342F               	rlcf	(___fladd@b+3)^0,w,c
  8871  0024EC  322F               	rrcf	(___fladd@b+3)^0,f,c
  8872  0024EE  322E               	rrcf	(___fladd@b+2)^0,f,c
  8873  0024F0  322D               	rrcf	(___fladd@b+1)^0,f,c
  8874  0024F2  322C               	rrcf	___fladd@b^0,f,c
  8875  0024F4  2A3A               	incf	___fladd@bexp^0,f,c
  8876  0024F6  EF0A  F013         	goto	l6597
  8877  0024FA                     l6561:
  8878  0024FA  5030               	movf	___fladd@a^0,w,c
  8879  0024FC  5C2C               	subwf	___fladd@b^0,w,c
  8880  0024FE  5031               	movf	(___fladd@a+1)^0,w,c
  8881  002500  582D               	subwfb	(___fladd@b+1)^0,w,c
  8882  002502  5032               	movf	(___fladd@a+2)^0,w,c
  8883  002504  582E               	subwfb	(___fladd@b+2)^0,w,c
  8884  002506  502F               	movf	(___fladd@b+3)^0,w,c
  8885  002508  0A80               	xorlw	128
  8886  00250A  6E34               	movwf	??___fladd^0,c
  8887  00250C  5033               	movf	(___fladd@a+3)^0,w,c
  8888  00250E  0A80               	xorlw	128
  8889  002510  5834               	subwfb	??___fladd^0,w,c
  8890  002512  B0D8               	btfsc	status,0,c
  8891  002514  EF8E  F012         	goto	u6381
  8892  002518  EF90  F012         	goto	u6380
  8893  00251C                     u6381:
  8894  00251C  EFBB  F012         	goto	l6571
  8895  002520                     u6380:
  8896  002520  502C               	movf	___fladd@b^0,w,c
  8897  002522  5C30               	subwf	___fladd@a^0,w,c
  8898  002524  6E34               	movwf	??___fladd^0,c
  8899  002526  502D               	movf	(___fladd@b+1)^0,w,c
  8900  002528  5831               	subwfb	(___fladd@a+1)^0,w,c
  8901  00252A  6E35               	movwf	(??___fladd+1)^0,c
  8902  00252C  502E               	movf	(___fladd@b+2)^0,w,c
  8903  00252E  5832               	subwfb	(___fladd@a+2)^0,w,c
  8904  002530  6E36               	movwf	(??___fladd+2)^0,c
  8905  002532  502F               	movf	(___fladd@b+3)^0,w,c
  8906  002534  5833               	subwfb	(___fladd@a+3)^0,w,c
  8907  002536  6E37               	movwf	(??___fladd+3)^0,c
  8908  002538  0EFF               	movlw	255
  8909  00253A  2434               	addwf	??___fladd^0,w,c
  8910  00253C  6E2C               	movwf	___fladd@b^0,c
  8911  00253E  0EFF               	movlw	255
  8912  002540  2035               	addwfc	(??___fladd+1)^0,w,c
  8913  002542  6E2D               	movwf	(___fladd@b+1)^0,c
  8914  002544  0EFF               	movlw	255
  8915  002546  2036               	addwfc	(??___fladd+2)^0,w,c
  8916  002548  6E2E               	movwf	(___fladd@b+2)^0,c
  8917  00254A  0EFF               	movlw	255
  8918  00254C  2037               	addwfc	(??___fladd+3)^0,w,c
  8919  00254E  6E2F               	movwf	(___fladd@b+3)^0,c
  8920  002550  0E80               	movlw	128
  8921  002552  1A38               	xorwf	___fladd@signs^0,f,c
  8922  002554  6C3B               	negf	___fladd@grs^0,c
  8923  002556  503B               	movf	___fladd@grs^0,w,c
  8924  002558  A4D8               	btfss	status,2,c
  8925  00255A  EFB1  F012         	goto	u6391
  8926  00255E  EFB3  F012         	goto	u6390
  8927  002562                     u6391:
  8928  002562  EFC3  F012         	goto	l1293
  8929  002566                     u6390:
  8930  002566  0E01               	movlw	1
  8931  002568  262C               	addwf	___fladd@b^0,f,c
  8932  00256A  0E00               	movlw	0
  8933  00256C  222D               	addwfc	(___fladd@b+1)^0,f,c
  8934  00256E  222E               	addwfc	(___fladd@b+2)^0,f,c
  8935  002570  222F               	addwfc	(___fladd@b+3)^0,f,c
  8936  002572  EFC3  F012         	goto	l1293
  8937  002576                     l6571:
  8938  002576  5030               	movf	___fladd@a^0,w,c
  8939  002578  5E2C               	subwf	___fladd@b^0,f,c
  8940  00257A  5031               	movf	(___fladd@a+1)^0,w,c
  8941  00257C  5A2D               	subwfb	(___fladd@b+1)^0,f,c
  8942  00257E  5032               	movf	(___fladd@a+2)^0,w,c
  8943  002580  5A2E               	subwfb	(___fladd@b+2)^0,f,c
  8944  002582  5033               	movf	(___fladd@a+3)^0,w,c
  8945  002584  5A2F               	subwfb	(___fladd@b+3)^0,f,c
  8946  002586                     l1293:
  8947  002586  502C               	movf	___fladd@b^0,w,c
  8948  002588  102D               	iorwf	(___fladd@b+1)^0,w,c
  8949  00258A  102E               	iorwf	(___fladd@b+2)^0,w,c
  8950  00258C  102F               	iorwf	(___fladd@b+3)^0,w,c
  8951  00258E  A4D8               	btfss	status,2,c
  8952  002590  EFCC  F012         	goto	u6401
  8953  002594  EFCE  F012         	goto	u6400
  8954  002598                     u6401:
  8955  002598  EF03  F013         	goto	l6595
  8956  00259C                     u6400:
  8957  00259C  503B               	movf	___fladd@grs^0,w,c
  8958  00259E  A4D8               	btfss	status,2,c
  8959  0025A0  EFD4  F012         	goto	u6411
  8960  0025A4  EFD6  F012         	goto	u6410
  8961  0025A8                     u6411:
  8962  0025A8  EF03  F013         	goto	l6595
  8963  0025AC                     u6410:
  8964  0025AC  0E00               	movlw	0
  8965  0025AE  6E2C               	movwf	?___fladd^0,c
  8966  0025B0  0E00               	movlw	0
  8967  0025B2  6E2D               	movwf	(?___fladd+1)^0,c
  8968  0025B4  0E00               	movlw	0
  8969  0025B6  6E2E               	movwf	(?___fladd+2)^0,c
  8970  0025B8  0E00               	movlw	0
  8971  0025BA  6E2F               	movwf	(?___fladd+3)^0,c
  8972  0025BC  EF9E  F013         	goto	l1285
  8973  0025C0                     l6579:
  8974  0025C0  90D8               	bcf	status,0,c
  8975  0025C2  362C               	rlcf	___fladd@b^0,f,c
  8976  0025C4  362D               	rlcf	(___fladd@b+1)^0,f,c
  8977  0025C6  362E               	rlcf	(___fladd@b+2)^0,f,c
  8978  0025C8  362F               	rlcf	(___fladd@b+3)^0,f,c
  8979  0025CA  AE3B               	btfss	___fladd@grs^0,7,c
  8980  0025CC  EFEA  F012         	goto	u6421
  8981  0025D0  EFEC  F012         	goto	u6420
  8982  0025D4                     u6421:
  8983  0025D4  EFED  F012         	goto	l6585
  8984  0025D8                     u6420:
  8985  0025D8  802C               	bsf	___fladd@b^0,0,c
  8986  0025DA                     l6585:
  8987  0025DA  A03B               	btfss	___fladd@grs^0,0,c
  8988  0025DC  EFF2  F012         	goto	u6431
  8989  0025E0  EFF4  F012         	goto	u6430
  8990  0025E4                     u6431:
  8991  0025E4  EFF8  F012         	goto	l6589
  8992  0025E8                     u6430:
  8993  0025E8  80D8               	bsf	status,0,c
  8994  0025EA  363B               	rlcf	___fladd@grs^0,f,c
  8995  0025EC  EFFA  F012         	goto	l6591
  8996  0025F0                     l6589:
  8997  0025F0  90D8               	bcf	status,0,c
  8998  0025F2  363B               	rlcf	___fladd@grs^0,f,c
  8999  0025F4                     l6591:
  9000  0025F4  503A               	movf	___fladd@bexp^0,w,c
  9001  0025F6  B4D8               	btfsc	status,2,c
  9002  0025F8  EF00  F013         	goto	u6441
  9003  0025FC  EF02  F013         	goto	u6440
  9004  002600                     u6441:
  9005  002600  EF03  F013         	goto	l6595
  9006  002604                     u6440:
  9007  002604  063A               	decf	___fladd@bexp^0,f,c
  9008  002606                     l6595:
  9009  002606  AE2E               	btfss	(___fladd@b+2)^0,7,c
  9010  002608  EF08  F013         	goto	u6451
  9011  00260C  EF0A  F013         	goto	u6450
  9012  002610                     u6451:
  9013  002610  EFE0  F012         	goto	l6579
  9014  002614                     u6450:
  9015  002614                     l6597:
  9016  002614  0E00               	movlw	0
  9017  002616  6E39               	movwf	___fladd@aexp^0,c
  9018  002618  AE3B               	btfss	___fladd@grs^0,7,c
  9019  00261A  EF11  F013         	goto	u6461
  9020  00261E  EF13  F013         	goto	u6460
  9021  002622                     u6461:
  9022  002622  EF2B  F013         	goto	l1302
  9023  002626                     u6460:
  9024  002626  C03B  F034         	movff	___fladd@grs,??___fladd
  9025  00262A  0E7F               	movlw	127
  9026  00262C  1634               	andwf	??___fladd^0,f,c
  9027  00262E  B4D8               	btfsc	status,2,c
  9028  002630  EF1C  F013         	goto	u6471
  9029  002634  EF1E  F013         	goto	u6470
  9030  002638                     u6471:
  9031  002638  EF22  F013         	goto	l1303
  9032  00263C                     u6470:
  9033  00263C                     l6603:
  9034  00263C  0E01               	movlw	1
  9035  00263E  6E39               	movwf	___fladd@aexp^0,c
  9036  002640  EF2B  F013         	goto	l1302
  9037  002644                     l1303:
  9038  002644  A02C               	btfss	___fladd@b^0,0,c
  9039  002646  EF27  F013         	goto	u6481
  9040  00264A  EF29  F013         	goto	u6480
  9041  00264E                     u6481:
  9042  00264E  EF2B  F013         	goto	l1302
  9043  002652                     u6480:
  9044  002652  EF1E  F013         	goto	l6603
  9045  002656                     l1302:
  9046  002656  5039               	movf	___fladd@aexp^0,w,c
  9047  002658  B4D8               	btfsc	status,2,c
  9048  00265A  EF31  F013         	goto	u6491
  9049  00265E  EF33  F013         	goto	u6490
  9050  002662                     u6491:
  9051  002662  EF5E  F013         	goto	l6615
  9052  002666                     u6490:
  9053  002666  0E01               	movlw	1
  9054  002668  262C               	addwf	___fladd@b^0,f,c
  9055  00266A  0E00               	movlw	0
  9056  00266C  222D               	addwfc	(___fladd@b+1)^0,f,c
  9057  00266E  222E               	addwfc	(___fladd@b+2)^0,f,c
  9058  002670  222F               	addwfc	(___fladd@b+3)^0,f,c
  9059  002672  A02F               	btfss	(___fladd@b+3)^0,0,c
  9060  002674  EF3E  F013         	goto	u6501
  9061  002678  EF40  F013         	goto	u6500
  9062  00267C                     u6501:
  9063  00267C  EF5E  F013         	goto	l6615
  9064  002680                     u6500:
  9065  002680  C02C  F034         	movff	___fladd@b,??___fladd
  9066  002684  C02D  F035         	movff	___fladd@b+1,??___fladd+1
  9067  002688  C02E  F036         	movff	___fladd@b+2,??___fladd+2
  9068  00268C  C02F  F037         	movff	___fladd@b+3,??___fladd+3
  9069  002690  3437               	rlcf	(??___fladd+3)^0,w,c
  9070  002692  3237               	rrcf	(??___fladd+3)^0,f,c
  9071  002694  3236               	rrcf	(??___fladd+2)^0,f,c
  9072  002696  3235               	rrcf	(??___fladd+1)^0,f,c
  9073  002698  3234               	rrcf	??___fladd^0,f,c
  9074  00269A  C034  F02C         	movff	??___fladd,___fladd@b
  9075  00269E  C035  F02D         	movff	??___fladd+1,___fladd@b+1
  9076  0026A2  C036  F02E         	movff	??___fladd+2,___fladd@b+2
  9077  0026A6  C037  F02F         	movff	??___fladd+3,___fladd@b+3
  9078  0026AA  283A               	incf	___fladd@bexp^0,w,c
  9079  0026AC  B4D8               	btfsc	status,2,c
  9080  0026AE  EF5B  F013         	goto	u6511
  9081  0026B2  EF5D  F013         	goto	u6510
  9082  0026B6                     u6511:
  9083  0026B6  EF5E  F013         	goto	l6615
  9084  0026BA                     u6510:
  9085  0026BA  2A3A               	incf	___fladd@bexp^0,f,c
  9086  0026BC                     l6615:
  9087  0026BC  283A               	incf	___fladd@bexp^0,w,c
  9088  0026BE  B4D8               	btfsc	status,2,c
  9089  0026C0  EF64  F013         	goto	u6521
  9090  0026C4  EF66  F013         	goto	u6520
  9091  0026C8                     u6521:
  9092  0026C8  EF6E  F013         	goto	l6619
  9093  0026CC                     u6520:
  9094  0026CC  503A               	movf	___fladd@bexp^0,w,c
  9095  0026CE  A4D8               	btfss	status,2,c
  9096  0026D0  EF6C  F013         	goto	u6531
  9097  0026D4  EF6E  F013         	goto	u6530
  9098  0026D8                     u6531:
  9099  0026D8  EF80  F013         	goto	l6623
  9100  0026DC                     u6530:
  9101  0026DC                     l6619:
  9102  0026DC  0E00               	movlw	0
  9103  0026DE  6E2C               	movwf	___fladd@b^0,c
  9104  0026E0  0E00               	movlw	0
  9105  0026E2  6E2D               	movwf	(___fladd@b+1)^0,c
  9106  0026E4  0E00               	movlw	0
  9107  0026E6  6E2E               	movwf	(___fladd@b+2)^0,c
  9108  0026E8  0E00               	movlw	0
  9109  0026EA  6E2F               	movwf	(___fladd@b+3)^0,c
  9110  0026EC  503A               	movf	___fladd@bexp^0,w,c
  9111  0026EE  A4D8               	btfss	status,2,c
  9112  0026F0  EF7C  F013         	goto	u6541
  9113  0026F4  EF7E  F013         	goto	u6540
  9114  0026F8                     u6541:
  9115  0026F8  EF80  F013         	goto	l6623
  9116  0026FC                     u6540:
  9117  0026FC  0E00               	movlw	0
  9118  0026FE  6E38               	movwf	___fladd@signs^0,c
  9119  002700                     l6623:
  9120  002700  A03A               	btfss	___fladd@bexp^0,0,c
  9121  002702  EF85  F013         	goto	u6551
  9122  002706  EF87  F013         	goto	u6550
  9123  00270A                     u6551:
  9124  00270A  EF8A  F013         	goto	l6627
  9125  00270E                     u6550:
  9126  00270E  8E2E               	bsf	(___fladd@b+2)^0,7,c
  9127  002710  EF8B  F013         	goto	l6629
  9128  002714                     l6627:
  9129  002714  9E2E               	bcf	(___fladd@b+2)^0,7,c
  9130  002716                     l6629:
  9131  002716  90D8               	bcf	status,0,c
  9132  002718  303A               	rrcf	___fladd@bexp^0,w,c
  9133  00271A  6E2F               	movwf	(___fladd@b+3)^0,c
  9134  00271C  AE38               	btfss	___fladd@signs^0,7,c
  9135  00271E  EF93  F013         	goto	u6561
  9136  002722  EF95  F013         	goto	u6560
  9137  002726                     u6561:
  9138  002726  EF96  F013         	goto	l6635
  9139  00272A                     u6560:
  9140  00272A  8E2F               	bsf	(___fladd@b+3)^0,7,c
  9141  00272C                     l6635:
  9142  00272C  C02C  F02C         	movff	___fladd@b,?___fladd
  9143  002730  C02D  F02D         	movff	___fladd@b+1,?___fladd+1
  9144  002734  C02E  F02E         	movff	___fladd@b+2,?___fladd+2
  9145  002738  C02F  F02F         	movff	___fladd@b+3,?___fladd+3
  9146  00273C                     l1285:
  9147  00273C  0012               	return		;funcret
  9148  00273E                     __end_of___fladd:
  9149                           	callstack 0
  9150                           
  9151 ;; *************** function _TLV493_Read *****************
  9152 ;; Defined at:
  9153 ;;		line 30 in file "tlv493.c"
  9154 ;; Parameters:    Size  Location     Type
  9155 ;;		None
  9156 ;; Auto vars:     Size  Location     Type
  9157 ;;		None
  9158 ;; Return value:  Size  Location     Type
  9159 ;;                  1    wreg      void 
  9160 ;; Registers used:
  9161 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9162 ;; Tracked objects:
  9163 ;;		On entry : 0/0
  9164 ;;		On exit  : 0/0
  9165 ;;		Unchanged: 0/0
  9166 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9167 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9168 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9169 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9170 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9171 ;;Total ram usage:        0 bytes
  9172 ;; Hardware stack levels used: 1
  9173 ;; Hardware stack levels required when called: 13
  9174 ;; This function calls:
  9175 ;;		_I2C_ReadNBytes
  9176 ;; This function is called by:
  9177 ;;		_TLV493_X_GetValue
  9178 ;;		_TLV493_Y_GetValue
  9179 ;;		_TLV493_Z_GetValue
  9180 ;;		_TLV493_Temp_GetValue
  9181 ;; This function uses a non-reentrant model
  9182 ;;
  9183                           
  9184                           	psect	text36
  9185  004C7C                     __ptext36:
  9186                           	callstack 0
  9187  004C7C                     _TLV493_Read:
  9188                           	callstack 16
  9189  004C7C                     
  9190                           ;tlv493.c: 32:     I2C_ReadNBytes(0x5E, &readBuffer, 7);
  9191  004C7C  0E68               	movlw	low _readBuffer
  9192  004C7E  6E16               	movwf	I2C_ReadNBytes@data^0,c
  9193  004C80  0E01               	movlw	high _readBuffer
  9194  004C82  6E17               	movwf	(I2C_ReadNBytes@data+1)^0,c
  9195  004C84  0E00               	movlw	0
  9196  004C86  6E19               	movwf	(I2C_ReadNBytes@len+1)^0,c
  9197  004C88  0E07               	movlw	7
  9198  004C8A  6E18               	movwf	I2C_ReadNBytes@len^0,c
  9199  004C8C  0E5E               	movlw	94
  9200  004C8E  EC1C  F024         	call	_I2C_ReadNBytes
  9201  004C92  0012               	return		;funcret
  9202  004C94                     __end_of_TLV493_Read:
  9203                           	callstack 0
  9204                           
  9205 ;; *************** function _TLV493_Init *****************
  9206 ;; Defined at:
  9207 ;;		line 14 in file "tlv493.c"
  9208 ;; Parameters:    Size  Location     Type
  9209 ;;		None
  9210 ;; Auto vars:     Size  Location     Type
  9211 ;;		None
  9212 ;; Return value:  Size  Location     Type
  9213 ;;                  1    wreg      void 
  9214 ;; Registers used:
  9215 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9216 ;; Tracked objects:
  9217 ;;		On entry : 0/0
  9218 ;;		On exit  : 0/0
  9219 ;;		Unchanged: 0/0
  9220 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9221 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9222 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9223 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9224 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9225 ;;Total ram usage:        6 bytes
  9226 ;; Hardware stack levels used: 1
  9227 ;; Hardware stack levels required when called: 13
  9228 ;; This function calls:
  9229 ;;		_I2C_ReadNBytes
  9230 ;;		_I2C_WriteNBytes
  9231 ;; This function is called by:
  9232 ;;		_main
  9233 ;; This function uses a non-reentrant model
  9234 ;;
  9235                           
  9236                           	psect	text37
  9237  003A46                     __ptext37:
  9238                           	callstack 0
  9239  003A46                     _TLV493_Init:
  9240                           	callstack 17
  9241  003A46                     
  9242                           ;tlv493.c: 15:     _delay((unsigned long)((100)*(8000000/4000.0)));
  9243  003A46  0E02               	movlw	2
  9244  003A48  6E1C               	movwf	(??_TLV493_Init+1)^0,c
  9245  003A4A  0E04               	movlw	4
  9246  003A4C  6E1B               	movwf	??_TLV493_Init^0,c
  9247  003A4E  0EBA               	movlw	186
  9248  003A50                     u8507:
  9249  003A50  2EE8               	decfsz	wreg,f,c
  9250  003A52  D7FE               	bra	u8507
  9251  003A54  2E1B               	decfsz	??_TLV493_Init^0,f,c
  9252  003A56  D7FC               	bra	u8507
  9253  003A58  2E1C               	decfsz	(??_TLV493_Init+1)^0,f,c
  9254  003A5A  D7FA               	bra	u8507
  9255  003A5C  F000 F000          	nop2	
  9256  003A60                     
  9257                           ;tlv493.c: 17:     I2C_ReadNBytes(0x5E, &readBuffer, 10);
  9258  003A60  0E68               	movlw	low _readBuffer
  9259  003A62  6E16               	movwf	I2C_ReadNBytes@data^0,c
  9260  003A64  0E01               	movlw	high _readBuffer
  9261  003A66  6E17               	movwf	(I2C_ReadNBytes@data+1)^0,c
  9262  003A68  0E00               	movlw	0
  9263  003A6A  6E19               	movwf	(I2C_ReadNBytes@len+1)^0,c
  9264  003A6C  0E0A               	movlw	10
  9265  003A6E  6E18               	movwf	I2C_ReadNBytes@len^0,c
  9266  003A70  0E5E               	movlw	94
  9267  003A72  EC1C  F024         	call	_I2C_ReadNBytes
  9268  003A76                     
  9269                           ;tlv493.c: 19:     writeBuffer[0] = 0x00;
  9270  003A76  0E00               	movlw	0
  9271  003A78  0101               	movlb	1	; () banked
  9272  003A7A  6F72               	movwf	_writeBuffer& (0+255),b
  9273  003A7C                     
  9274                           ; BSR set to: 1
  9275                           ;tlv493.c: 20:     writeBuffer[1] = (readBuffer[7] && 0x71);
  9276  003A7C  0E00               	movlw	0
  9277  003A7E  6E1D               	movwf	_TLV493_Init$1548^0,c
  9278  003A80                     
  9279                           ; BSR set to: 1
  9280  003A80  516F               	movf	(_readBuffer+7)& (0+255),w,b
  9281  003A82  B4D8               	btfsc	status,2,c
  9282  003A84  EF46  F01D         	goto	u5841
  9283  003A88  EF48  F01D         	goto	u5840
  9284  003A8C                     u5841:
  9285  003A8C  EF4A  F01D         	goto	l6013
  9286  003A90                     u5840:
  9287  003A90                     
  9288                           ; BSR set to: 1
  9289  003A90  0E01               	movlw	1
  9290  003A92  6E1D               	movwf	_TLV493_Init$1548^0,c
  9291  003A94                     l6013:
  9292                           
  9293                           ; BSR set to: 1
  9294  003A94  C01D  F173         	movff	_TLV493_Init$1548,_writeBuffer+1
  9295                           
  9296                           ;tlv493.c: 21:     writeBuffer[1] = (writeBuffer[1] || 0x00);
  9297  003A98  0E01               	movlw	1
  9298  003A9A  6E1E               	movwf	_TLV493_Init$1549^0,c
  9299  003A9C  5173               	movf	(_writeBuffer+1)& (0+255),w,b
  9300  003A9E  A4D8               	btfss	status,2,c
  9301  003AA0  EF54  F01D         	goto	u5851
  9302  003AA4  EF56  F01D         	goto	u5850
  9303  003AA8                     u5851:
  9304  003AA8  EF58  F01D         	goto	l6017
  9305  003AAC                     u5850:
  9306  003AAC                     
  9307                           ; BSR set to: 1
  9308  003AAC  0E00               	movlw	0
  9309  003AAE  6E1E               	movwf	_TLV493_Init$1549^0,c
  9310  003AB0                     l6017:
  9311                           
  9312                           ; BSR set to: 1
  9313  003AB0  C01E  F173         	movff	_TLV493_Init$1549,_writeBuffer+1
  9314  003AB4                     
  9315                           ; BSR set to: 1
  9316                           ;tlv493.c: 22:     writeBuffer[2] = readBuffer[8];
  9317  003AB4  C170  F174         	movff	_readBuffer+8,_writeBuffer+2
  9318                           
  9319                           ;tlv493.c: 23:     writeBuffer[3] = (readBuffer[9] && 0x1F);
  9320  003AB8  0E00               	movlw	0
  9321  003ABA  6E1F               	movwf	_TLV493_Init$1550^0,c
  9322  003ABC  5171               	movf	(_readBuffer+9)& (0+255),w,b
  9323  003ABE  B4D8               	btfsc	status,2,c
  9324  003AC0  EF64  F01D         	goto	u5861
  9325  003AC4  EF66  F01D         	goto	u5860
  9326  003AC8                     u5861:
  9327  003AC8  EF68  F01D         	goto	l6023
  9328  003ACC                     u5860:
  9329  003ACC                     
  9330                           ; BSR set to: 1
  9331  003ACC  0E01               	movlw	1
  9332  003ACE  6E1F               	movwf	_TLV493_Init$1550^0,c
  9333  003AD0                     l6023:
  9334                           
  9335                           ; BSR set to: 1
  9336  003AD0  C01F  F175         	movff	_TLV493_Init$1550,_writeBuffer+3
  9337                           
  9338                           ;tlv493.c: 24:     writeBuffer[3] = (writeBuffer[1] || 0x00);
  9339  003AD4  0E01               	movlw	1
  9340  003AD6  6E20               	movwf	_TLV493_Init$1551^0,c
  9341  003AD8  5173               	movf	(_writeBuffer+1)& (0+255),w,b
  9342  003ADA  A4D8               	btfss	status,2,c
  9343  003ADC  EF72  F01D         	goto	u5871
  9344  003AE0  EF74  F01D         	goto	u5870
  9345  003AE4                     u5871:
  9346  003AE4  EF76  F01D         	goto	l6027
  9347  003AE8                     u5870:
  9348  003AE8                     
  9349                           ; BSR set to: 1
  9350  003AE8  0E00               	movlw	0
  9351  003AEA  6E20               	movwf	_TLV493_Init$1551^0,c
  9352  003AEC                     l6027:
  9353                           
  9354                           ; BSR set to: 1
  9355  003AEC  C020  F175         	movff	_TLV493_Init$1551,_writeBuffer+3
  9356  003AF0                     
  9357                           ; BSR set to: 1
  9358                           ;tlv493.c: 26:     I2C_WriteNBytes(0x5E, &writeBuffer, 10);
  9359  003AF0  0E72               	movlw	low _writeBuffer
  9360  003AF2  6E16               	movwf	I2C_WriteNBytes@data^0,c
  9361  003AF4  0E01               	movlw	high _writeBuffer
  9362  003AF6  6E17               	movwf	(I2C_WriteNBytes@data+1)^0,c
  9363  003AF8  0E00               	movlw	0
  9364  003AFA  6E19               	movwf	(I2C_WriteNBytes@len+1)^0,c
  9365  003AFC  0E0A               	movlw	10
  9366  003AFE  6E18               	movwf	I2C_WriteNBytes@len^0,c
  9367  003B00  0E5E               	movlw	94
  9368  003B02  EC77  F023         	call	_I2C_WriteNBytes
  9369  003B06                     
  9370                           ;tlv493.c: 27:     _delay((unsigned long)((100)*(8000000/4000.0)));
  9371  003B06  0E02               	movlw	2
  9372  003B08  6E1C               	movwf	(??_TLV493_Init+1)^0,c
  9373  003B0A  0E04               	movlw	4
  9374  003B0C  6E1B               	movwf	??_TLV493_Init^0,c
  9375  003B0E  0EBA               	movlw	186
  9376  003B10                     u8517:
  9377  003B10  2EE8               	decfsz	wreg,f,c
  9378  003B12  D7FE               	bra	u8517
  9379  003B14  2E1B               	decfsz	??_TLV493_Init^0,f,c
  9380  003B16  D7FC               	bra	u8517
  9381  003B18  2E1C               	decfsz	(??_TLV493_Init+1)^0,f,c
  9382  003B1A  D7FA               	bra	u8517
  9383  003B1C  F000 F000          	nop2	
  9384  003B20  0012               	return		;funcret
  9385  003B22                     __end_of_TLV493_Init:
  9386                           	callstack 0
  9387                           
  9388 ;; *************** function _I2C_WriteNBytes *****************
  9389 ;; Defined at:
  9390 ;;		line 111 in file "mcc_generated_files/examples/i2c_master_example.c"
  9391 ;; Parameters:    Size  Location     Type
  9392 ;;  address         1    wreg     unsigned char 
  9393 ;;  data            2   21[COMRAM] PTR unsigned char 
  9394 ;;		 -> writeBuffer(10), 
  9395 ;;  len             2   23[COMRAM] unsigned int 
  9396 ;; Auto vars:     Size  Location     Type
  9397 ;;  address         1   25[COMRAM] unsigned char 
  9398 ;; Return value:  Size  Location     Type
  9399 ;;                  1    wreg      void 
  9400 ;; Registers used:
  9401 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9402 ;; Tracked objects:
  9403 ;;		On entry : 0/0
  9404 ;;		On exit  : 0/0
  9405 ;;		Unchanged: 0/0
  9406 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9407 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9408 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9409 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9410 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9411 ;;Total ram usage:        5 bytes
  9412 ;; Hardware stack levels used: 1
  9413 ;; Hardware stack levels required when called: 12
  9414 ;; This function calls:
  9415 ;;		_I2C_Close
  9416 ;;		_I2C_MasterWrite
  9417 ;;		_I2C_Open
  9418 ;;		_I2C_SetAddressNackCallback
  9419 ;;		_I2C_SetBuffer
  9420 ;; This function is called by:
  9421 ;;		_TLV493_Init
  9422 ;; This function uses a non-reentrant model
  9423 ;;
  9424                           
  9425                           	psect	text38
  9426  0046EE                     __ptext38:
  9427                           	callstack 0
  9428  0046EE                     _I2C_WriteNBytes:
  9429                           	callstack 17
  9430                           
  9431                           ;incstack = 0
  9432                           ;I2C_WriteNBytes@address stored from wreg
  9433  0046EE  6E1A               	movwf	I2C_WriteNBytes@address^0,c
  9434  0046F0                     l5823:
  9435  0046F0  501A               	movf	I2C_WriteNBytes@address^0,w,c
  9436  0046F2  EC7E  F021         	call	_I2C_Open
  9437  0046F6  0900               	iorlw	0
  9438  0046F8  B4D8               	btfsc	status,2,c
  9439  0046FA  EF81  F023         	goto	u5611
  9440  0046FE  EF83  F023         	goto	u5610
  9441  004702                     u5611:
  9442  004702  EF78  F023         	goto	l5823
  9443  004706                     u5610:
  9444  004706                     
  9445                           ;mcc_generated_files/examples/i2c_master_example.c: 114:     I2C_SetBuffer(data,len);
  9446  004706  C016  F005         	movff	I2C_WriteNBytes@data,I2C_SetBuffer@buffer
  9447  00470A  C017  F006         	movff	I2C_WriteNBytes@data+1,I2C_SetBuffer@buffer+1
  9448  00470E  C018  F007         	movff	I2C_WriteNBytes@len,I2C_SetBuffer@bufferSize
  9449  004712  C019  F008         	movff	I2C_WriteNBytes@len+1,I2C_SetBuffer@bufferSize+1
  9450  004716  EC0C  F026         	call	_I2C_SetBuffer	;wreg free
  9451  00471A                     
  9452                           ;mcc_generated_files/examples/i2c_master_example.c: 115:     I2C_SetAddressNackCallback(
      +                          ((void*)0),((void*)0));
  9453  00471A  0E00               	movlw	0
  9454  00471C  6E0A               	movwf	I2C_SetAddressNackCallback@cb^0,c
  9455  00471E  0E00               	movlw	0
  9456  004720  6E0B               	movwf	(I2C_SetAddressNackCallback@cb+1)^0,c
  9457  004722  0E00               	movlw	0
  9458  004724  6E0C               	movwf	I2C_SetAddressNackCallback@ptr^0,c
  9459  004726  0E00               	movlw	0
  9460  004728  6E0D               	movwf	(I2C_SetAddressNackCallback@ptr+1)^0,c
  9461  00472A  EC4A  F026         	call	_I2C_SetAddressNackCallback	;wreg free
  9462  00472E                     
  9463                           ;mcc_generated_files/examples/i2c_master_example.c: 116:     I2C_MasterWrite();
  9464  00472E  ECCE  F026         	call	_I2C_MasterWrite	;wreg free
  9465  004732                     l5831:
  9466  004732  ECB9  F025         	call	_I2C_Close	;wreg free
  9467  004736  06E8               	decf	wreg,f,c
  9468  004738  B4D8               	btfsc	status,2,c
  9469  00473A  EFA1  F023         	goto	u5621
  9470  00473E  EFA3  F023         	goto	u5620
  9471  004742                     u5621:
  9472  004742  EF99  F023         	goto	l5831
  9473  004746                     u5620:
  9474  004746  0012               	return		;funcret
  9475  004748                     __end_of_I2C_WriteNBytes:
  9476                           	callstack 0
  9477                           
  9478 ;; *************** function _I2C_SetAddressNackCallback *****************
  9479 ;; Defined at:
  9480 ;;		line 283 in file "mcc_generated_files/i2c_master.c"
  9481 ;; Parameters:    Size  Location     Type
  9482 ;;  cb              2    9[COMRAM] PTR FTN(PTR void ,)enum 
  9483 ;;		 -> Absolute function(1), 
  9484 ;;  ptr             2   11[COMRAM] PTR void 
  9485 ;;		 -> NULL(0), 
  9486 ;; Auto vars:     Size  Location     Type
  9487 ;;		None
  9488 ;; Return value:  Size  Location     Type
  9489 ;;                  1    wreg      void 
  9490 ;; Registers used:
  9491 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9492 ;; Tracked objects:
  9493 ;;		On entry : 0/0
  9494 ;;		On exit  : 0/0
  9495 ;;		Unchanged: 0/0
  9496 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9497 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9498 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9499 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9500 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9501 ;;Total ram usage:        4 bytes
  9502 ;; Hardware stack levels used: 1
  9503 ;; Hardware stack levels required when called: 5
  9504 ;; This function calls:
  9505 ;;		_I2C_SetCallback
  9506 ;; This function is called by:
  9507 ;;		_I2C_WriteNBytes
  9508 ;;		_I2C_Read1ByteRegister
  9509 ;;		_I2C_Read2ByteRegister
  9510 ;;		_I2C_Write1ByteRegister
  9511 ;;		_I2C_Write2ByteRegister
  9512 ;;		_I2C_ReadDataBlock
  9513 ;; This function uses a non-reentrant model
  9514 ;;
  9515                           
  9516                           	psect	text39
  9517  004C94                     __ptext39:
  9518                           	callstack 0
  9519  004C94                     _I2C_SetAddressNackCallback:
  9520                           	callstack 23
  9521  004C94                     
  9522                           ;mcc_generated_files/i2c_master.c: 283: void I2C_SetAddressNackCallback(i2c_callback_t c
      +                          b, void *ptr);mcc_generated_files/i2c_master.c: 284: {;mcc_generated_files/i2c_master.c:
      +                           285:     I2C_SetCallback(I2C_ADDR_NACK, cb, ptr);
  9523  004C94  C00A  F005         	movff	I2C_SetAddressNackCallback@cb,I2C_SetCallback@cb
  9524  004C98  C00B  F006         	movff	I2C_SetAddressNackCallback@cb+1,I2C_SetCallback@cb+1
  9525  004C9C  C00C  F007         	movff	I2C_SetAddressNackCallback@ptr,I2C_SetCallback@ptr
  9526  004CA0  C00D  F008         	movff	I2C_SetAddressNackCallback@ptr+1,I2C_SetCallback@ptr+1
  9527  004CA4  0E02               	movlw	2
  9528  004CA6  EC03  F022         	call	_I2C_SetCallback
  9529  004CAA  0012               	return		;funcret
  9530  004CAC                     __end_of_I2C_SetAddressNackCallback:
  9531                           	callstack 0
  9532                           
  9533 ;; *************** function _I2C_MasterWrite *****************
  9534 ;; Defined at:
  9535 ;;		line 251 in file "mcc_generated_files/i2c_master.c"
  9536 ;; Parameters:    Size  Location     Type
  9537 ;;		None
  9538 ;; Auto vars:     Size  Location     Type
  9539 ;;		None
  9540 ;; Return value:  Size  Location     Type
  9541 ;;                  1    wreg      enum E355
  9542 ;; Registers used:
  9543 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9544 ;; Tracked objects:
  9545 ;;		On entry : 0/0
  9546 ;;		On exit  : 0/0
  9547 ;;		Unchanged: 0/0
  9548 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9549 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9550 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9551 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9552 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9553 ;;Total ram usage:        0 bytes
  9554 ;; Hardware stack levels used: 1
  9555 ;; Hardware stack levels required when called: 11
  9556 ;; This function calls:
  9557 ;;		_I2C_MasterOperation
  9558 ;; This function is called by:
  9559 ;;		_I2C_WriteNBytes
  9560 ;;		_I2C_Read1ByteRegister
  9561 ;;		_I2C_Read2ByteRegister
  9562 ;;		_I2C_Write1ByteRegister
  9563 ;;		_I2C_Write2ByteRegister
  9564 ;;		_I2C_ReadDataBlock
  9565 ;; This function uses a non-reentrant model
  9566 ;;
  9567                           
  9568                           	psect	text40
  9569  004D9C                     __ptext40:
  9570                           	callstack 0
  9571  004D9C                     _I2C_MasterWrite:
  9572                           	callstack 17
  9573  004D9C                     
  9574                           ;mcc_generated_files/i2c_master.c: 253:     return I2C_MasterOperation(0);;	Return value
      +                           of _I2C_MasterWrite is never used
  9575  004D9C  0E00               	movlw	0
  9576  004D9E  EC61  F024         	call	_I2C_MasterOperation
  9577  004DA2  0012               	return		;funcret
  9578  004DA4                     __end_of_I2C_MasterWrite:
  9579                           	callstack 0
  9580                           
  9581 ;; *************** function _I2C_ReadNBytes *****************
  9582 ;; Defined at:
  9583 ;;		line 120 in file "mcc_generated_files/examples/i2c_master_example.c"
  9584 ;; Parameters:    Size  Location     Type
  9585 ;;  address         1    wreg     unsigned char 
  9586 ;;  data            2   21[COMRAM] PTR unsigned char 
  9587 ;;		 -> readBuffer(10), 
  9588 ;;  len             2   23[COMRAM] unsigned int 
  9589 ;; Auto vars:     Size  Location     Type
  9590 ;;  address         1   25[COMRAM] unsigned char 
  9591 ;; Return value:  Size  Location     Type
  9592 ;;                  1    wreg      void 
  9593 ;; Registers used:
  9594 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9595 ;; Tracked objects:
  9596 ;;		On entry : 0/0
  9597 ;;		On exit  : 0/0
  9598 ;;		Unchanged: 0/0
  9599 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9600 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9601 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9602 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9603 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9604 ;;Total ram usage:        5 bytes
  9605 ;; Hardware stack levels used: 1
  9606 ;; Hardware stack levels required when called: 12
  9607 ;; This function calls:
  9608 ;;		_I2C_Close
  9609 ;;		_I2C_MasterRead
  9610 ;;		_I2C_Open
  9611 ;;		_I2C_SetBuffer
  9612 ;; This function is called by:
  9613 ;;		_TLV493_Init
  9614 ;;		_TLV493_Read
  9615 ;; This function uses a non-reentrant model
  9616 ;;
  9617                           
  9618                           	psect	text41
  9619  004838                     __ptext41:
  9620                           	callstack 0
  9621  004838                     _I2C_ReadNBytes:
  9622                           	callstack 16
  9623                           
  9624                           ;incstack = 0
  9625                           ;I2C_ReadNBytes@address stored from wreg
  9626  004838  6E1A               	movwf	I2C_ReadNBytes@address^0,c
  9627  00483A                     l5665:
  9628  00483A  501A               	movf	I2C_ReadNBytes@address^0,w,c
  9629  00483C  EC7E  F021         	call	_I2C_Open
  9630  004840  0900               	iorlw	0
  9631  004842  B4D8               	btfsc	status,2,c
  9632  004844  EF26  F024         	goto	u5421
  9633  004848  EF28  F024         	goto	u5420
  9634  00484C                     u5421:
  9635  00484C  EF1D  F024         	goto	l5665
  9636  004850                     u5420:
  9637  004850                     
  9638                           ;mcc_generated_files/examples/i2c_master_example.c: 123:     I2C_SetBuffer(data,len);
  9639  004850  C016  F005         	movff	I2C_ReadNBytes@data,I2C_SetBuffer@buffer
  9640  004854  C017  F006         	movff	I2C_ReadNBytes@data+1,I2C_SetBuffer@buffer+1
  9641  004858  C018  F007         	movff	I2C_ReadNBytes@len,I2C_SetBuffer@bufferSize
  9642  00485C  C019  F008         	movff	I2C_ReadNBytes@len+1,I2C_SetBuffer@bufferSize+1
  9643  004860  EC0C  F026         	call	_I2C_SetBuffer	;wreg free
  9644  004864                     
  9645                           ;mcc_generated_files/examples/i2c_master_example.c: 124:     I2C_MasterRead();
  9646  004864  ECD2  F026         	call	_I2C_MasterRead	;wreg free
  9647  004868                     l5671:
  9648  004868  ECB9  F025         	call	_I2C_Close	;wreg free
  9649  00486C  06E8               	decf	wreg,f,c
  9650  00486E  B4D8               	btfsc	status,2,c
  9651  004870  EF3C  F024         	goto	u5431
  9652  004874  EF3E  F024         	goto	u5430
  9653  004878                     u5431:
  9654  004878  EF34  F024         	goto	l5671
  9655  00487C                     u5430:
  9656  00487C  0012               	return		;funcret
  9657  00487E                     __end_of_I2C_ReadNBytes:
  9658                           	callstack 0
  9659                           
  9660 ;; *************** function _I2C_Open *****************
  9661 ;; Defined at:
  9662 ;;		line 176 in file "mcc_generated_files/i2c_master.c"
  9663 ;; Parameters:    Size  Location     Type
  9664 ;;  address         1    wreg     unsigned char 
  9665 ;; Auto vars:     Size  Location     Type
  9666 ;;  address         1    4[COMRAM] unsigned char 
  9667 ;;  returnValue     1    5[COMRAM] enum E355
  9668 ;; Return value:  Size  Location     Type
  9669 ;;                  1    wreg      enum E355
  9670 ;; Registers used:
  9671 ;;		wreg, status,2, status,0, cstack
  9672 ;; Tracked objects:
  9673 ;;		On entry : 0/0
  9674 ;;		On exit  : 0/0
  9675 ;;		Unchanged: 0/0
  9676 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9677 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9678 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9679 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9680 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9681 ;;Total ram usage:        2 bytes
  9682 ;; Hardware stack levels used: 1
  9683 ;; Hardware stack levels required when called: 5
  9684 ;; This function calls:
  9685 ;;		_I2C_MasterClearIrq
  9686 ;;		_I2C_MasterOpen
  9687 ;; This function is called by:
  9688 ;;		_I2C_WriteNBytes
  9689 ;;		_I2C_ReadNBytes
  9690 ;;		_I2C_Read1ByteRegister
  9691 ;;		_I2C_Read2ByteRegister
  9692 ;;		_I2C_Write1ByteRegister
  9693 ;;		_I2C_Write2ByteRegister
  9694 ;;		_I2C_ReadDataBlock
  9695 ;; This function uses a non-reentrant model
  9696 ;;
  9697                           
  9698                           	psect	text42
  9699  0042FC                     __ptext42:
  9700                           	callstack 0
  9701  0042FC                     _I2C_Open:
  9702                           	callstack 22
  9703                           
  9704                           ;incstack = 0
  9705                           ;I2C_Open@address stored from wreg
  9706  0042FC  6E05               	movwf	I2C_Open@address^0,c
  9707  0042FE                     
  9708                           ;mcc_generated_files/i2c_master.c: 176: i2c_error_t I2C_Open(i2c_address_t address);mcc_
      +                          generated_files/i2c_master.c: 177: {;mcc_generated_files/i2c_master.c: 178:     i2c_erro
      +                          r_t returnValue = I2C_BUSY;
  9709  0042FE  0E01               	movlw	1
  9710  004300  6E06               	movwf	I2C_Open@returnValue^0,c
  9711  004302                     
  9712                           ;mcc_generated_files/i2c_master.c: 180:     if(!I2C_Status.inUse)
  9713  004302  0100               	movlb	0	; () banked
  9714  004304  B5DB               	btfsc	(_I2C_Status+35)& (0+255),2,b
  9715  004306  EF87  F021         	goto	u4741
  9716  00430A  EF89  F021         	goto	u4740
  9717  00430E                     u4741:
  9718  00430E  EFC3  F021         	goto	l5265
  9719  004312                     u4740:
  9720  004312                     
  9721                           ; BSR set to: 0
  9722                           ;mcc_generated_files/i2c_master.c: 181:     {;mcc_generated_files/i2c_master.c: 182:    
      +                               I2C_Status.address = address;
  9723  004312  C005  F0D4         	movff	I2C_Open@address,_I2C_Status+28
  9724  004316                     
  9725                           ; BSR set to: 0
  9726                           ;mcc_generated_files/i2c_master.c: 183:         I2C_Status.busy = 0;
  9727  004316  93DB               	bcf	(_I2C_Status+35)& (0+255),1,b
  9728  004318                     
  9729                           ; BSR set to: 0
  9730                           ;mcc_generated_files/i2c_master.c: 184:         I2C_Status.inUse = 1;
  9731  004318  85DB               	bsf	(_I2C_Status+35)& (0+255),2,b
  9732  00431A                     
  9733                           ; BSR set to: 0
  9734                           ;mcc_generated_files/i2c_master.c: 185:         I2C_Status.addressNackCheck = 0;
  9735  00431A  91DB               	bcf	(_I2C_Status+35)& (0+255),0,b
  9736  00431C                     
  9737                           ; BSR set to: 0
  9738                           ;mcc_generated_files/i2c_master.c: 186:         I2C_Status.state = I2C_RESET;
  9739  00431C  0E0E               	movlw	14
  9740  00431E  6FD9               	movwf	(_I2C_Status+33)& (0+255),b
  9741  004320                     
  9742                           ; BSR set to: 0
  9743                           ;mcc_generated_files/i2c_master.c: 187:         I2C_Status.time_out_value = 500;
  9744  004320  0E01               	movlw	1
  9745  004322  6FD3               	movwf	(_I2C_Status+27)& (0+255),b
  9746  004324  0EF4               	movlw	244
  9747  004326  6FD2               	movwf	(_I2C_Status+26)& (0+255),b
  9748  004328                     
  9749                           ; BSR set to: 0
  9750                           ;mcc_generated_files/i2c_master.c: 188:         I2C_Status.bufferFree = 1;
  9751  004328  87DB               	bsf	(_I2C_Status+35)& (0+255),3,b
  9752  00432A                     
  9753                           ; BSR set to: 0
  9754                           ;mcc_generated_files/i2c_master.c: 191:         I2C_Status.callbackTable[I2C_DATA_COMPLE
      +                          TE]=I2C_CallbackReturnStop;
  9755  00432A  0E14               	movlw	low _I2C_CallbackReturnStop
  9756  00432C  6FB8               	movwf	_I2C_Status& (0+255),b
  9757  00432E  0E4E               	movlw	high _I2C_CallbackReturnStop
  9758  004330  6FB9               	movwf	(_I2C_Status+1)& (0+255),b
  9759  004332                     
  9760                           ; BSR set to: 0
  9761                           ;mcc_generated_files/i2c_master.c: 192:         I2C_Status.callbackPayload[I2C_DATA_COMP
      +                          LETE] = ((void*)0);
  9762  004332  0E00               	movlw	0
  9763  004334  6FC4               	movwf	(_I2C_Status+12)& (0+255),b
  9764  004336  0E00               	movlw	0
  9765  004338  6FC5               	movwf	(_I2C_Status+13)& (0+255),b
  9766  00433A                     
  9767                           ; BSR set to: 0
  9768                           ;mcc_generated_files/i2c_master.c: 193:         I2C_Status.callbackTable[I2C_WRITE_COLLI
      +                          SION]=I2C_CallbackReturnStop;
  9769  00433A  0E14               	movlw	low _I2C_CallbackReturnStop
  9770  00433C  6FBA               	movwf	(_I2C_Status+2)& (0+255),b
  9771  00433E  0E4E               	movlw	high _I2C_CallbackReturnStop
  9772  004340  6FBB               	movwf	(_I2C_Status+3)& (0+255),b
  9773  004342                     
  9774                           ; BSR set to: 0
  9775                           ;mcc_generated_files/i2c_master.c: 194:         I2C_Status.callbackPayload[I2C_WRITE_COL
      +                          LISION] = ((void*)0);
  9776  004342  0E00               	movlw	0
  9777  004344  6FC6               	movwf	(_I2C_Status+14)& (0+255),b
  9778  004346  0E00               	movlw	0
  9779  004348  6FC7               	movwf	(_I2C_Status+15)& (0+255),b
  9780  00434A                     
  9781                           ; BSR set to: 0
  9782                           ;mcc_generated_files/i2c_master.c: 195:         I2C_Status.callbackTable[I2C_ADDR_NACK]=
      +                          I2C_CallbackReturnStop;
  9783  00434A  0E14               	movlw	low _I2C_CallbackReturnStop
  9784  00434C  6FBC               	movwf	(_I2C_Status+4)& (0+255),b
  9785  00434E  0E4E               	movlw	high _I2C_CallbackReturnStop
  9786  004350  6FBD               	movwf	(_I2C_Status+5)& (0+255),b
  9787  004352                     
  9788                           ; BSR set to: 0
  9789                           ;mcc_generated_files/i2c_master.c: 196:         I2C_Status.callbackPayload[I2C_ADDR_NACK
      +                          ] = ((void*)0);
  9790  004352  0E00               	movlw	0
  9791  004354  6FC8               	movwf	(_I2C_Status+16)& (0+255),b
  9792  004356  0E00               	movlw	0
  9793  004358  6FC9               	movwf	(_I2C_Status+17)& (0+255),b
  9794  00435A                     
  9795                           ; BSR set to: 0
  9796                           ;mcc_generated_files/i2c_master.c: 197:         I2C_Status.callbackTable[I2C_DATA_NACK]=
      +                          I2C_CallbackReturnStop;
  9797  00435A  0E14               	movlw	low _I2C_CallbackReturnStop
  9798  00435C  6FBE               	movwf	(_I2C_Status+6)& (0+255),b
  9799  00435E  0E4E               	movlw	high _I2C_CallbackReturnStop
  9800  004360  6FBF               	movwf	(_I2C_Status+7)& (0+255),b
  9801  004362                     
  9802                           ; BSR set to: 0
  9803                           ;mcc_generated_files/i2c_master.c: 198:         I2C_Status.callbackPayload[I2C_DATA_NACK
      +                          ] = ((void*)0);
  9804  004362  0E00               	movlw	0
  9805  004364  6FCA               	movwf	(_I2C_Status+18)& (0+255),b
  9806  004366  0E00               	movlw	0
  9807  004368  6FCB               	movwf	(_I2C_Status+19)& (0+255),b
  9808  00436A                     
  9809                           ; BSR set to: 0
  9810                           ;mcc_generated_files/i2c_master.c: 199:         I2C_Status.callbackTable[I2C_TIMEOUT]=I2
      +                          C_CallbackReturnReset;
  9811  00436A  0E10               	movlw	low _I2C_CallbackReturnReset
  9812  00436C  6FC0               	movwf	(_I2C_Status+8)& (0+255),b
  9813  00436E  0E4E               	movlw	high _I2C_CallbackReturnReset
  9814  004370  6FC1               	movwf	(_I2C_Status+9)& (0+255),b
  9815  004372                     
  9816                           ; BSR set to: 0
  9817                           ;mcc_generated_files/i2c_master.c: 200:         I2C_Status.callbackPayload[I2C_TIMEOUT] 
      +                          = ((void*)0);
  9818  004372  0E00               	movlw	0
  9819  004374  6FCC               	movwf	(_I2C_Status+20)& (0+255),b
  9820  004376  0E00               	movlw	0
  9821  004378  6FCD               	movwf	(_I2C_Status+21)& (0+255),b
  9822  00437A                     
  9823                           ; BSR set to: 0
  9824                           ;mcc_generated_files/i2c_master.c: 202:         I2C_MasterClearIrq();
  9825  00437A  EC16  F027         	call	_I2C_MasterClearIrq	;wreg free
  9826  00437E                     
  9827                           ;mcc_generated_files/i2c_master.c: 203:         I2C_MasterOpen();
  9828  00437E  EC1E  F026         	call	_I2C_MasterOpen	;wreg free
  9829  004382                     
  9830                           ;mcc_generated_files/i2c_master.c: 204:         returnValue = I2C_NOERR;
  9831  004382  0E00               	movlw	0
  9832  004384  6E06               	movwf	I2C_Open@returnValue^0,c
  9833  004386                     l5265:
  9834                           
  9835                           ;mcc_generated_files/i2c_master.c: 206:     return returnValue;
  9836  004386  5006               	movf	I2C_Open@returnValue^0,w,c
  9837  004388  0012               	return		;funcret
  9838  00438A                     __end_of_I2C_Open:
  9839                           	callstack 0
  9840                           
  9841 ;; *************** function _I2C_MasterOpen *****************
  9842 ;; Defined at:
  9843 ;;		line 543 in file "mcc_generated_files/i2c_master.c"
  9844 ;; Parameters:    Size  Location     Type
  9845 ;;		None
  9846 ;; Auto vars:     Size  Location     Type
  9847 ;;		None
  9848 ;; Return value:  Size  Location     Type
  9849 ;;                  1    wreg      _Bool 
  9850 ;; Registers used:
  9851 ;;		wreg, status,2
  9852 ;; Tracked objects:
  9853 ;;		On entry : 0/0
  9854 ;;		On exit  : 0/0
  9855 ;;		Unchanged: 0/0
  9856 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9857 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9858 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9859 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9860 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9861 ;;Total ram usage:        0 bytes
  9862 ;; Hardware stack levels used: 1
  9863 ;; Hardware stack levels required when called: 4
  9864 ;; This function calls:
  9865 ;;		Nothing
  9866 ;; This function is called by:
  9867 ;;		_I2C_Open
  9868 ;; This function uses a non-reentrant model
  9869 ;;
  9870                           
  9871                           	psect	text43
  9872  004C3C                     __ptext43:
  9873                           	callstack 0
  9874  004C3C                     _I2C_MasterOpen:
  9875                           	callstack 22
  9876  004C3C                     
  9877                           ;mcc_generated_files/i2c_master.c: 545:     if(!SSPCON1bits.SSPEN)
  9878  004C3C  BAC6               	btfsc	198,5,c	;volatile
  9879  004C3E  EF23  F026         	goto	u3711
  9880  004C42  EF25  F026         	goto	u3710
  9881  004C46                     u3711:
  9882  004C46  EF2E  F026         	goto	l378
  9883  004C4A                     u3710:
  9884  004C4A                     
  9885                           ;mcc_generated_files/i2c_master.c: 546:     {;mcc_generated_files/i2c_master.c: 547:    
      +                               SSPSTAT = 0x00;
  9886  004C4A  0E00               	movlw	0
  9887  004C4C  6EC7               	movwf	199,c	;volatile
  9888                           
  9889                           ;mcc_generated_files/i2c_master.c: 548:         SSPCON1 = 0x08;
  9890  004C4E  0E08               	movlw	8
  9891  004C50  6EC6               	movwf	198,c	;volatile
  9892                           
  9893                           ;mcc_generated_files/i2c_master.c: 549:         SSPCON2 = 0x00;
  9894  004C52  0E00               	movlw	0
  9895  004C54  6EC5               	movwf	197,c	;volatile
  9896                           
  9897                           ;mcc_generated_files/i2c_master.c: 550:         SSPADD = 0x13;
  9898  004C56  0E13               	movlw	19
  9899  004C58  6EC8               	movwf	200,c	;volatile
  9900  004C5A                     
  9901                           ;mcc_generated_files/i2c_master.c: 551:         SSPCON1bits.SSPEN = 1;
  9902  004C5A  8AC6               	bsf	198,5,c	;volatile
  9903  004C5C                     l378:
  9904  004C5C  0012               	return		;funcret
  9905  004C5E                     __end_of_I2C_MasterOpen:
  9906                           	callstack 0
  9907                           
  9908 ;; *************** function _I2C_MasterRead *****************
  9909 ;; Defined at:
  9910 ;;		line 246 in file "mcc_generated_files/i2c_master.c"
  9911 ;; Parameters:    Size  Location     Type
  9912 ;;		None
  9913 ;; Auto vars:     Size  Location     Type
  9914 ;;		None
  9915 ;; Return value:  Size  Location     Type
  9916 ;;                  1    wreg      enum E355
  9917 ;; Registers used:
  9918 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9919 ;; Tracked objects:
  9920 ;;		On entry : 0/0
  9921 ;;		On exit  : 0/0
  9922 ;;		Unchanged: 0/0
  9923 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9924 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9925 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9926 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9927 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9928 ;;Total ram usage:        0 bytes
  9929 ;; Hardware stack levels used: 1
  9930 ;; Hardware stack levels required when called: 11
  9931 ;; This function calls:
  9932 ;;		_I2C_MasterOperation
  9933 ;; This function is called by:
  9934 ;;		_I2C_ReadNBytes
  9935 ;; This function uses a non-reentrant model
  9936 ;;
  9937                           
  9938                           	psect	text44
  9939  004DA4                     __ptext44:
  9940                           	callstack 0
  9941  004DA4                     _I2C_MasterRead:
  9942                           	callstack 16
  9943  004DA4                     
  9944                           ;mcc_generated_files/i2c_master.c: 248:     return I2C_MasterOperation(1);;	Return value
      +                           of _I2C_MasterRead is never used
  9945  004DA4  0E01               	movlw	1
  9946  004DA6  EC61  F024         	call	_I2C_MasterOperation
  9947  004DAA  0012               	return		;funcret
  9948  004DAC                     __end_of_I2C_MasterRead:
  9949                           	callstack 0
  9950                           
  9951 ;; *************** function _I2C_MasterOperation *****************
  9952 ;; Defined at:
  9953 ;;		line 224 in file "mcc_generated_files/i2c_master.c"
  9954 ;; Parameters:    Size  Location     Type
  9955 ;;  read            1    wreg     _Bool 
  9956 ;; Auto vars:     Size  Location     Type
  9957 ;;  read            1   19[COMRAM] _Bool 
  9958 ;;  returnValue     1   20[COMRAM] enum E355
  9959 ;; Return value:  Size  Location     Type
  9960 ;;                  1    wreg      enum E355
  9961 ;; Registers used:
  9962 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9963 ;; Tracked objects:
  9964 ;;		On entry : 0/0
  9965 ;;		On exit  : 0/0
  9966 ;;		Unchanged: 0/0
  9967 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9968 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9969 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9970 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9971 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9972 ;;Total ram usage:        2 bytes
  9973 ;; Hardware stack levels used: 1
  9974 ;; Hardware stack levels required when called: 10
  9975 ;; This function calls:
  9976 ;;		_I2C_MasterStart
  9977 ;;		_I2C_Poller
  9978 ;; This function is called by:
  9979 ;;		_I2C_MasterRead
  9980 ;;		_I2C_MasterWrite
  9981 ;; This function uses a non-reentrant model
  9982 ;;
  9983                           
  9984                           	psect	text45
  9985  0048C2                     __ptext45:
  9986                           	callstack 0
  9987  0048C2                     _I2C_MasterOperation:
  9988                           	callstack 16
  9989                           
  9990                           ;incstack = 0
  9991                           ;I2C_MasterOperation@read stored from wreg
  9992  0048C2  6E14               	movwf	I2C_MasterOperation@read^0,c
  9993  0048C4                     
  9994                           ;mcc_generated_files/i2c_master.c: 224: i2c_error_t I2C_MasterOperation(_Bool read);mcc_
      +                          generated_files/i2c_master.c: 225: {;mcc_generated_files/i2c_master.c: 226:     i2c_erro
      +                          r_t returnValue = I2C_BUSY;
  9995  0048C4  0E01               	movlw	1
  9996  0048C6  6E15               	movwf	I2C_MasterOperation@returnValue^0,c
  9997  0048C8                     
  9998                           ;mcc_generated_files/i2c_master.c: 227:     if(!I2C_Status.busy)
  9999  0048C8  0100               	movlb	0	; () banked
 10000  0048CA  B3DB               	btfsc	(_I2C_Status+35)& (0+255),1,b
 10001  0048CC  EF6A  F024         	goto	u3721
 10002  0048D0  EF6C  F024         	goto	u3720
 10003  0048D4                     u3721:
 10004  0048D4  EF81  F024         	goto	l4665
 10005  0048D8                     u3720:
 10006  0048D8                     
 10007                           ; BSR set to: 0
 10008                           ;mcc_generated_files/i2c_master.c: 228:     {;mcc_generated_files/i2c_master.c: 229:    
      +                               I2C_Status.busy = 1;
 10009  0048D8  83DB               	bsf	(_I2C_Status+35)& (0+255),1,b
 10010  0048DA                     
 10011                           ; BSR set to: 0
 10012                           ;mcc_generated_files/i2c_master.c: 230:         returnValue = I2C_NOERR;
 10013  0048DA  0E00               	movlw	0
 10014  0048DC  6E15               	movwf	I2C_MasterOperation@returnValue^0,c
 10015  0048DE                     
 10016                           ; BSR set to: 0
 10017                           ;mcc_generated_files/i2c_master.c: 232:         if(read)
 10018  0048DE  5014               	movf	I2C_MasterOperation@read^0,w,c
 10019  0048E0  B4D8               	btfsc	status,2,c
 10020  0048E2  EF75  F024         	goto	u3731
 10021  0048E6  EF77  F024         	goto	u3730
 10022  0048EA                     u3731:
 10023  0048EA  EF7B  F024         	goto	l4659
 10024  0048EE                     u3730:
 10025  0048EE                     
 10026                           ; BSR set to: 0
 10027                           ;mcc_generated_files/i2c_master.c: 233:         {;mcc_generated_files/i2c_master.c: 234:
      +                                       I2C_Status.state = I2C_SEND_ADR_READ;
 10028  0048EE  0E01               	movlw	1
 10029  0048F0  6FD9               	movwf	(_I2C_Status+33)& (0+255),b
 10030                           
 10031                           ;mcc_generated_files/i2c_master.c: 235:         }
 10032  0048F2  EF7D  F024         	goto	l4661
 10033  0048F6                     l4659:
 10034                           
 10035                           ; BSR set to: 0
 10036                           ;mcc_generated_files/i2c_master.c: 237:         {;mcc_generated_files/i2c_master.c: 238:
      +                                       I2C_Status.state = I2C_SEND_ADR_WRITE;
 10037  0048F6  0E02               	movlw	2
 10038  0048F8  6FD9               	movwf	(_I2C_Status+33)& (0+255),b
 10039  0048FA                     l4661:
 10040                           
 10041                           ; BSR set to: 0
 10042                           ;mcc_generated_files/i2c_master.c: 240:         I2C_MasterStart();
 10043  0048FA  EC10  F027         	call	_I2C_MasterStart	;wreg free
 10044  0048FE                     
 10045                           ;mcc_generated_files/i2c_master.c: 241:         I2C_Poller();
 10046  0048FE  EC2F  F026         	call	_I2C_Poller	;wreg free
 10047  004902                     l4665:
 10048                           
 10049                           ;mcc_generated_files/i2c_master.c: 243:     return returnValue;
 10050  004902  5015               	movf	I2C_MasterOperation@returnValue^0,w,c
 10051  004904  0012               	return		;funcret
 10052  004906                     __end_of_I2C_MasterOperation:
 10053                           	callstack 0
 10054                           
 10055 ;; *************** function _I2C_Poller *****************
 10056 ;; Defined at:
 10057 ;;		line 312 in file "mcc_generated_files/i2c_master.c"
 10058 ;; Parameters:    Size  Location     Type
 10059 ;;		None
 10060 ;; Auto vars:     Size  Location     Type
 10061 ;;		None
 10062 ;; Return value:  Size  Location     Type
 10063 ;;                  1    wreg      void 
 10064 ;; Registers used:
 10065 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10066 ;; Tracked objects:
 10067 ;;		On entry : 0/0
 10068 ;;		On exit  : 0/0
 10069 ;;		Unchanged: 0/0
 10070 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10071 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10072 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10073 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10074 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10075 ;;Total ram usage:        0 bytes
 10076 ;; Hardware stack levels used: 1
 10077 ;; Hardware stack levels required when called: 9
 10078 ;; This function calls:
 10079 ;;		_I2C_MasterFsm
 10080 ;;		_I2C_MasterWaitForEvent
 10081 ;; This function is called by:
 10082 ;;		_I2C_MasterOperation
 10083 ;; This function uses a non-reentrant model
 10084 ;;
 10085                           
 10086                           	psect	text46
 10087  004C5E                     __ptext46:
 10088                           	callstack 0
 10089  004C5E                     _I2C_Poller:
 10090                           	callstack 16
 10091  004C5E                     
 10092                           ;mcc_generated_files/i2c_master.c: 314:     while(I2C_Status.busy)
 10093  004C5E  EF35  F026         	goto	l4409
 10094  004C62                     l4405:
 10095                           
 10096                           ; BSR set to: 0
 10097                           ;mcc_generated_files/i2c_master.c: 315:     {;mcc_generated_files/i2c_master.c: 316:    
      +                               I2C_MasterWaitForEvent();
 10098  004C62  EC81  F026         	call	_I2C_MasterWaitForEvent	;wreg free
 10099  004C66                     
 10100                           ;mcc_generated_files/i2c_master.c: 317:         I2C_MasterFsm();
 10101  004C66  EC7B  F022         	call	_I2C_MasterFsm	;wreg free
 10102  004C6A                     l4409:
 10103                           
 10104                           ;mcc_generated_files/i2c_master.c: 314:     while(I2C_Status.busy)
 10105  004C6A  0100               	movlb	0	; () banked
 10106  004C6C  B3DB               	btfsc	(_I2C_Status+35)& (0+255),1,b
 10107  004C6E  EF3B  F026         	goto	u3271
 10108  004C72  EF3D  F026         	goto	u3270
 10109  004C76                     u3271:
 10110  004C76  EF31  F026         	goto	l4405
 10111  004C7A                     u3270:
 10112  004C7A                     
 10113                           ; BSR set to: 0
 10114  004C7A  0012               	return		;funcret
 10115  004C7C                     __end_of_I2C_Poller:
 10116                           	callstack 0
 10117                           
 10118 ;; *************** function _I2C_MasterWaitForEvent *****************
 10119 ;; Defined at:
 10120 ;;		line 650 in file "mcc_generated_files/i2c_master.c"
 10121 ;; Parameters:    Size  Location     Type
 10122 ;;		None
 10123 ;; Auto vars:     Size  Location     Type
 10124 ;;		None
 10125 ;; Return value:  Size  Location     Type
 10126 ;;                  1    wreg      void 
 10127 ;; Registers used:
 10128 ;;		None
 10129 ;; Tracked objects:
 10130 ;;		On entry : 0/0
 10131 ;;		On exit  : 0/0
 10132 ;;		Unchanged: 0/0
 10133 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10134 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10135 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10136 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10137 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10138 ;;Total ram usage:        0 bytes
 10139 ;; Hardware stack levels used: 1
 10140 ;; Hardware stack levels required when called: 4
 10141 ;; This function calls:
 10142 ;;		Nothing
 10143 ;; This function is called by:
 10144 ;;		_I2C_Poller
 10145 ;; This function uses a non-reentrant model
 10146 ;;
 10147                           
 10148                           	psect	text47
 10149  004D02                     __ptext47:
 10150                           	callstack 0
 10151  004D02                     _I2C_MasterWaitForEvent:
 10152                           	callstack 20
 10153  004D02                     l435:
 10154                           
 10155                           ;mcc_generated_files/i2c_master.c: 653:     {;mcc_generated_files/i2c_master.c: 654:    
      +                               if(PIR1bits.SSPIF)
 10156  004D02  A69E               	btfss	158,3,c	;volatile
 10157  004D04  EF86  F026         	goto	u3191
 10158  004D08  EF88  F026         	goto	u3190
 10159  004D0C                     u3191:
 10160  004D0C  EF81  F026         	goto	l435
 10161  004D10                     u3190:
 10162  004D10  0012               	return		;funcret
 10163  004D12                     __end_of_I2C_MasterWaitForEvent:
 10164                           	callstack 0
 10165                           
 10166 ;; *************** function _I2C_MasterFsm *****************
 10167 ;; Defined at:
 10168 ;;		line 321 in file "mcc_generated_files/i2c_master.c"
 10169 ;; Parameters:    Size  Location     Type
 10170 ;;		None
 10171 ;; Auto vars:     Size  Location     Type
 10172 ;;		None
 10173 ;; Return value:  Size  Location     Type
 10174 ;;                  1    wreg      void 
 10175 ;; Registers used:
 10176 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10177 ;; Tracked objects:
 10178 ;;		On entry : 0/0
 10179 ;;		On exit  : 0/0
 10180 ;;		Unchanged: 0/0
 10181 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10182 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10183 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10184 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10185 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10186 ;;Total ram usage:        2 bytes
 10187 ;; Hardware stack levels used: 1
 10188 ;; Hardware stack levels required when called: 8
 10189 ;; This function calls:
 10190 ;;		_I2C_DO_ADDRESS_NACK
 10191 ;;		_I2C_DO_IDLE
 10192 ;;		_I2C_DO_RCEN
 10193 ;;		_I2C_DO_RESET
 10194 ;;		_I2C_DO_RX
 10195 ;;		_I2C_DO_RX_ACK
 10196 ;;		_I2C_DO_RX_NACK_RESTART
 10197 ;;		_I2C_DO_RX_NACK_STOP
 10198 ;;		_I2C_DO_SEND_ADR_READ
 10199 ;;		_I2C_DO_SEND_ADR_WRITE
 10200 ;;		_I2C_DO_SEND_RESTART
 10201 ;;		_I2C_DO_SEND_RESTART_READ
 10202 ;;		_I2C_DO_SEND_RESTART_WRITE
 10203 ;;		_I2C_DO_SEND_STOP
 10204 ;;		_I2C_DO_TX
 10205 ;;		_I2C_DO_TX_EMPTY
 10206 ;;		_I2C_MasterClearIrq
 10207 ;;		_I2C_MasterIsNack
 10208 ;; This function is called by:
 10209 ;;		_I2C_Poller
 10210 ;; This function uses a non-reentrant model
 10211 ;;
 10212                           
 10213                           	psect	text48
 10214  0044F6                     __ptext48:
 10215                           	callstack 0
 10216  0044F6                     _I2C_MasterFsm:
 10217                           	callstack 16
 10218  0044F6                     
 10219                           ;mcc_generated_files/i2c_master.c: 323:     I2C_MasterClearIrq();
 10220  0044F6  EC16  F027         	call	_I2C_MasterClearIrq	;wreg free
 10221  0044FA                     
 10222                           ;mcc_generated_files/i2c_master.c: 325:     if(I2C_Status.addressNackCheck && I2C_Master
      +                          IsNack())
 10223  0044FA  0100               	movlb	0	; () banked
 10224  0044FC  A1DB               	btfss	(_I2C_Status+35)& (0+255),0,b
 10225  0044FE  EF83  F022         	goto	u3201
 10226  004502  EF85  F022         	goto	u3200
 10227  004506                     u3201:
 10228  004506  EF92  F022         	goto	l4385
 10229  00450A                     u3200:
 10230  00450A                     
 10231                           ; BSR set to: 0
 10232  00450A  EC6D  F026         	call	_I2C_MasterIsNack	;wreg free
 10233  00450E  0900               	iorlw	0
 10234  004510  B4D8               	btfsc	status,2,c
 10235  004512  EF8D  F022         	goto	u3211
 10236  004516  EF8F  F022         	goto	u3210
 10237  00451A                     u3211:
 10238  00451A  EF92  F022         	goto	l4385
 10239  00451E                     u3210:
 10240  00451E                     
 10241                           ;mcc_generated_files/i2c_master.c: 326:     {;mcc_generated_files/i2c_master.c: 327:    
      +                               I2C_Status.state = I2C_ADDRESS_NACK;
 10242  00451E  0E0F               	movlw	15
 10243  004520  0100               	movlb	0	; () banked
 10244  004522  6FD9               	movwf	(_I2C_Status+33)& (0+255),b
 10245  004524                     l4385:
 10246                           
 10247                           ;mcc_generated_files/i2c_master.c: 329:     I2C_Status.state = fsmStateTable[I2C_Status.
      +                          state]();
 10248  004524  0100               	movlb	0	; () banked
 10249  004526  51D9               	movf	(_I2C_Status+33)& (0+255),w,b
 10250  004528  0D02               	mullw	2
 10251  00452A  0E01               	movlw	low _fsmStateTable
 10252  00452C  24F3               	addwf	243,w,c
 10253  00452E  6EF6               	movwf	tblptrl,c
 10254  004530  0E10               	movlw	high _fsmStateTable
 10255  004532  20F4               	addwfc	244,w,c
 10256  004534  6EF7               	movwf	tblptrh,c
 10257  004536                     	if	1	;There are 3 active tblptr bytes
 10258  004536  6AF8               	clrf	tblptru,c
 10259  004538  0E00               	movlw	low (__mediumconst shr (0+16))
 10260  00453A  22F8               	addwfc	tblptru,f,c
 10261  00453C                     	endif
 10262  00453C  0009               	tblrd		*+
 10263  00453E  CFF5 F012          	movff	tablat,??_I2C_MasterFsm
 10264  004542  0009               	tblrd		*+
 10265  004544  CFF5 F013          	movff	tablat,??_I2C_MasterFsm+1
 10266  004548  D802               	call	u3228
 10267  00454A  EFB0  F022         	goto	u3229
 10268  00454E                     u3228:
 10269  00454E  0005               	push	
 10270  004550  6EFA               	movwf	pclath,c
 10271  004552  5012               	movf	??_I2C_MasterFsm^0,w,c
 10272  004554  6EFD               	movwf	tosl,c
 10273  004556  5013               	movf	(??_I2C_MasterFsm+1)^0,w,c
 10274  004558  6EFE               	movwf	tosh,c
 10275  00455A  6AFF               	clrf	tosu,c
 10276  00455C  50FA               	movf	pclath,w,c
 10277  00455E  0012               	return		;indir
 10278  004560                     u3229:
 10279  004560  0100               	movlb	0	; () banked
 10280  004562  6FD9               	movwf	(_I2C_Status+33)& (0+255),b
 10281  004564                     
 10282                           ; BSR set to: 0
 10283  004564  0012               	return		;funcret
 10284  004566                     __end_of_I2C_MasterFsm:
 10285                           	callstack 0
 10286                           
 10287 ;; *************** function _I2C_DO_ADDRESS_NACK *****************
 10288 ;; Defined at:
 10289 ;;		line 500 in file "mcc_generated_files/i2c_master.c"
 10290 ;; Parameters:    Size  Location     Type
 10291 ;;		None
 10292 ;; Auto vars:     Size  Location     Type
 10293 ;;		None
 10294 ;; Return value:  Size  Location     Type
 10295 ;;                  1    wreg      enum E3103
 10296 ;; Registers used:
 10297 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 10298 ;; Tracked objects:
 10299 ;;		On entry : 0/0
 10300 ;;		On exit  : 0/0
 10301 ;;		Unchanged: 0/0
 10302 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10303 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10304 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10305 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10306 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10307 ;;Total ram usage:        2 bytes
 10308 ;; Hardware stack levels used: 1
 10309 ;; Hardware stack levels required when called: 7
 10310 ;; This function calls:
 10311 ;;		Absolute function
 10312 ;;		_I2C_CallbackReturnReset
 10313 ;;		_I2C_CallbackReturnStop
 10314 ;;		_I2C_DO_SEND_RESTART
 10315 ;;		_I2C_DO_SEND_STOP
 10316 ;;		_rd1RegCompleteHandler
 10317 ;;		_rd2RegCompleteHandler
 10318 ;;		_rdBlkRegCompleteHandler
 10319 ;;		_wr1RegCompleteHandler
 10320 ;;		_wr2RegCompleteHandler
 10321 ;; This function is called by:
 10322 ;;		_I2C_MasterFsm
 10323 ;; This function uses a non-reentrant model
 10324 ;;
 10325                           
 10326                           	psect	text49
 10327  004566                     __ptext49:
 10328                           	callstack 0
 10329  004566                     _I2C_DO_ADDRESS_NACK:
 10330                           	callstack 16
 10331  004566                     
 10332                           ;mcc_generated_files/i2c_master.c: 502:     I2C_Status.addressNackCheck = 0;
 10333  004566  0100               	movlb	0	; () banked
 10334  004568  91DB               	bcf	(_I2C_Status+35)& (0+255),0,b
 10335  00456A                     
 10336                           ; BSR set to: 0
 10337                           ;mcc_generated_files/i2c_master.c: 503:     I2C_Status.error = I2C_FAIL;
 10338  00456A  0E02               	movlw	2
 10339  00456C  6FDA               	movwf	(_I2C_Status+34)& (0+255),b
 10340                           
 10341                           ;mcc_generated_files/i2c_master.c: 504:     switch(I2C_Status.callbackTable[I2C_ADDR_NAC
      +                          K](I2C_Status.callbackPayload[I2C_ADDR_NACK]))
 10342  00456E  EFC1  F022         	goto	l4367
 10343  004572                     l4357:
 10344                           
 10345                           ;mcc_generated_files/i2c_master.c: 508:             return I2C_DO_SEND_RESTART();
 10346  004572  ECE6  F026         	call	_I2C_DO_SEND_RESTART	;wreg free
 10347  004576  EFE5  F022         	goto	l357
 10348  00457A                     l4361:
 10349                           
 10350                           ;mcc_generated_files/i2c_master.c: 510:             return I2C_DO_SEND_STOP();
 10351  00457A  ECE2  F026         	call	_I2C_DO_SEND_STOP	;wreg free
 10352  00457E  EFE5  F022         	goto	l357
 10353  004582                     l4367:
 10354                           
 10355                           ; BSR set to: 0
 10356  004582  C0C8  F00E         	movff	_I2C_Status+16,I2C_CallbackReturnReset@funPtr
 10357  004586  C0C9  F00F         	movff	_I2C_Status+17,I2C_CallbackReturnReset@funPtr+1
 10358  00458A  D802               	call	u3188
 10359  00458C  EFD1  F022         	goto	u3189
 10360  004590                     u3188:
 10361  004590  0005               	push	
 10362  004592  6EFA               	movwf	pclath,c
 10363  004594  51BC               	movf	(_I2C_Status+4)& (0+255),w,b
 10364  004596  6EFD               	movwf	tosl,c
 10365  004598  51BD               	movf	(_I2C_Status+5)& (0+255),w,b
 10366  00459A  6EFE               	movwf	tosh,c
 10367  00459C  6AFF               	clrf	tosu,c
 10368  00459E  50FA               	movf	pclath,w,c
 10369  0045A0  0012               	return		;indir
 10370  0045A2                     u3189:
 10371  0045A2  6E10               	movwf	??_I2C_DO_ADDRESS_NACK^0,c
 10372  0045A4  6A11               	clrf	(??_I2C_DO_ADDRESS_NACK+1)^0,c
 10373                           
 10374                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10375                           ; Switch size 1, requested type "simple"
 10376                           ; Number of cases is 1, Range of values is 0 to 0
 10377                           ; switch strategies available:
 10378                           ; Name         Instructions Cycles
 10379                           ; simple_byte            4     3 (average)
 10380                           ;	Chosen strategy is simple_byte
 10381  0045A6  5011               	movf	(??_I2C_DO_ADDRESS_NACK+1)^0,w,c
 10382  0045A8  0A00               	xorlw	0	; case 0
 10383  0045AA  B4D8               	btfsc	status,2,c
 10384  0045AC  EFDA  F022         	goto	l7961
 10385  0045B0  EFBD  F022         	goto	l4361
 10386  0045B4                     l7961:
 10387                           
 10388                           ; Switch size 1, requested type "simple"
 10389                           ; Number of cases is 2, Range of values is 2 to 3
 10390                           ; switch strategies available:
 10391                           ; Name         Instructions Cycles
 10392                           ; simple_byte            7     4 (average)
 10393                           ;	Chosen strategy is simple_byte
 10394  0045B4  5010               	movf	??_I2C_DO_ADDRESS_NACK^0,w,c
 10395  0045B6  0A02               	xorlw	2	; case 2
 10396  0045B8  B4D8               	btfsc	status,2,c
 10397  0045BA  EFB9  F022         	goto	l4357
 10398  0045BE  0A01               	xorlw	1	; case 3
 10399  0045C0  B4D8               	btfsc	status,2,c
 10400  0045C2  EFB9  F022         	goto	l4357
 10401  0045C6  EFBD  F022         	goto	l4361
 10402  0045CA                     l357:
 10403  0045CA  0012               	return		;funcret
 10404  0045CC                     __end_of_I2C_DO_ADDRESS_NACK:
 10405                           	callstack 0
 10406                           
 10407 ;; *************** function _I2C_DO_RESET *****************
 10408 ;; Defined at:
 10409 ;;		line 494 in file "mcc_generated_files/i2c_master.c"
 10410 ;; Parameters:    Size  Location     Type
 10411 ;;		None
 10412 ;; Auto vars:     Size  Location     Type
 10413 ;;		None
 10414 ;; Return value:  Size  Location     Type
 10415 ;;                  1    wreg      enum E3103
 10416 ;; Registers used:
 10417 ;;		wreg, status,2
 10418 ;; Tracked objects:
 10419 ;;		On entry : 0/0
 10420 ;;		On exit  : 0/0
 10421 ;;		Unchanged: 0/0
 10422 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10423 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10424 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10425 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10426 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10427 ;;Total ram usage:        0 bytes
 10428 ;; Hardware stack levels used: 1
 10429 ;; Hardware stack levels required when called: 4
 10430 ;; This function calls:
 10431 ;;		Nothing
 10432 ;; This function is called by:
 10433 ;;		_I2C_MasterFsm
 10434 ;; This function uses a non-reentrant model
 10435 ;;
 10436                           
 10437                           	psect	text50
 10438  004D32                     __ptext50:
 10439                           	callstack 0
 10440  004D32                     _I2C_DO_RESET:
 10441                           	callstack 19
 10442  004D32                     
 10443                           ;mcc_generated_files/i2c_master.c: 496:     I2C_Status.busy = 0;
 10444  004D32  0100               	movlb	0	; () banked
 10445  004D34  93DB               	bcf	(_I2C_Status+35)& (0+255),1,b
 10446  004D36                     
 10447                           ; BSR set to: 0
 10448                           ;mcc_generated_files/i2c_master.c: 497:     I2C_Status.error = I2C_NOERR;
 10449  004D36  0E00               	movlw	0
 10450  004D38  6FDA               	movwf	(_I2C_Status+34)& (0+255),b
 10451  004D3A                     
 10452                           ; BSR set to: 0
 10453                           ;mcc_generated_files/i2c_master.c: 498:     return I2C_RESET;
 10454  004D3A  0E0E               	movlw	14
 10455  004D3C                     
 10456                           ; BSR set to: 0
 10457  004D3C  0012               	return		;funcret
 10458  004D3E                     __end_of_I2C_DO_RESET:
 10459                           	callstack 0
 10460                           
 10461 ;; *************** function _I2C_DO_RX_NACK_RESTART *****************
 10462 ;; Defined at:
 10463 ;;		line 488 in file "mcc_generated_files/i2c_master.c"
 10464 ;; Parameters:    Size  Location     Type
 10465 ;;		None
 10466 ;; Auto vars:     Size  Location     Type
 10467 ;;		None
 10468 ;; Return value:  Size  Location     Type
 10469 ;;                  1    wreg      enum E3103
 10470 ;; Registers used:
 10471 ;;		wreg, cstack
 10472 ;; Tracked objects:
 10473 ;;		On entry : 0/0
 10474 ;;		On exit  : 0/0
 10475 ;;		Unchanged: 0/0
 10476 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10477 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10478 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10479 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10480 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10481 ;;Total ram usage:        0 bytes
 10482 ;; Hardware stack levels used: 1
 10483 ;; Hardware stack levels required when called: 5
 10484 ;; This function calls:
 10485 ;;		_I2C_MasterSendNack
 10486 ;; This function is called by:
 10487 ;;		_I2C_DO_RX
 10488 ;;		_I2C_MasterFsm
 10489 ;; This function uses a non-reentrant model
 10490 ;;
 10491                           
 10492                           	psect	text51
 10493  004DAC                     __ptext51:
 10494                           	callstack 0
 10495  004DAC                     _I2C_DO_RX_NACK_RESTART:
 10496                           	callstack 18
 10497  004DAC                     
 10498                           ;mcc_generated_files/i2c_master.c: 490:     I2C_MasterSendNack();
 10499  004DAC  ECF9  F026         	call	_I2C_MasterSendNack	;wreg free
 10500  004DB0                     
 10501                           ;mcc_generated_files/i2c_master.c: 491:     return I2C_SEND_RESTART;
 10502  004DB0  0E09               	movlw	9
 10503  004DB2  0012               	return		;funcret
 10504  004DB4                     __end_of_I2C_DO_RX_NACK_RESTART:
 10505                           	callstack 0
 10506                           
 10507 ;; *************** function _I2C_DO_RX_NACK_STOP *****************
 10508 ;; Defined at:
 10509 ;;		line 482 in file "mcc_generated_files/i2c_master.c"
 10510 ;; Parameters:    Size  Location     Type
 10511 ;;		None
 10512 ;; Auto vars:     Size  Location     Type
 10513 ;;		None
 10514 ;; Return value:  Size  Location     Type
 10515 ;;                  1    wreg      enum E3103
 10516 ;; Registers used:
 10517 ;;		wreg, cstack
 10518 ;; Tracked objects:
 10519 ;;		On entry : 0/0
 10520 ;;		On exit  : 0/0
 10521 ;;		Unchanged: 0/0
 10522 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10523 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10524 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10525 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10526 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10527 ;;Total ram usage:        0 bytes
 10528 ;; Hardware stack levels used: 1
 10529 ;; Hardware stack levels required when called: 5
 10530 ;; This function calls:
 10531 ;;		_I2C_MasterSendNack
 10532 ;; This function is called by:
 10533 ;;		_I2C_DO_RX
 10534 ;;		_I2C_MasterFsm
 10535 ;; This function uses a non-reentrant model
 10536 ;;
 10537                           
 10538                           	psect	text52
 10539  004DB4                     __ptext52:
 10540                           	callstack 0
 10541  004DB4                     _I2C_DO_RX_NACK_STOP:
 10542                           	callstack 18
 10543  004DB4                     
 10544                           ;mcc_generated_files/i2c_master.c: 484:     I2C_MasterSendNack();
 10545  004DB4  ECF9  F026         	call	_I2C_MasterSendNack	;wreg free
 10546  004DB8                     
 10547                           ;mcc_generated_files/i2c_master.c: 485:     return I2C_SEND_STOP;
 10548  004DB8  0E0A               	movlw	10
 10549  004DBA  0012               	return		;funcret
 10550  004DBC                     __end_of_I2C_DO_RX_NACK_STOP:
 10551                           	callstack 0
 10552                           
 10553 ;; *************** function _I2C_DO_RX_ACK *****************
 10554 ;; Defined at:
 10555 ;;		line 475 in file "mcc_generated_files/i2c_master.c"
 10556 ;; Parameters:    Size  Location     Type
 10557 ;;		None
 10558 ;; Auto vars:     Size  Location     Type
 10559 ;;		None
 10560 ;; Return value:  Size  Location     Type
 10561 ;;                  1    wreg      enum E3103
 10562 ;; Registers used:
 10563 ;;		wreg, cstack
 10564 ;; Tracked objects:
 10565 ;;		On entry : 0/0
 10566 ;;		On exit  : 0/0
 10567 ;;		Unchanged: 0/0
 10568 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10569 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10570 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10571 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10572 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10573 ;;Total ram usage:        0 bytes
 10574 ;; Hardware stack levels used: 1
 10575 ;; Hardware stack levels required when called: 5
 10576 ;; This function calls:
 10577 ;;		_I2C_MasterSendAck
 10578 ;; This function is called by:
 10579 ;;		_I2C_MasterFsm
 10580 ;; This function uses a non-reentrant model
 10581 ;;
 10582                           
 10583                           	psect	text53
 10584  004DBC                     __ptext53:
 10585                           	callstack 0
 10586  004DBC                     _I2C_DO_RX_ACK:
 10587                           	callstack 18
 10588  004DBC                     
 10589                           ;mcc_generated_files/i2c_master.c: 477:     I2C_MasterSendAck();
 10590  004DBC  ECF6  F026         	call	_I2C_MasterSendAck	;wreg free
 10591  004DC0                     
 10592                           ;mcc_generated_files/i2c_master.c: 478:     return I2C_RCEN;
 10593  004DC0  0E05               	movlw	5
 10594  004DC2  0012               	return		;funcret
 10595  004DC4                     __end_of_I2C_DO_RX_ACK:
 10596                           	callstack 0
 10597                           
 10598 ;; *************** function _I2C_DO_SEND_STOP *****************
 10599 ;; Defined at:
 10600 ;;		line 469 in file "mcc_generated_files/i2c_master.c"
 10601 ;; Parameters:    Size  Location     Type
 10602 ;;		None
 10603 ;; Auto vars:     Size  Location     Type
 10604 ;;		None
 10605 ;; Return value:  Size  Location     Type
 10606 ;;                  1    wreg      enum E3103
 10607 ;; Registers used:
 10608 ;;		wreg, cstack
 10609 ;; Tracked objects:
 10610 ;;		On entry : 0/0
 10611 ;;		On exit  : 0/0
 10612 ;;		Unchanged: 0/0
 10613 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10614 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10615 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10616 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10617 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10618 ;;Total ram usage:        0 bytes
 10619 ;; Hardware stack levels used: 1
 10620 ;; Hardware stack levels required when called: 5
 10621 ;; This function calls:
 10622 ;;		_I2C_MasterStop
 10623 ;; This function is called by:
 10624 ;;		_I2C_DO_TX
 10625 ;;		_I2C_DO_TX_EMPTY
 10626 ;;		_I2C_DO_ADDRESS_NACK
 10627 ;;		_I2C_MasterFsm
 10628 ;; This function uses a non-reentrant model
 10629 ;;
 10630                           
 10631                           	psect	text54
 10632  004DC4                     __ptext54:
 10633                           	callstack 0
 10634  004DC4                     _I2C_DO_SEND_STOP:
 10635                           	callstack 17
 10636  004DC4                     
 10637                           ;mcc_generated_files/i2c_master.c: 471:     I2C_MasterStop();
 10638  004DC4  EC0C  F027         	call	_I2C_MasterStop	;wreg free
 10639  004DC8                     
 10640                           ;mcc_generated_files/i2c_master.c: 472:     return I2C_IDLE;
 10641  004DC8  0E00               	movlw	0
 10642  004DCA  0012               	return		;funcret
 10643  004DCC                     __end_of_I2C_DO_SEND_STOP:
 10644                           	callstack 0
 10645                           
 10646 ;; *************** function _I2C_DO_SEND_RESTART *****************
 10647 ;; Defined at:
 10648 ;;		line 463 in file "mcc_generated_files/i2c_master.c"
 10649 ;; Parameters:    Size  Location     Type
 10650 ;;		None
 10651 ;; Auto vars:     Size  Location     Type
 10652 ;;		None
 10653 ;; Return value:  Size  Location     Type
 10654 ;;                  1    wreg      enum E3103
 10655 ;; Registers used:
 10656 ;;		wreg, cstack
 10657 ;; Tracked objects:
 10658 ;;		On entry : 0/0
 10659 ;;		On exit  : 0/0
 10660 ;;		Unchanged: 0/0
 10661 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10662 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10663 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10664 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10665 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10666 ;;Total ram usage:        0 bytes
 10667 ;; Hardware stack levels used: 1
 10668 ;; Hardware stack levels required when called: 5
 10669 ;; This function calls:
 10670 ;;		_I2C_MasterEnableRestart
 10671 ;; This function is called by:
 10672 ;;		_I2C_DO_TX_EMPTY
 10673 ;;		_I2C_DO_ADDRESS_NACK
 10674 ;;		_I2C_MasterFsm
 10675 ;; This function uses a non-reentrant model
 10676 ;;
 10677                           
 10678                           	psect	text55
 10679  004DCC                     __ptext55:
 10680                           	callstack 0
 10681  004DCC                     _I2C_DO_SEND_RESTART:
 10682                           	callstack 17
 10683  004DCC                     
 10684                           ;mcc_generated_files/i2c_master.c: 465:     I2C_MasterEnableRestart();
 10685  004DCC  EC0E  F027         	call	_I2C_MasterEnableRestart	;wreg free
 10686  004DD0                     
 10687                           ;mcc_generated_files/i2c_master.c: 466:     return I2C_SEND_ADR_READ;
 10688  004DD0  0E01               	movlw	1
 10689  004DD2  0012               	return		;funcret
 10690  004DD4                     __end_of_I2C_DO_SEND_RESTART:
 10691                           	callstack 0
 10692                           
 10693 ;; *************** function _I2C_DO_SEND_RESTART_WRITE *****************
 10694 ;; Defined at:
 10695 ;;		line 456 in file "mcc_generated_files/i2c_master.c"
 10696 ;; Parameters:    Size  Location     Type
 10697 ;;		None
 10698 ;; Auto vars:     Size  Location     Type
 10699 ;;		None
 10700 ;; Return value:  Size  Location     Type
 10701 ;;                  1    wreg      enum E3103
 10702 ;; Registers used:
 10703 ;;		wreg, cstack
 10704 ;; Tracked objects:
 10705 ;;		On entry : 0/0
 10706 ;;		On exit  : 0/0
 10707 ;;		Unchanged: 0/0
 10708 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10709 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10710 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10711 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10712 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10713 ;;Total ram usage:        0 bytes
 10714 ;; Hardware stack levels used: 1
 10715 ;; Hardware stack levels required when called: 5
 10716 ;; This function calls:
 10717 ;;		_I2C_MasterEnableRestart
 10718 ;; This function is called by:
 10719 ;;		_I2C_DO_TX
 10720 ;;		_I2C_MasterFsm
 10721 ;; This function uses a non-reentrant model
 10722 ;;
 10723                           
 10724                           	psect	text56
 10725  004DD4                     __ptext56:
 10726                           	callstack 0
 10727  004DD4                     _I2C_DO_SEND_RESTART_WRITE:
 10728                           	callstack 17
 10729  004DD4                     
 10730                           ;mcc_generated_files/i2c_master.c: 458:     I2C_MasterEnableRestart();
 10731  004DD4  EC0E  F027         	call	_I2C_MasterEnableRestart	;wreg free
 10732  004DD8                     
 10733                           ;mcc_generated_files/i2c_master.c: 459:     return I2C_SEND_ADR_WRITE;
 10734  004DD8  0E02               	movlw	2
 10735  004DDA  0012               	return		;funcret
 10736  004DDC                     __end_of_I2C_DO_SEND_RESTART_WRITE:
 10737                           	callstack 0
 10738                           
 10739 ;; *************** function _I2C_DO_SEND_RESTART_READ *****************
 10740 ;; Defined at:
 10741 ;;		line 450 in file "mcc_generated_files/i2c_master.c"
 10742 ;; Parameters:    Size  Location     Type
 10743 ;;		None
 10744 ;; Auto vars:     Size  Location     Type
 10745 ;;		None
 10746 ;; Return value:  Size  Location     Type
 10747 ;;                  1    wreg      enum E3103
 10748 ;; Registers used:
 10749 ;;		wreg, cstack
 10750 ;; Tracked objects:
 10751 ;;		On entry : 0/0
 10752 ;;		On exit  : 0/0
 10753 ;;		Unchanged: 0/0
 10754 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10755 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10756 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10757 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10758 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10759 ;;Total ram usage:        0 bytes
 10760 ;; Hardware stack levels used: 1
 10761 ;; Hardware stack levels required when called: 5
 10762 ;; This function calls:
 10763 ;;		_I2C_MasterEnableRestart
 10764 ;; This function is called by:
 10765 ;;		_I2C_DO_TX
 10766 ;;		_I2C_MasterFsm
 10767 ;; This function uses a non-reentrant model
 10768 ;;
 10769                           
 10770                           	psect	text57
 10771  004DDC                     __ptext57:
 10772                           	callstack 0
 10773  004DDC                     _I2C_DO_SEND_RESTART_READ:
 10774                           	callstack 17
 10775  004DDC                     
 10776                           ;mcc_generated_files/i2c_master.c: 452:     I2C_MasterEnableRestart();
 10777  004DDC  EC0E  F027         	call	_I2C_MasterEnableRestart	;wreg free
 10778  004DE0                     
 10779                           ;mcc_generated_files/i2c_master.c: 453:     return I2C_SEND_ADR_READ;
 10780  004DE0  0E01               	movlw	1
 10781  004DE2  0012               	return		;funcret
 10782  004DE4                     __end_of_I2C_DO_SEND_RESTART_READ:
 10783                           	callstack 0
 10784                           
 10785 ;; *************** function _I2C_DO_RCEN *****************
 10786 ;; Defined at:
 10787 ;;		line 402 in file "mcc_generated_files/i2c_master.c"
 10788 ;; Parameters:    Size  Location     Type
 10789 ;;		None
 10790 ;; Auto vars:     Size  Location     Type
 10791 ;;		None
 10792 ;; Return value:  Size  Location     Type
 10793 ;;                  1    wreg      enum E3103
 10794 ;; Registers used:
 10795 ;;		wreg, cstack
 10796 ;; Tracked objects:
 10797 ;;		On entry : 0/0
 10798 ;;		On exit  : 0/0
 10799 ;;		Unchanged: 0/0
 10800 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10801 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10802 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10803 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10804 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10805 ;;Total ram usage:        0 bytes
 10806 ;; Hardware stack levels used: 1
 10807 ;; Hardware stack levels required when called: 5
 10808 ;; This function calls:
 10809 ;;		_I2C_MasterStartRx
 10810 ;; This function is called by:
 10811 ;;		_I2C_MasterFsm
 10812 ;; This function uses a non-reentrant model
 10813 ;;
 10814                           
 10815                           	psect	text58
 10816  004D3E                     __ptext58:
 10817                           	callstack 0
 10818  004D3E                     _I2C_DO_RCEN:
 10819                           	callstack 18
 10820  004D3E                     
 10821                           ;mcc_generated_files/i2c_master.c: 404:     I2C_Status.addressNackCheck = 0;
 10822  004D3E  0100               	movlb	0	; () banked
 10823  004D40  91DB               	bcf	(_I2C_Status+35)& (0+255),0,b
 10824  004D42                     
 10825                           ; BSR set to: 0
 10826                           ;mcc_generated_files/i2c_master.c: 405:     I2C_MasterStartRx();
 10827  004D42  EC06  F027         	call	_I2C_MasterStartRx	;wreg free
 10828  004D46                     
 10829                           ;mcc_generated_files/i2c_master.c: 406:     return I2C_RX;
 10830  004D46  0E04               	movlw	4
 10831  004D48  0012               	return		;funcret
 10832  004D4A                     __end_of_I2C_DO_RCEN:
 10833                           	callstack 0
 10834                           
 10835 ;; *************** function _I2C_DO_RX *****************
 10836 ;; Defined at:
 10837 ;;		line 378 in file "mcc_generated_files/i2c_master.c"
 10838 ;; Parameters:    Size  Location     Type
 10839 ;;		None
 10840 ;; Auto vars:     Size  Location     Type
 10841 ;;		None
 10842 ;; Return value:  Size  Location     Type
 10843 ;;                  1    wreg      enum E3103
 10844 ;; Registers used:
 10845 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 10846 ;; Tracked objects:
 10847 ;;		On entry : 0/0
 10848 ;;		On exit  : 0/0
 10849 ;;		Unchanged: 0/0
 10850 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10851 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10852 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10853 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10854 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10855 ;;Total ram usage:        2 bytes
 10856 ;; Hardware stack levels used: 1
 10857 ;; Hardware stack levels required when called: 7
 10858 ;; This function calls:
 10859 ;;		Absolute function
 10860 ;;		_I2C_CallbackReturnReset
 10861 ;;		_I2C_CallbackReturnStop
 10862 ;;		_I2C_DO_RX_NACK_RESTART
 10863 ;;		_I2C_DO_RX_NACK_STOP
 10864 ;;		_I2C_MasterGetRxData
 10865 ;;		_I2C_MasterSendAck
 10866 ;;		_rd1RegCompleteHandler
 10867 ;;		_rd2RegCompleteHandler
 10868 ;;		_rdBlkRegCompleteHandler
 10869 ;;		_wr1RegCompleteHandler
 10870 ;;		_wr2RegCompleteHandler
 10871 ;; This function is called by:
 10872 ;;		_I2C_MasterFsm
 10873 ;; This function uses a non-reentrant model
 10874 ;;
 10875                           
 10876                           	psect	text59
 10877  0041C0                     __ptext59:
 10878                           	callstack 0
 10879  0041C0                     _I2C_DO_RX:
 10880                           	callstack 16
 10881  0041C0                     
 10882                           ;mcc_generated_files/i2c_master.c: 380:     *I2C_Status.data_ptr++ = I2C_MasterGetRxData
      +                          ();
 10883  0041C0  EC04  F027         	call	_I2C_MasterGetRxData	;wreg free
 10884  0041C4  C0D5  FFD9         	movff	_I2C_Status+29,fsr2l
 10885  0041C8  C0D6  FFDA         	movff	_I2C_Status+30,fsr2h
 10886  0041CC  6EDF               	movwf	indf2,c
 10887  0041CE  0100               	movlb	0	; () banked
 10888  0041D0  4BD5               	infsnz	(_I2C_Status+29)& (0+255),f,b
 10889  0041D2  2BD6               	incf	(_I2C_Status+30)& (0+255),f,b
 10890  0041D4                     
 10891                           ; BSR set to: 0
 10892                           ;mcc_generated_files/i2c_master.c: 381:     if(--I2C_Status.data_length)
 10893  0041D4  07D7               	decf	(_I2C_Status+31)& (0+255),f,b
 10894  0041D6  A0D8               	btfss	status,0,c
 10895  0041D8  07D8               	decf	(_I2C_Status+32)& (0+255),f,b
 10896  0041DA  51D7               	movf	(_I2C_Status+31)& (0+255),w,b
 10897  0041DC  11D8               	iorwf	(_I2C_Status+32)& (0+255),w,b
 10898  0041DE  B4D8               	btfsc	status,2,c
 10899  0041E0  EFF4  F020         	goto	u3151
 10900  0041E4  EFF6  F020         	goto	u3150
 10901  0041E8                     u3151:
 10902  0041E8  EFFB  F020         	goto	l294
 10903  0041EC                     u3150:
 10904  0041EC                     
 10905                           ; BSR set to: 0
 10906                           ;mcc_generated_files/i2c_master.c: 382:     {;mcc_generated_files/i2c_master.c: 383:    
      +                               I2C_MasterSendAck();
 10907  0041EC  ECF6  F026         	call	_I2C_MasterSendAck	;wreg free
 10908  0041F0                     
 10909                           ;mcc_generated_files/i2c_master.c: 384:         return I2C_RCEN;
 10910  0041F0  0E05               	movlw	5
 10911  0041F2  EF32  F021         	goto	l295
 10912  0041F6                     l294:
 10913                           
 10914                           ; BSR set to: 0
 10915                           ;mcc_generated_files/i2c_master.c: 387:     {;mcc_generated_files/i2c_master.c: 388:    
      +                               I2C_Status.bufferFree = 1;
 10916  0041F6  87DB               	bsf	(_I2C_Status+35)& (0+255),3,b
 10917                           
 10918                           ;mcc_generated_files/i2c_master.c: 389:         switch(I2C_Status.callbackTable[I2C_DATA
      +                          _COMPLETE](I2C_Status.callbackPayload[I2C_DATA_COMPLETE]))
 10919  0041F8  EF06  F021         	goto	l4301
 10920  0041FC                     l4291:
 10921                           
 10922                           ;mcc_generated_files/i2c_master.c: 393:                 return I2C_DO_RX_NACK_RESTART();
 10923  0041FC  ECD6  F026         	call	_I2C_DO_RX_NACK_RESTART	;wreg free
 10924  004200  EF32  F021         	goto	l295
 10925  004204                     l4295:
 10926                           
 10927                           ;mcc_generated_files/i2c_master.c: 397:                 return I2C_DO_RX_NACK_STOP();
 10928  004204  ECDA  F026         	call	_I2C_DO_RX_NACK_STOP	;wreg free
 10929  004208  EF32  F021         	goto	l295
 10930  00420C                     l4301:
 10931                           
 10932                           ; BSR set to: 0
 10933  00420C  C0C4  F00E         	movff	_I2C_Status+12,I2C_CallbackReturnReset@funPtr
 10934  004210  C0C5  F00F         	movff	_I2C_Status+13,I2C_CallbackReturnReset@funPtr+1
 10935  004214  D802               	call	u3168
 10936  004216  EF16  F021         	goto	u3169
 10937  00421A                     u3168:
 10938  00421A  0005               	push	
 10939  00421C  6EFA               	movwf	pclath,c
 10940  00421E  51B8               	movf	_I2C_Status& (0+255),w,b
 10941  004220  6EFD               	movwf	tosl,c
 10942  004222  51B9               	movf	(_I2C_Status+1)& (0+255),w,b
 10943  004224  6EFE               	movwf	tosh,c
 10944  004226  6AFF               	clrf	tosu,c
 10945  004228  50FA               	movf	pclath,w,c
 10946  00422A  0012               	return		;indir
 10947  00422C                     u3169:
 10948  00422C  6E10               	movwf	??_I2C_DO_RX^0,c
 10949  00422E  6A11               	clrf	(??_I2C_DO_RX+1)^0,c
 10950                           
 10951                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10952                           ; Switch size 1, requested type "simple"
 10953                           ; Number of cases is 1, Range of values is 0 to 0
 10954                           ; switch strategies available:
 10955                           ; Name         Instructions Cycles
 10956                           ; simple_byte            4     3 (average)
 10957                           ;	Chosen strategy is simple_byte
 10958  004230  5011               	movf	(??_I2C_DO_RX+1)^0,w,c
 10959  004232  0A00               	xorlw	0	; case 0
 10960  004234  B4D8               	btfsc	status,2,c
 10961  004236  EF1F  F021         	goto	l7963
 10962  00423A  EF02  F021         	goto	l4295
 10963  00423E                     l7963:
 10964                           
 10965                           ; Switch size 1, requested type "simple"
 10966                           ; Number of cases is 4, Range of values is 1 to 4
 10967                           ; switch strategies available:
 10968                           ; Name         Instructions Cycles
 10969                           ; simple_byte           13     7 (average)
 10970                           ;	Chosen strategy is simple_byte
 10971  00423E  5010               	movf	??_I2C_DO_RX^0,w,c
 10972  004240  0A01               	xorlw	1	; case 1
 10973  004242  B4D8               	btfsc	status,2,c
 10974  004244  EF02  F021         	goto	l4295
 10975  004248  0A03               	xorlw	3	; case 2
 10976  00424A  B4D8               	btfsc	status,2,c
 10977  00424C  EFFE  F020         	goto	l4291
 10978  004250  0A01               	xorlw	1	; case 3
 10979  004252  B4D8               	btfsc	status,2,c
 10980  004254  EFFE  F020         	goto	l4291
 10981  004258  0A07               	xorlw	7	; case 4
 10982  00425A  B4D8               	btfsc	status,2,c
 10983  00425C  EF02  F021         	goto	l4295
 10984  004260  EF02  F021         	goto	l4295
 10985  004264                     l295:
 10986  004264  0012               	return		;funcret
 10987  004266                     __end_of_I2C_DO_RX:
 10988                           	callstack 0
 10989                           
 10990 ;; *************** function _I2C_DO_TX *****************
 10991 ;; Defined at:
 10992 ;;		line 354 in file "mcc_generated_files/i2c_master.c"
 10993 ;; Parameters:    Size  Location     Type
 10994 ;;		None
 10995 ;; Auto vars:     Size  Location     Type
 10996 ;;		None
 10997 ;; Return value:  Size  Location     Type
 10998 ;;                  1    wreg      enum E3103
 10999 ;; Registers used:
 11000 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 11001 ;; Tracked objects:
 11002 ;;		On entry : 0/0
 11003 ;;		On exit  : 0/0
 11004 ;;		Unchanged: 0/0
 11005 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11006 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11007 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11008 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11009 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11010 ;;Total ram usage:        2 bytes
 11011 ;; Hardware stack levels used: 1
 11012 ;; Hardware stack levels required when called: 7
 11013 ;; This function calls:
 11014 ;;		Absolute function
 11015 ;;		_I2C_CallbackReturnReset
 11016 ;;		_I2C_CallbackReturnStop
 11017 ;;		_I2C_DO_SEND_RESTART_READ
 11018 ;;		_I2C_DO_SEND_RESTART_WRITE
 11019 ;;		_I2C_DO_SEND_STOP
 11020 ;;		_I2C_MasterIsNack
 11021 ;;		_I2C_MasterSendTxData
 11022 ;;		_rd1RegCompleteHandler
 11023 ;;		_rd2RegCompleteHandler
 11024 ;;		_rdBlkRegCompleteHandler
 11025 ;;		_wr1RegCompleteHandler
 11026 ;;		_wr2RegCompleteHandler
 11027 ;; This function is called by:
 11028 ;;		_I2C_MasterFsm
 11029 ;; This function uses a non-reentrant model
 11030 ;;
 11031                           
 11032                           	psect	text60
 11033  003CAC                     __ptext60:
 11034                           	callstack 0
 11035  003CAC                     _I2C_DO_TX:
 11036                           	callstack 16
 11037  003CAC                     
 11038                           ;mcc_generated_files/i2c_master.c: 356:     if(I2C_MasterIsNack())
 11039  003CAC  EC6D  F026         	call	_I2C_MasterIsNack	;wreg free
 11040  003CB0  0900               	iorlw	0
 11041  003CB2  B4D8               	btfsc	status,2,c
 11042  003CB4  EF5E  F01E         	goto	u3121
 11043  003CB8  EF60  F01E         	goto	u3120
 11044  003CBC                     u3121:
 11045  003CBC  EF9B  F01E         	goto	l278
 11046  003CC0                     u3120:
 11047  003CC0  EF6E  F01E         	goto	l4261
 11048  003CC4                     l4247:
 11049                           
 11050                           ;mcc_generated_files/i2c_master.c: 361:                 return I2C_DO_SEND_RESTART_READ(
      +                          );
 11051  003CC4  ECEE  F026         	call	_I2C_DO_SEND_RESTART_READ	;wreg free
 11052  003CC8  EFB7  F01E         	goto	l281
 11053  003CCC                     l4251:
 11054                           
 11055                           ;mcc_generated_files/i2c_master.c: 363:                   return I2C_DO_SEND_RESTART_WRI
      +                          TE();
 11056  003CCC  ECEA  F026         	call	_I2C_DO_SEND_RESTART_WRITE	;wreg free
 11057  003CD0  EFB7  F01E         	goto	l281
 11058  003CD4                     l4255:
 11059                           
 11060                           ;mcc_generated_files/i2c_master.c: 367:                 return I2C_DO_SEND_STOP();
 11061  003CD4  ECE2  F026         	call	_I2C_DO_SEND_STOP	;wreg free
 11062  003CD8  EFB7  F01E         	goto	l281
 11063  003CDC                     l4261:
 11064  003CDC  C0CA  F00E         	movff	_I2C_Status+18,I2C_CallbackReturnReset@funPtr
 11065  003CE0  C0CB  F00F         	movff	_I2C_Status+19,I2C_CallbackReturnReset@funPtr+1
 11066  003CE4  D802               	call	u3138
 11067  003CE6  EF7F  F01E         	goto	u3139
 11068  003CEA                     u3138:
 11069  003CEA  0005               	push	
 11070  003CEC  6EFA               	movwf	pclath,c
 11071  003CEE  0100               	movlb	0	; () banked
 11072  003CF0  51BE               	movf	(_I2C_Status+6)& (0+255),w,b
 11073  003CF2  6EFD               	movwf	tosl,c
 11074  003CF4  51BF               	movf	(_I2C_Status+7)& (0+255),w,b
 11075  003CF6  6EFE               	movwf	tosh,c
 11076  003CF8  6AFF               	clrf	tosu,c
 11077  003CFA  50FA               	movf	pclath,w,c
 11078  003CFC  0012               	return		;indir
 11079  003CFE                     u3139:
 11080  003CFE  6E10               	movwf	??_I2C_DO_TX^0,c
 11081  003D00  6A11               	clrf	(??_I2C_DO_TX+1)^0,c
 11082                           
 11083                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 11084                           ; Switch size 1, requested type "simple"
 11085                           ; Number of cases is 1, Range of values is 0 to 0
 11086                           ; switch strategies available:
 11087                           ; Name         Instructions Cycles
 11088                           ; simple_byte            4     3 (average)
 11089                           ;	Chosen strategy is simple_byte
 11090  003D02  5011               	movf	(??_I2C_DO_TX+1)^0,w,c
 11091  003D04  0A00               	xorlw	0	; case 0
 11092  003D06  B4D8               	btfsc	status,2,c
 11093  003D08  EF88  F01E         	goto	l7965
 11094  003D0C  EF6A  F01E         	goto	l4255
 11095  003D10                     l7965:
 11096                           
 11097                           ; Switch size 1, requested type "simple"
 11098                           ; Number of cases is 4, Range of values is 1 to 4
 11099                           ; switch strategies available:
 11100                           ; Name         Instructions Cycles
 11101                           ; simple_byte           13     7 (average)
 11102                           ;	Chosen strategy is simple_byte
 11103  003D10  5010               	movf	??_I2C_DO_TX^0,w,c
 11104  003D12  0A01               	xorlw	1	; case 1
 11105  003D14  B4D8               	btfsc	status,2,c
 11106  003D16  EF6A  F01E         	goto	l4255
 11107  003D1A  0A03               	xorlw	3	; case 2
 11108  003D1C  B4D8               	btfsc	status,2,c
 11109  003D1E  EF62  F01E         	goto	l4247
 11110  003D22  0A01               	xorlw	1	; case 3
 11111  003D24  B4D8               	btfsc	status,2,c
 11112  003D26  EF66  F01E         	goto	l4251
 11113  003D2A  0A07               	xorlw	7	; case 4
 11114  003D2C  B4D8               	btfsc	status,2,c
 11115  003D2E  EF6A  F01E         	goto	l4255
 11116  003D32  EF6A  F01E         	goto	l4255
 11117  003D36                     l278:
 11118                           
 11119                           ;mcc_generated_files/i2c_master.c: 371:     {;mcc_generated_files/i2c_master.c: 372:    
      +                               I2C_Status.addressNackCheck = 0;
 11120  003D36  0100               	movlb	0	; () banked
 11121  003D38  91DB               	bcf	(_I2C_Status+35)& (0+255),0,b
 11122  003D3A                     
 11123                           ; BSR set to: 0
 11124                           ;mcc_generated_files/i2c_master.c: 373:         I2C_MasterSendTxData(*I2C_Status.data_pt
      +                          r++);
 11125  003D3A  C0D5  FFD9         	movff	_I2C_Status+29,fsr2l
 11126  003D3E  C0D6  FFDA         	movff	_I2C_Status+30,fsr2h
 11127  003D42  4BD5               	infsnz	(_I2C_Status+29)& (0+255),f,b
 11128  003D44  2BD6               	incf	(_I2C_Status+30)& (0+255),f,b
 11129  003D46  50DF               	movf	indf2,w,c
 11130  003D48  ECF2  F026         	call	_I2C_MasterSendTxData
 11131  003D4C                     
 11132                           ;mcc_generated_files/i2c_master.c: 374:         return (--I2C_Status.data_length)?I2C_TX
      +                          :I2C_TX_EMPTY;
 11133  003D4C  0100               	movlb	0	; () banked
 11134  003D4E  07D7               	decf	(_I2C_Status+31)& (0+255),f,b
 11135  003D50  A0D8               	btfss	status,0,c
 11136  003D52  07D8               	decf	(_I2C_Status+32)& (0+255),f,b
 11137  003D54  51D7               	movf	(_I2C_Status+31)& (0+255),w,b
 11138  003D56  11D8               	iorwf	(_I2C_Status+32)& (0+255),w,b
 11139  003D58  A4D8               	btfss	status,2,c
 11140  003D5A  EFB1  F01E         	goto	u3141
 11141  003D5E  EFB3  F01E         	goto	u3140
 11142  003D62                     u3141:
 11143  003D62  EFB6  F01E         	goto	l4269
 11144  003D66                     u3140:
 11145  003D66                     
 11146                           ; BSR set to: 0
 11147  003D66  0E06               	movlw	6
 11148  003D68  EFB7  F01E         	goto	l281
 11149  003D6C                     l4269:
 11150                           
 11151                           ; BSR set to: 0
 11152  003D6C  0E03               	movlw	3
 11153  003D6E                     l281:
 11154  003D6E  0012               	return		;funcret
 11155  003D70                     __end_of_I2C_DO_TX:
 11156                           	callstack 0
 11157                           
 11158 ;; *************** function _I2C_DO_SEND_ADR_WRITE *****************
 11159 ;; Defined at:
 11160 ;;		line 347 in file "mcc_generated_files/i2c_master.c"
 11161 ;; Parameters:    Size  Location     Type
 11162 ;;		None
 11163 ;; Auto vars:     Size  Location     Type
 11164 ;;		None
 11165 ;; Return value:  Size  Location     Type
 11166 ;;                  1    wreg      enum E3103
 11167 ;; Registers used:
 11168 ;;		wreg, status,2, status,0, cstack
 11169 ;; Tracked objects:
 11170 ;;		On entry : 0/0
 11171 ;;		On exit  : 0/0
 11172 ;;		Unchanged: 0/0
 11173 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11174 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11175 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11176 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11177 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11178 ;;Total ram usage:        0 bytes
 11179 ;; Hardware stack levels used: 1
 11180 ;; Hardware stack levels required when called: 5
 11181 ;; This function calls:
 11182 ;;		_I2C_MasterSendTxData
 11183 ;; This function is called by:
 11184 ;;		_I2C_MasterFsm
 11185 ;; This function uses a non-reentrant model
 11186 ;;
 11187                           
 11188                           	psect	text61
 11189  004D12                     __ptext61:
 11190                           	callstack 0
 11191  004D12                     _I2C_DO_SEND_ADR_WRITE:
 11192                           	callstack 18
 11193  004D12                     
 11194                           ;mcc_generated_files/i2c_master.c: 349:     I2C_Status.addressNackCheck = 1;
 11195  004D12  0100               	movlb	0	; () banked
 11196  004D14  81DB               	bsf	(_I2C_Status+35)& (0+255),0,b
 11197  004D16                     
 11198                           ; BSR set to: 0
 11199                           ;mcc_generated_files/i2c_master.c: 350:     I2C_MasterSendTxData(I2C_Status.address << 1
      +                          );
 11200  004D16  51D4               	movf	(_I2C_Status+28)& (0+255),w,b
 11201  004D18  25D4               	addwf	(_I2C_Status+28)& (0+255),w,b
 11202  004D1A  ECF2  F026         	call	_I2C_MasterSendTxData
 11203  004D1E                     
 11204                           ;mcc_generated_files/i2c_master.c: 351:     return I2C_TX;
 11205  004D1E  0E03               	movlw	3
 11206  004D20  0012               	return		;funcret
 11207  004D22                     __end_of_I2C_DO_SEND_ADR_WRITE:
 11208                           	callstack 0
 11209                           
 11210 ;; *************** function _I2C_DO_SEND_ADR_READ *****************
 11211 ;; Defined at:
 11212 ;;		line 340 in file "mcc_generated_files/i2c_master.c"
 11213 ;; Parameters:    Size  Location     Type
 11214 ;;		None
 11215 ;; Auto vars:     Size  Location     Type
 11216 ;;		None
 11217 ;; Return value:  Size  Location     Type
 11218 ;;                  1    wreg      enum E3103
 11219 ;; Registers used:
 11220 ;;		wreg, status,0, cstack
 11221 ;; Tracked objects:
 11222 ;;		On entry : 0/0
 11223 ;;		On exit  : 0/0
 11224 ;;		Unchanged: 0/0
 11225 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11226 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11227 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11228 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11229 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11230 ;;Total ram usage:        0 bytes
 11231 ;; Hardware stack levels used: 1
 11232 ;; Hardware stack levels required when called: 5
 11233 ;; This function calls:
 11234 ;;		_I2C_MasterSendTxData
 11235 ;; This function is called by:
 11236 ;;		_I2C_MasterFsm
 11237 ;; This function uses a non-reentrant model
 11238 ;;
 11239                           
 11240                           	psect	text62
 11241  004D22                     __ptext62:
 11242                           	callstack 0
 11243  004D22                     _I2C_DO_SEND_ADR_READ:
 11244                           	callstack 18
 11245  004D22                     
 11246                           ;mcc_generated_files/i2c_master.c: 342:     I2C_Status.addressNackCheck = 1;
 11247  004D22  0100               	movlb	0	; () banked
 11248  004D24  81DB               	bsf	(_I2C_Status+35)& (0+255),0,b
 11249  004D26                     
 11250                           ; BSR set to: 0
 11251                           ;mcc_generated_files/i2c_master.c: 343:     I2C_MasterSendTxData(I2C_Status.address << 1
      +                           | 1);
 11252  004D26  80D8               	bsf	status,0,c
 11253  004D28  35D4               	rlcf	(_I2C_Status+28)& (0+255),w,b
 11254  004D2A  ECF2  F026         	call	_I2C_MasterSendTxData
 11255  004D2E                     
 11256                           ;mcc_generated_files/i2c_master.c: 344:     return I2C_RCEN;
 11257  004D2E  0E05               	movlw	5
 11258  004D30  0012               	return		;funcret
 11259  004D32                     __end_of_I2C_DO_SEND_ADR_READ:
 11260                           	callstack 0
 11261                           
 11262 ;; *************** function _I2C_DO_IDLE *****************
 11263 ;; Defined at:
 11264 ;;		line 333 in file "mcc_generated_files/i2c_master.c"
 11265 ;; Parameters:    Size  Location     Type
 11266 ;;		None
 11267 ;; Auto vars:     Size  Location     Type
 11268 ;;		None
 11269 ;; Return value:  Size  Location     Type
 11270 ;;                  1    wreg      enum E3103
 11271 ;; Registers used:
 11272 ;;		wreg, status,2
 11273 ;; Tracked objects:
 11274 ;;		On entry : 0/0
 11275 ;;		On exit  : 0/0
 11276 ;;		Unchanged: 0/0
 11277 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11278 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11279 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11280 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11281 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11282 ;;Total ram usage:        0 bytes
 11283 ;; Hardware stack levels used: 1
 11284 ;; Hardware stack levels required when called: 4
 11285 ;; This function calls:
 11286 ;;		Nothing
 11287 ;; This function is called by:
 11288 ;;		_I2C_MasterFsm
 11289 ;; This function uses a non-reentrant model
 11290 ;;
 11291                           
 11292                           	psect	text63
 11293  004D4A                     __ptext63:
 11294                           	callstack 0
 11295  004D4A                     _I2C_DO_IDLE:
 11296                           	callstack 19
 11297  004D4A                     
 11298                           ;mcc_generated_files/i2c_master.c: 335:     I2C_Status.busy = 0;
 11299  004D4A  0100               	movlb	0	; () banked
 11300  004D4C  93DB               	bcf	(_I2C_Status+35)& (0+255),1,b
 11301  004D4E                     
 11302                           ; BSR set to: 0
 11303                           ;mcc_generated_files/i2c_master.c: 336:     I2C_Status.error = I2C_NOERR;
 11304  004D4E  0E00               	movlw	0
 11305  004D50  6FDA               	movwf	(_I2C_Status+34)& (0+255),b
 11306  004D52                     
 11307                           ; BSR set to: 0
 11308                           ;mcc_generated_files/i2c_master.c: 337:     return I2C_RESET;
 11309  004D52  0E0E               	movlw	14
 11310  004D54                     
 11311                           ; BSR set to: 0
 11312  004D54  0012               	return		;funcret
 11313  004D56                     __end_of_I2C_DO_IDLE:
 11314                           	callstack 0
 11315                           
 11316 ;; *************** function _I2C_DO_TX_EMPTY *****************
 11317 ;; Defined at:
 11318 ;;		line 409 in file "mcc_generated_files/i2c_master.c"
 11319 ;; Parameters:    Size  Location     Type
 11320 ;;		None
 11321 ;; Auto vars:     Size  Location     Type
 11322 ;;		None
 11323 ;; Return value:  Size  Location     Type
 11324 ;;                  1    wreg      enum E3103
 11325 ;; Registers used:
 11326 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 11327 ;; Tracked objects:
 11328 ;;		On entry : 0/0
 11329 ;;		On exit  : 0/0
 11330 ;;		Unchanged: 0/0
 11331 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11332 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11333 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11334 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11335 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11336 ;;Total ram usage:        2 bytes
 11337 ;; Hardware stack levels used: 1
 11338 ;; Hardware stack levels required when called: 7
 11339 ;; This function calls:
 11340 ;;		Absolute function
 11341 ;;		_I2C_CallbackReturnReset
 11342 ;;		_I2C_CallbackReturnStop
 11343 ;;		_I2C_DO_SEND_RESTART
 11344 ;;		_I2C_DO_SEND_STOP
 11345 ;;		_I2C_MasterSetIrq
 11346 ;;		_rd1RegCompleteHandler
 11347 ;;		_rd2RegCompleteHandler
 11348 ;;		_rdBlkRegCompleteHandler
 11349 ;;		_wr1RegCompleteHandler
 11350 ;;		_wr2RegCompleteHandler
 11351 ;; This function is called by:
 11352 ;;		_I2C_MasterFsm
 11353 ;; This function uses a non-reentrant model
 11354 ;;
 11355                           
 11356                           	psect	text64
 11357  00438A                     __ptext64:
 11358                           	callstack 0
 11359  00438A                     _I2C_DO_TX_EMPTY:
 11360                           	callstack 16
 11361  00438A                     
 11362                           ;mcc_generated_files/i2c_master.c: 411:     I2C_Status.bufferFree = 1;
 11363  00438A  0100               	movlb	0	; () banked
 11364  00438C  87DB               	bsf	(_I2C_Status+35)& (0+255),3,b
 11365                           
 11366                           ;mcc_generated_files/i2c_master.c: 412:     switch(I2C_Status.callbackTable[I2C_DATA_COM
      +                          PLETE](I2C_Status.callbackPayload[I2C_DATA_COMPLETE]))
 11367  00438E  EFD6  F021         	goto	l4333
 11368  004392                     l4317:
 11369                           
 11370                           ;mcc_generated_files/i2c_master.c: 416:             return I2C_DO_SEND_RESTART();
 11371  004392  ECE6  F026         	call	_I2C_DO_SEND_RESTART	;wreg free
 11372  004396  EF02  F022         	goto	l312
 11373  00439A                     l4321:
 11374                           
 11375                           ;mcc_generated_files/i2c_master.c: 418:             I2C_MasterSetIrq();
 11376  00439A  EC02  F027         	call	_I2C_MasterSetIrq	;wreg free
 11377  00439E                     
 11378                           ;mcc_generated_files/i2c_master.c: 419:             return I2C_TX;
 11379  00439E  0E03               	movlw	3
 11380  0043A0  EF02  F022         	goto	l312
 11381  0043A4                     l4327:
 11382                           
 11383                           ;mcc_generated_files/i2c_master.c: 422:             return I2C_DO_SEND_STOP();
 11384  0043A4  ECE2  F026         	call	_I2C_DO_SEND_STOP	;wreg free
 11385  0043A8  EF02  F022         	goto	l312
 11386  0043AC                     l4333:
 11387                           
 11388                           ; BSR set to: 0
 11389  0043AC  C0C4  F00E         	movff	_I2C_Status+12,I2C_CallbackReturnReset@funPtr
 11390  0043B0  C0C5  F00F         	movff	_I2C_Status+13,I2C_CallbackReturnReset@funPtr+1
 11391  0043B4  D802               	call	u3178
 11392  0043B6  EFE6  F021         	goto	u3179
 11393  0043BA                     u3178:
 11394  0043BA  0005               	push	
 11395  0043BC  6EFA               	movwf	pclath,c
 11396  0043BE  51B8               	movf	_I2C_Status& (0+255),w,b
 11397  0043C0  6EFD               	movwf	tosl,c
 11398  0043C2  51B9               	movf	(_I2C_Status+1)& (0+255),w,b
 11399  0043C4  6EFE               	movwf	tosh,c
 11400  0043C6  6AFF               	clrf	tosu,c
 11401  0043C8  50FA               	movf	pclath,w,c
 11402  0043CA  0012               	return		;indir
 11403  0043CC                     u3179:
 11404  0043CC  6E10               	movwf	??_I2C_DO_TX_EMPTY^0,c
 11405  0043CE  6A11               	clrf	(??_I2C_DO_TX_EMPTY+1)^0,c
 11406                           
 11407                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 11408                           ; Switch size 1, requested type "simple"
 11409                           ; Number of cases is 1, Range of values is 0 to 0
 11410                           ; switch strategies available:
 11411                           ; Name         Instructions Cycles
 11412                           ; simple_byte            4     3 (average)
 11413                           ;	Chosen strategy is simple_byte
 11414  0043D0  5011               	movf	(??_I2C_DO_TX_EMPTY+1)^0,w,c
 11415  0043D2  0A00               	xorlw	0	; case 0
 11416  0043D4  B4D8               	btfsc	status,2,c
 11417  0043D6  EFEF  F021         	goto	l7967
 11418  0043DA  EFD2  F021         	goto	l4327
 11419  0043DE                     l7967:
 11420                           
 11421                           ; Switch size 1, requested type "simple"
 11422                           ; Number of cases is 4, Range of values is 1 to 4
 11423                           ; switch strategies available:
 11424                           ; Name         Instructions Cycles
 11425                           ; simple_byte           13     7 (average)
 11426                           ;	Chosen strategy is simple_byte
 11427  0043DE  5010               	movf	??_I2C_DO_TX_EMPTY^0,w,c
 11428  0043E0  0A01               	xorlw	1	; case 1
 11429  0043E2  B4D8               	btfsc	status,2,c
 11430  0043E4  EFD2  F021         	goto	l4327
 11431  0043E8  0A03               	xorlw	3	; case 2
 11432  0043EA  B4D8               	btfsc	status,2,c
 11433  0043EC  EFC9  F021         	goto	l4317
 11434  0043F0  0A01               	xorlw	1	; case 3
 11435  0043F2  B4D8               	btfsc	status,2,c
 11436  0043F4  EFC9  F021         	goto	l4317
 11437  0043F8  0A07               	xorlw	7	; case 4
 11438  0043FA  B4D8               	btfsc	status,2,c
 11439  0043FC  EFCD  F021         	goto	l4321
 11440  004400  EFD2  F021         	goto	l4327
 11441  004404                     l312:
 11442  004404  0012               	return		;funcret
 11443  004406                     __end_of_I2C_DO_TX_EMPTY:
 11444                           	callstack 0
 11445                           
 11446 ;; *************** function _I2C_MasterSetIrq *****************
 11447 ;; Defined at:
 11448 ;;		line 645 in file "mcc_generated_files/i2c_master.c"
 11449 ;; Parameters:    Size  Location     Type
 11450 ;;		None
 11451 ;; Auto vars:     Size  Location     Type
 11452 ;;		None
 11453 ;; Return value:  Size  Location     Type
 11454 ;;                  1    wreg      void 
 11455 ;; Registers used:
 11456 ;;		None
 11457 ;; Tracked objects:
 11458 ;;		On entry : 0/0
 11459 ;;		On exit  : 0/0
 11460 ;;		Unchanged: 0/0
 11461 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11462 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11463 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11464 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11465 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11466 ;;Total ram usage:        0 bytes
 11467 ;; Hardware stack levels used: 1
 11468 ;; Hardware stack levels required when called: 4
 11469 ;; This function calls:
 11470 ;;		Nothing
 11471 ;; This function is called by:
 11472 ;;		_I2C_DO_TX_EMPTY
 11473 ;; This function uses a non-reentrant model
 11474 ;;
 11475                           
 11476                           	psect	text65
 11477  004E04                     __ptext65:
 11478                           	callstack 0
 11479  004E04                     _I2C_MasterSetIrq:
 11480                           	callstack 18
 11481  004E04                     
 11482                           ;mcc_generated_files/i2c_master.c: 647:     PIR1bits.SSPIF = 1;
 11483  004E04  869E               	bsf	158,3,c	;volatile
 11484  004E06  0012               	return		;funcret
 11485  004E08                     __end_of_I2C_MasterSetIrq:
 11486                           	callstack 0
 11487                           
 11488 ;; *************** function _I2C_MasterIsNack *****************
 11489 ;; Defined at:
 11490 ;;		line 598 in file "mcc_generated_files/i2c_master.c"
 11491 ;; Parameters:    Size  Location     Type
 11492 ;;		None
 11493 ;; Auto vars:     Size  Location     Type
 11494 ;;		None
 11495 ;; Return value:  Size  Location     Type
 11496 ;;                  1    wreg      _Bool 
 11497 ;; Registers used:
 11498 ;;		wreg
 11499 ;; Tracked objects:
 11500 ;;		On entry : 0/0
 11501 ;;		On exit  : 0/0
 11502 ;;		Unchanged: 0/0
 11503 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11504 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11505 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11506 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11507 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11508 ;;Total ram usage:        0 bytes
 11509 ;; Hardware stack levels used: 1
 11510 ;; Hardware stack levels required when called: 4
 11511 ;; This function calls:
 11512 ;;		Nothing
 11513 ;; This function is called by:
 11514 ;;		_I2C_MasterFsm
 11515 ;;		_I2C_DO_TX
 11516 ;; This function uses a non-reentrant model
 11517 ;;
 11518                           
 11519                           	psect	text66
 11520  004CDA                     __ptext66:
 11521                           	callstack 0
 11522  004CDA                     _I2C_MasterIsNack:
 11523                           	callstack 19
 11524  004CDA                     
 11525                           ;mcc_generated_files/i2c_master.c: 600:     return SSPCON2bits.ACKSTAT;
 11526  004CDA  BCC5               	btfsc	197,6,c	;volatile
 11527  004CDC  EF72  F026         	goto	u3081
 11528  004CE0  EF75  F026         	goto	u3080
 11529  004CE4                     u3081:
 11530  004CE4  0E01               	movlw	1
 11531  004CE6  EF76  F026         	goto	u3086
 11532  004CEA                     u3080:
 11533  004CEA  0E00               	movlw	0
 11534  004CEC                     u3086:
 11535  004CEC  0012               	return		;funcret
 11536  004CEE                     __end_of_I2C_MasterIsNack:
 11537                           	callstack 0
 11538                           
 11539 ;; *************** function _I2C_MasterSendTxData *****************
 11540 ;; Defined at:
 11541 ;;		line 568 in file "mcc_generated_files/i2c_master.c"
 11542 ;; Parameters:    Size  Location     Type
 11543 ;;  data            1    wreg     unsigned char 
 11544 ;; Auto vars:     Size  Location     Type
 11545 ;;  data            1    4[COMRAM] unsigned char 
 11546 ;; Return value:  Size  Location     Type
 11547 ;;                  1    wreg      void 
 11548 ;; Registers used:
 11549 ;;		wreg
 11550 ;; Tracked objects:
 11551 ;;		On entry : 0/0
 11552 ;;		On exit  : 0/0
 11553 ;;		Unchanged: 0/0
 11554 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11555 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11556 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11557 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11558 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11559 ;;Total ram usage:        1 bytes
 11560 ;; Hardware stack levels used: 1
 11561 ;; Hardware stack levels required when called: 4
 11562 ;; This function calls:
 11563 ;;		Nothing
 11564 ;; This function is called by:
 11565 ;;		_I2C_DO_SEND_ADR_READ
 11566 ;;		_I2C_DO_SEND_ADR_WRITE
 11567 ;;		_I2C_DO_TX
 11568 ;; This function uses a non-reentrant model
 11569 ;;
 11570                           
 11571                           	psect	text67
 11572  004DE4                     __ptext67:
 11573                           	callstack 0
 11574  004DE4                     _I2C_MasterSendTxData:
 11575                           	callstack 18
 11576                           
 11577                           ;incstack = 0
 11578                           ;I2C_MasterSendTxData@data stored from wreg
 11579  004DE4  6E05               	movwf	I2C_MasterSendTxData@data^0,c
 11580  004DE6                     
 11581                           ;mcc_generated_files/i2c_master.c: 568: static __attribute__((inline)) void I2C_MasterSe
      +                          ndTxData(uint8_t data);mcc_generated_files/i2c_master.c: 569: {;mcc_generated_files/i2c_
      +                          master.c: 570:     SSPBUF = data;
 11582  004DE6  C005  FFC9         	movff	I2C_MasterSendTxData@data,4041	;volatile
 11583  004DEA  0012               	return		;funcret
 11584  004DEC                     __end_of_I2C_MasterSendTxData:
 11585                           	callstack 0
 11586                           
 11587 ;; *************** function _I2C_MasterSendAck *****************
 11588 ;; Defined at:
 11589 ;;		line 603 in file "mcc_generated_files/i2c_master.c"
 11590 ;; Parameters:    Size  Location     Type
 11591 ;;		None
 11592 ;; Auto vars:     Size  Location     Type
 11593 ;;		None
 11594 ;; Return value:  Size  Location     Type
 11595 ;;                  1    wreg      void 
 11596 ;; Registers used:
 11597 ;;		None
 11598 ;; Tracked objects:
 11599 ;;		On entry : 0/0
 11600 ;;		On exit  : 0/0
 11601 ;;		Unchanged: 0/0
 11602 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11603 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11604 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11605 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11606 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11607 ;;Total ram usage:        0 bytes
 11608 ;; Hardware stack levels used: 1
 11609 ;; Hardware stack levels required when called: 4
 11610 ;; This function calls:
 11611 ;;		Nothing
 11612 ;; This function is called by:
 11613 ;;		_I2C_DO_RX
 11614 ;;		_I2C_DO_RX_ACK
 11615 ;; This function uses a non-reentrant model
 11616 ;;
 11617                           
 11618                           	psect	text68
 11619  004DEC                     __ptext68:
 11620                           	callstack 0
 11621  004DEC                     _I2C_MasterSendAck:
 11622                           	callstack 18
 11623  004DEC                     
 11624                           ;mcc_generated_files/i2c_master.c: 605:     SSPCON2bits.ACKDT = 0;
 11625  004DEC  9AC5               	bcf	197,5,c	;volatile
 11626                           
 11627                           ;mcc_generated_files/i2c_master.c: 606:     SSPCON2bits.ACKEN = 1;
 11628  004DEE  88C5               	bsf	197,4,c	;volatile
 11629  004DF0  0012               	return		;funcret
 11630  004DF2                     __end_of_I2C_MasterSendAck:
 11631                           	callstack 0
 11632                           
 11633 ;; *************** function _I2C_MasterGetRxData *****************
 11634 ;; Defined at:
 11635 ;;		line 563 in file "mcc_generated_files/i2c_master.c"
 11636 ;; Parameters:    Size  Location     Type
 11637 ;;		None
 11638 ;; Auto vars:     Size  Location     Type
 11639 ;;		None
 11640 ;; Return value:  Size  Location     Type
 11641 ;;                  1    wreg      unsigned char 
 11642 ;; Registers used:
 11643 ;;		wreg, status,2
 11644 ;; Tracked objects:
 11645 ;;		On entry : 0/0
 11646 ;;		On exit  : 0/0
 11647 ;;		Unchanged: 0/0
 11648 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11649 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11650 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11651 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11652 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11653 ;;Total ram usage:        0 bytes
 11654 ;; Hardware stack levels used: 1
 11655 ;; Hardware stack levels required when called: 4
 11656 ;; This function calls:
 11657 ;;		Nothing
 11658 ;; This function is called by:
 11659 ;;		_I2C_DO_RX
 11660 ;; This function uses a non-reentrant model
 11661 ;;
 11662                           
 11663                           	psect	text69
 11664  004E08                     __ptext69:
 11665                           	callstack 0
 11666  004E08                     _I2C_MasterGetRxData:
 11667                           	callstack 18
 11668  004E08                     
 11669                           ;mcc_generated_files/i2c_master.c: 565:     return SSPBUF;
 11670  004E08  50C9               	movf	201,w,c	;volatile
 11671  004E0A  0012               	return		;funcret
 11672  004E0C                     __end_of_I2C_MasterGetRxData:
 11673                           	callstack 0
 11674                           
 11675 ;; *************** function _I2C_MasterSendNack *****************
 11676 ;; Defined at:
 11677 ;;		line 609 in file "mcc_generated_files/i2c_master.c"
 11678 ;; Parameters:    Size  Location     Type
 11679 ;;		None
 11680 ;; Auto vars:     Size  Location     Type
 11681 ;;		None
 11682 ;; Return value:  Size  Location     Type
 11683 ;;                  1    wreg      void 
 11684 ;; Registers used:
 11685 ;;		None
 11686 ;; Tracked objects:
 11687 ;;		On entry : 0/0
 11688 ;;		On exit  : 0/0
 11689 ;;		Unchanged: 0/0
 11690 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11691 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11692 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11693 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11694 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11695 ;;Total ram usage:        0 bytes
 11696 ;; Hardware stack levels used: 1
 11697 ;; Hardware stack levels required when called: 4
 11698 ;; This function calls:
 11699 ;;		Nothing
 11700 ;; This function is called by:
 11701 ;;		_I2C_DO_RX_NACK_STOP
 11702 ;;		_I2C_DO_RX_NACK_RESTART
 11703 ;; This function uses a non-reentrant model
 11704 ;;
 11705                           
 11706                           	psect	text70
 11707  004DF2                     __ptext70:
 11708                           	callstack 0
 11709  004DF2                     _I2C_MasterSendNack:
 11710                           	callstack 18
 11711  004DF2                     
 11712                           ;mcc_generated_files/i2c_master.c: 611:     SSPCON2bits.ACKDT = 1;
 11713  004DF2  8AC5               	bsf	197,5,c	;volatile
 11714                           
 11715                           ;mcc_generated_files/i2c_master.c: 612:     SSPCON2bits.ACKEN = 1;
 11716  004DF4  88C5               	bsf	197,4,c	;volatile
 11717  004DF6  0012               	return		;funcret
 11718  004DF8                     __end_of_I2C_MasterSendNack:
 11719                           	callstack 0
 11720                           
 11721 ;; *************** function _I2C_MasterStartRx *****************
 11722 ;; Defined at:
 11723 ;;		line 583 in file "mcc_generated_files/i2c_master.c"
 11724 ;; Parameters:    Size  Location     Type
 11725 ;;		None
 11726 ;; Auto vars:     Size  Location     Type
 11727 ;;		None
 11728 ;; Return value:  Size  Location     Type
 11729 ;;                  1    wreg      void 
 11730 ;; Registers used:
 11731 ;;		None
 11732 ;; Tracked objects:
 11733 ;;		On entry : 0/0
 11734 ;;		On exit  : 0/0
 11735 ;;		Unchanged: 0/0
 11736 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11737 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11738 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11739 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11740 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11741 ;;Total ram usage:        0 bytes
 11742 ;; Hardware stack levels used: 1
 11743 ;; Hardware stack levels required when called: 4
 11744 ;; This function calls:
 11745 ;;		Nothing
 11746 ;; This function is called by:
 11747 ;;		_I2C_DO_RCEN
 11748 ;; This function uses a non-reentrant model
 11749 ;;
 11750                           
 11751                           	psect	text71
 11752  004E0C                     __ptext71:
 11753                           	callstack 0
 11754  004E0C                     _I2C_MasterStartRx:
 11755                           	callstack 18
 11756  004E0C                     
 11757                           ;mcc_generated_files/i2c_master.c: 585:     SSPCON2bits.RCEN = 1;
 11758  004E0C  86C5               	bsf	197,3,c	;volatile
 11759  004E0E  0012               	return		;funcret
 11760  004E10                     __end_of_I2C_MasterStartRx:
 11761                           	callstack 0
 11762                           
 11763 ;; *************** function _I2C_CallbackReturnReset *****************
 11764 ;; Defined at:
 11765 ;;		line 525 in file "mcc_generated_files/i2c_master.c"
 11766 ;; Parameters:    Size  Location     Type
 11767 ;;  funPtr          2   13[COMRAM] PTR void 
 11768 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
 11769 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
 11770 ;; Auto vars:     Size  Location     Type
 11771 ;;		None
 11772 ;; Return value:  Size  Location     Type
 11773 ;;                  1    wreg      enum E360
 11774 ;; Registers used:
 11775 ;;		wreg
 11776 ;; Tracked objects:
 11777 ;;		On entry : 0/0
 11778 ;;		On exit  : 0/0
 11779 ;;		Unchanged: 0/0
 11780 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11781 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11782 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11783 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11784 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11785 ;;Total ram usage:        2 bytes
 11786 ;; Hardware stack levels used: 1
 11787 ;; Hardware stack levels required when called: 4
 11788 ;; This function calls:
 11789 ;;		Nothing
 11790 ;; This function is called by:
 11791 ;;		_I2C_Open
 11792 ;;		_I2C_DO_TX
 11793 ;;		_I2C_DO_RX
 11794 ;;		_I2C_DO_TX_EMPTY
 11795 ;;		_I2C_DO_ADDRESS_NACK
 11796 ;;		_I2C_DO_RX_EMPTY
 11797 ;; This function uses a non-reentrant model
 11798 ;;
 11799                           
 11800                           	psect	text72
 11801  004E10                     __ptext72:
 11802                           	callstack 0
 11803  004E10                     _I2C_CallbackReturnReset:
 11804                           	callstack 18
 11805  004E10                     
 11806                           ;mcc_generated_files/i2c_master.c: 525: i2c_operations_t I2C_CallbackReturnReset(void *f
      +                          unPtr);mcc_generated_files/i2c_master.c: 526: {;mcc_generated_files/i2c_master.c: 527:  
      +                             return I2C_RESET_LINK;
 11807  004E10  0E05               	movlw	5
 11808  004E12  0012               	return		;funcret
 11809  004E14                     __end_of_I2C_CallbackReturnReset:
 11810                           	callstack 0
 11811                           
 11812 ;; *************** function _I2C_CallbackReturnStop *****************
 11813 ;; Defined at:
 11814 ;;		line 520 in file "mcc_generated_files/i2c_master.c"
 11815 ;; Parameters:    Size  Location     Type
 11816 ;;  funPtr          2   13[COMRAM] PTR void 
 11817 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
 11818 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
 11819 ;; Auto vars:     Size  Location     Type
 11820 ;;		None
 11821 ;; Return value:  Size  Location     Type
 11822 ;;                  1    wreg      enum E360
 11823 ;; Registers used:
 11824 ;;		wreg
 11825 ;; Tracked objects:
 11826 ;;		On entry : 0/0
 11827 ;;		On exit  : 0/0
 11828 ;;		Unchanged: 0/0
 11829 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11830 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11831 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11832 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11833 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11834 ;;Total ram usage:        2 bytes
 11835 ;; Hardware stack levels used: 1
 11836 ;; Hardware stack levels required when called: 4
 11837 ;; This function calls:
 11838 ;;		Nothing
 11839 ;; This function is called by:
 11840 ;;		_I2C_Open
 11841 ;;		_I2C_SetCallback
 11842 ;;		_I2C_DO_TX
 11843 ;;		_I2C_DO_RX
 11844 ;;		_I2C_DO_TX_EMPTY
 11845 ;;		_I2C_DO_ADDRESS_NACK
 11846 ;;		_I2C_DO_RX_EMPTY
 11847 ;; This function uses a non-reentrant model
 11848 ;;
 11849                           
 11850                           	psect	text73
 11851  004E14                     __ptext73:
 11852                           	callstack 0
 11853  004E14                     _I2C_CallbackReturnStop:
 11854                           	callstack 18
 11855  004E14                     
 11856                           ;mcc_generated_files/i2c_master.c: 520: i2c_operations_t I2C_CallbackReturnStop(void *fu
      +                          nPtr);mcc_generated_files/i2c_master.c: 521: {;mcc_generated_files/i2c_master.c: 522:   
      +                            return I2C_STOP;
 11857  004E14  0E01               	movlw	1
 11858  004E16  0012               	return		;funcret
 11859  004E18                     __end_of_I2C_CallbackReturnStop:
 11860                           	callstack 0
 11861                           
 11862 ;; *************** function _rdBlkRegCompleteHandler *****************
 11863 ;; Defined at:
 11864 ;;		line 170 in file "mcc_generated_files/examples/i2c_master_example.c"
 11865 ;; Parameters:    Size  Location     Type
 11866 ;;  ptr             2   13[COMRAM] PTR void 
 11867 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
 11868 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
 11869 ;; Auto vars:     Size  Location     Type
 11870 ;;		None
 11871 ;; Return value:  Size  Location     Type
 11872 ;;                  1    wreg      enum E360
 11873 ;; Registers used:
 11874 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11875 ;; Tracked objects:
 11876 ;;		On entry : 0/0
 11877 ;;		On exit  : 0/0
 11878 ;;		Unchanged: 0/0
 11879 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11880 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11881 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11882 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11883 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11884 ;;Total ram usage:        2 bytes
 11885 ;; Hardware stack levels used: 1
 11886 ;; Hardware stack levels required when called: 6
 11887 ;; This function calls:
 11888 ;;		_I2C_SetBuffer
 11889 ;;		_I2C_SetDataCompleteCallback
 11890 ;; This function is called by:
 11891 ;;		_I2C_ReadDataBlock
 11892 ;;		_I2C_DO_TX
 11893 ;;		_I2C_DO_RX
 11894 ;;		_I2C_DO_TX_EMPTY
 11895 ;;		_I2C_DO_ADDRESS_NACK
 11896 ;;		_I2C_DO_RX_EMPTY
 11897 ;; This function uses a non-reentrant model
 11898 ;;
 11899                           
 11900                           	psect	text74
 11901  004948                     __ptext74:
 11902                           	callstack 0
 11903  004948                     _rdBlkRegCompleteHandler:
 11904                           	callstack 16
 11905  004948                     
 11906                           ;mcc_generated_files/examples/i2c_master_example.c: 170: static i2c_operations_t rdBlkRe
      +                          gCompleteHandler(void *ptr);mcc_generated_files/examples/i2c_master_example.c: 171: {;mc
      +                          c_generated_files/examples/i2c_master_example.c: 172:     I2C_SetBuffer(((i2c_buffer_t *
      +                          )ptr)->data,((i2c_buffer_t*)ptr)->len);
 11907  004948  EE20 F002          	lfsr	2,2
 11908  00494C  500E               	movf	rdBlkRegCompleteHandler@ptr^0,w,c
 11909  00494E  26D9               	addwf	fsr2l,f,c
 11910  004950  500F               	movf	(rdBlkRegCompleteHandler@ptr+1)^0,w,c
 11911  004952  22DA               	addwfc	fsr2h,f,c
 11912  004954  CFDE F005          	movff	postinc2,I2C_SetBuffer@buffer
 11913  004958  CFDD F006          	movff	postdec2,I2C_SetBuffer@buffer+1
 11914  00495C  C00E  FFD9         	movff	rdBlkRegCompleteHandler@ptr,fsr2l
 11915  004960  C00F  FFDA         	movff	rdBlkRegCompleteHandler@ptr+1,fsr2h
 11916  004964  CFDE F007          	movff	postinc2,I2C_SetBuffer@bufferSize
 11917  004968  CFDD F008          	movff	postdec2,I2C_SetBuffer@bufferSize+1
 11918  00496C  EC0C  F026         	call	_I2C_SetBuffer	;wreg free
 11919  004970                     
 11920                           ;mcc_generated_files/examples/i2c_master_example.c: 173:     I2C_SetDataCompleteCallback
      +                          (((void*)0),((void*)0));
 11921  004970  0E00               	movlw	0
 11922  004972  6E0A               	movwf	I2C_SetDataCompleteCallback@cb^0,c
 11923  004974  0E00               	movlw	0
 11924  004976  6E0B               	movwf	(I2C_SetDataCompleteCallback@cb+1)^0,c
 11925  004978  0E00               	movlw	0
 11926  00497A  6E0C               	movwf	I2C_SetDataCompleteCallback@ptr^0,c
 11927  00497C  0E00               	movlw	0
 11928  00497E  6E0D               	movwf	(I2C_SetDataCompleteCallback@ptr+1)^0,c
 11929  004980  EC56  F026         	call	_I2C_SetDataCompleteCallback	;wreg free
 11930  004984                     
 11931                           ;mcc_generated_files/examples/i2c_master_example.c: 174:     return I2C_RESTART_READ;
 11932  004984  0E02               	movlw	2
 11933  004986  0012               	return		;funcret
 11934  004988                     __end_of_rdBlkRegCompleteHandler:
 11935                           	callstack 0
 11936                           
 11937 ;; *************** function _wr1RegCompleteHandler *****************
 11938 ;; Defined at:
 11939 ;;		line 156 in file "mcc_generated_files/examples/i2c_master_example.c"
 11940 ;; Parameters:    Size  Location     Type
 11941 ;;  ptr             2   13[COMRAM] PTR void 
 11942 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
 11943 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
 11944 ;; Auto vars:     Size  Location     Type
 11945 ;;		None
 11946 ;; Return value:  Size  Location     Type
 11947 ;;                  1    wreg      enum E360
 11948 ;; Registers used:
 11949 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11950 ;; Tracked objects:
 11951 ;;		On entry : 0/0
 11952 ;;		On exit  : 0/0
 11953 ;;		Unchanged: 0/0
 11954 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11955 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11956 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11957 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11958 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11959 ;;Total ram usage:        2 bytes
 11960 ;; Hardware stack levels used: 1
 11961 ;; Hardware stack levels required when called: 6
 11962 ;; This function calls:
 11963 ;;		_I2C_SetBuffer
 11964 ;;		_I2C_SetDataCompleteCallback
 11965 ;; This function is called by:
 11966 ;;		_I2C_Write1ByteRegister
 11967 ;;		_I2C_DO_TX
 11968 ;;		_I2C_DO_RX
 11969 ;;		_I2C_DO_TX_EMPTY
 11970 ;;		_I2C_DO_ADDRESS_NACK
 11971 ;;		_I2C_DO_RX_EMPTY
 11972 ;; This function uses a non-reentrant model
 11973 ;;
 11974                           
 11975                           	psect	text75
 11976  004AC2                     __ptext75:
 11977                           	callstack 0
 11978  004AC2                     _wr1RegCompleteHandler:
 11979                           	callstack 16
 11980  004AC2                     
 11981                           ;mcc_generated_files/examples/i2c_master_example.c: 156: static i2c_operations_t wr1RegC
      +                          ompleteHandler(void *ptr);mcc_generated_files/examples/i2c_master_example.c: 157: {;mcc_
      +                          generated_files/examples/i2c_master_example.c: 158:     I2C_SetBuffer(ptr,1);
 11982  004AC2  C00E  F005         	movff	wr1RegCompleteHandler@ptr,I2C_SetBuffer@buffer
 11983  004AC6  C00F  F006         	movff	wr1RegCompleteHandler@ptr+1,I2C_SetBuffer@buffer+1
 11984  004ACA  0E00               	movlw	0
 11985  004ACC  6E08               	movwf	(I2C_SetBuffer@bufferSize+1)^0,c
 11986  004ACE  0E01               	movlw	1
 11987  004AD0  6E07               	movwf	I2C_SetBuffer@bufferSize^0,c
 11988  004AD2  EC0C  F026         	call	_I2C_SetBuffer	;wreg free
 11989  004AD6                     
 11990                           ;mcc_generated_files/examples/i2c_master_example.c: 159:     I2C_SetDataCompleteCallback
      +                          (((void*)0),((void*)0));
 11991  004AD6  0E00               	movlw	0
 11992  004AD8  6E0A               	movwf	I2C_SetDataCompleteCallback@cb^0,c
 11993  004ADA  0E00               	movlw	0
 11994  004ADC  6E0B               	movwf	(I2C_SetDataCompleteCallback@cb+1)^0,c
 11995  004ADE  0E00               	movlw	0
 11996  004AE0  6E0C               	movwf	I2C_SetDataCompleteCallback@ptr^0,c
 11997  004AE2  0E00               	movlw	0
 11998  004AE4  6E0D               	movwf	(I2C_SetDataCompleteCallback@ptr+1)^0,c
 11999  004AE6  EC56  F026         	call	_I2C_SetDataCompleteCallback	;wreg free
 12000  004AEA                     
 12001                           ;mcc_generated_files/examples/i2c_master_example.c: 160:     return I2C_CONTINUE;
 12002  004AEA  0E04               	movlw	4
 12003  004AEC  0012               	return		;funcret
 12004  004AEE                     __end_of_wr1RegCompleteHandler:
 12005                           	callstack 0
 12006                           
 12007 ;; *************** function _rd2RegCompleteHandler *****************
 12008 ;; Defined at:
 12009 ;;		line 149 in file "mcc_generated_files/examples/i2c_master_example.c"
 12010 ;; Parameters:    Size  Location     Type
 12011 ;;  ptr             2   13[COMRAM] PTR void 
 12012 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
 12013 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
 12014 ;; Auto vars:     Size  Location     Type
 12015 ;;		None
 12016 ;; Return value:  Size  Location     Type
 12017 ;;                  1    wreg      enum E360
 12018 ;; Registers used:
 12019 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12020 ;; Tracked objects:
 12021 ;;		On entry : 0/0
 12022 ;;		On exit  : 0/0
 12023 ;;		Unchanged: 0/0
 12024 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12025 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12026 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12027 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12028 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12029 ;;Total ram usage:        2 bytes
 12030 ;; Hardware stack levels used: 1
 12031 ;; Hardware stack levels required when called: 6
 12032 ;; This function calls:
 12033 ;;		_I2C_SetBuffer
 12034 ;;		_I2C_SetDataCompleteCallback
 12035 ;; This function is called by:
 12036 ;;		_I2C_Read2ByteRegister
 12037 ;;		_I2C_DO_TX
 12038 ;;		_I2C_DO_RX
 12039 ;;		_I2C_DO_TX_EMPTY
 12040 ;;		_I2C_DO_ADDRESS_NACK
 12041 ;;		_I2C_DO_RX_EMPTY
 12042 ;; This function uses a non-reentrant model
 12043 ;;
 12044                           
 12045                           	psect	text76
 12046  004AEE                     __ptext76:
 12047                           	callstack 0
 12048  004AEE                     _rd2RegCompleteHandler:
 12049                           	callstack 16
 12050  004AEE                     
 12051                           ;mcc_generated_files/examples/i2c_master_example.c: 149: static i2c_operations_t rd2RegC
      +                          ompleteHandler(void *ptr);mcc_generated_files/examples/i2c_master_example.c: 150: {;mcc_
      +                          generated_files/examples/i2c_master_example.c: 151:     I2C_SetBuffer(ptr,2);
 12052  004AEE  C00E  F005         	movff	rd2RegCompleteHandler@ptr,I2C_SetBuffer@buffer
 12053  004AF2  C00F  F006         	movff	rd2RegCompleteHandler@ptr+1,I2C_SetBuffer@buffer+1
 12054  004AF6  0E00               	movlw	0
 12055  004AF8  6E08               	movwf	(I2C_SetBuffer@bufferSize+1)^0,c
 12056  004AFA  0E02               	movlw	2
 12057  004AFC  6E07               	movwf	I2C_SetBuffer@bufferSize^0,c
 12058  004AFE  EC0C  F026         	call	_I2C_SetBuffer	;wreg free
 12059  004B02                     
 12060                           ;mcc_generated_files/examples/i2c_master_example.c: 152:     I2C_SetDataCompleteCallback
      +                          (((void*)0),((void*)0));
 12061  004B02  0E00               	movlw	0
 12062  004B04  6E0A               	movwf	I2C_SetDataCompleteCallback@cb^0,c
 12063  004B06  0E00               	movlw	0
 12064  004B08  6E0B               	movwf	(I2C_SetDataCompleteCallback@cb+1)^0,c
 12065  004B0A  0E00               	movlw	0
 12066  004B0C  6E0C               	movwf	I2C_SetDataCompleteCallback@ptr^0,c
 12067  004B0E  0E00               	movlw	0
 12068  004B10  6E0D               	movwf	(I2C_SetDataCompleteCallback@ptr+1)^0,c
 12069  004B12  EC56  F026         	call	_I2C_SetDataCompleteCallback	;wreg free
 12070  004B16                     
 12071                           ;mcc_generated_files/examples/i2c_master_example.c: 153:     return I2C_RESTART_READ;
 12072  004B16  0E02               	movlw	2
 12073  004B18  0012               	return		;funcret
 12074  004B1A                     __end_of_rd2RegCompleteHandler:
 12075                           	callstack 0
 12076                           
 12077 ;; *************** function _rd1RegCompleteHandler *****************
 12078 ;; Defined at:
 12079 ;;		line 142 in file "mcc_generated_files/examples/i2c_master_example.c"
 12080 ;; Parameters:    Size  Location     Type
 12081 ;;  ptr             2   13[COMRAM] PTR void 
 12082 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
 12083 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
 12084 ;; Auto vars:     Size  Location     Type
 12085 ;;		None
 12086 ;; Return value:  Size  Location     Type
 12087 ;;                  1    wreg      enum E360
 12088 ;; Registers used:
 12089 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12090 ;; Tracked objects:
 12091 ;;		On entry : 0/0
 12092 ;;		On exit  : 0/0
 12093 ;;		Unchanged: 0/0
 12094 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12095 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12096 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12097 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12098 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12099 ;;Total ram usage:        2 bytes
 12100 ;; Hardware stack levels used: 1
 12101 ;; Hardware stack levels required when called: 6
 12102 ;; This function calls:
 12103 ;;		_I2C_SetBuffer
 12104 ;;		_I2C_SetDataCompleteCallback
 12105 ;; This function is called by:
 12106 ;;		_I2C_Read1ByteRegister
 12107 ;;		_I2C_DO_TX
 12108 ;;		_I2C_DO_RX
 12109 ;;		_I2C_DO_TX_EMPTY
 12110 ;;		_I2C_DO_ADDRESS_NACK
 12111 ;;		_I2C_DO_RX_EMPTY
 12112 ;; This function uses a non-reentrant model
 12113 ;;
 12114                           
 12115                           	psect	text77
 12116  004B1A                     __ptext77:
 12117                           	callstack 0
 12118  004B1A                     _rd1RegCompleteHandler:
 12119                           	callstack 16
 12120  004B1A                     
 12121                           ;mcc_generated_files/examples/i2c_master_example.c: 142: static i2c_operations_t rd1RegC
      +                          ompleteHandler(void *ptr);mcc_generated_files/examples/i2c_master_example.c: 143: {;mcc_
      +                          generated_files/examples/i2c_master_example.c: 144:     I2C_SetBuffer(ptr,1);
 12122  004B1A  C00E  F005         	movff	rd1RegCompleteHandler@ptr,I2C_SetBuffer@buffer
 12123  004B1E  C00F  F006         	movff	rd1RegCompleteHandler@ptr+1,I2C_SetBuffer@buffer+1
 12124  004B22  0E00               	movlw	0
 12125  004B24  6E08               	movwf	(I2C_SetBuffer@bufferSize+1)^0,c
 12126  004B26  0E01               	movlw	1
 12127  004B28  6E07               	movwf	I2C_SetBuffer@bufferSize^0,c
 12128  004B2A  EC0C  F026         	call	_I2C_SetBuffer	;wreg free
 12129  004B2E                     
 12130                           ;mcc_generated_files/examples/i2c_master_example.c: 145:     I2C_SetDataCompleteCallback
      +                          (((void*)0),((void*)0));
 12131  004B2E  0E00               	movlw	0
 12132  004B30  6E0A               	movwf	I2C_SetDataCompleteCallback@cb^0,c
 12133  004B32  0E00               	movlw	0
 12134  004B34  6E0B               	movwf	(I2C_SetDataCompleteCallback@cb+1)^0,c
 12135  004B36  0E00               	movlw	0
 12136  004B38  6E0C               	movwf	I2C_SetDataCompleteCallback@ptr^0,c
 12137  004B3A  0E00               	movlw	0
 12138  004B3C  6E0D               	movwf	(I2C_SetDataCompleteCallback@ptr+1)^0,c
 12139  004B3E  EC56  F026         	call	_I2C_SetDataCompleteCallback	;wreg free
 12140  004B42                     
 12141                           ;mcc_generated_files/examples/i2c_master_example.c: 146:     return I2C_RESTART_READ;
 12142  004B42  0E02               	movlw	2
 12143  004B44  0012               	return		;funcret
 12144  004B46                     __end_of_rd1RegCompleteHandler:
 12145                           	callstack 0
 12146                           
 12147 ;; *************** function _wr2RegCompleteHandler *****************
 12148 ;; Defined at:
 12149 ;;		line 163 in file "mcc_generated_files/examples/i2c_master_example.c"
 12150 ;; Parameters:    Size  Location     Type
 12151 ;;  ptr             2   13[COMRAM] PTR void 
 12152 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
 12153 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
 12154 ;; Auto vars:     Size  Location     Type
 12155 ;;		None
 12156 ;; Return value:  Size  Location     Type
 12157 ;;                  1    wreg      enum E360
 12158 ;; Registers used:
 12159 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12160 ;; Tracked objects:
 12161 ;;		On entry : 0/0
 12162 ;;		On exit  : 0/0
 12163 ;;		Unchanged: 0/0
 12164 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12165 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12166 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12167 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12168 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12169 ;;Total ram usage:        2 bytes
 12170 ;; Hardware stack levels used: 1
 12171 ;; Hardware stack levels required when called: 6
 12172 ;; This function calls:
 12173 ;;		_I2C_SetBuffer
 12174 ;;		_I2C_SetDataCompleteCallback
 12175 ;; This function is called by:
 12176 ;;		_I2C_Write2ByteRegister
 12177 ;;		_I2C_DO_TX
 12178 ;;		_I2C_DO_RX
 12179 ;;		_I2C_DO_TX_EMPTY
 12180 ;;		_I2C_DO_ADDRESS_NACK
 12181 ;;		_I2C_DO_RX_EMPTY
 12182 ;; This function uses a non-reentrant model
 12183 ;;
 12184                           
 12185                           	psect	text78
 12186  004B46                     __ptext78:
 12187                           	callstack 0
 12188  004B46                     _wr2RegCompleteHandler:
 12189                           	callstack 16
 12190  004B46                     
 12191                           ;mcc_generated_files/examples/i2c_master_example.c: 163: static i2c_operations_t wr2RegC
      +                          ompleteHandler(void *ptr);mcc_generated_files/examples/i2c_master_example.c: 164: {;mcc_
      +                          generated_files/examples/i2c_master_example.c: 165:     I2C_SetBuffer(ptr,2);
 12192  004B46  C00E  F005         	movff	wr2RegCompleteHandler@ptr,I2C_SetBuffer@buffer
 12193  004B4A  C00F  F006         	movff	wr2RegCompleteHandler@ptr+1,I2C_SetBuffer@buffer+1
 12194  004B4E  0E00               	movlw	0
 12195  004B50  6E08               	movwf	(I2C_SetBuffer@bufferSize+1)^0,c
 12196  004B52  0E02               	movlw	2
 12197  004B54  6E07               	movwf	I2C_SetBuffer@bufferSize^0,c
 12198  004B56  EC0C  F026         	call	_I2C_SetBuffer	;wreg free
 12199  004B5A                     
 12200                           ;mcc_generated_files/examples/i2c_master_example.c: 166:     I2C_SetDataCompleteCallback
      +                          (((void*)0),((void*)0));
 12201  004B5A  0E00               	movlw	0
 12202  004B5C  6E0A               	movwf	I2C_SetDataCompleteCallback@cb^0,c
 12203  004B5E  0E00               	movlw	0
 12204  004B60  6E0B               	movwf	(I2C_SetDataCompleteCallback@cb+1)^0,c
 12205  004B62  0E00               	movlw	0
 12206  004B64  6E0C               	movwf	I2C_SetDataCompleteCallback@ptr^0,c
 12207  004B66  0E00               	movlw	0
 12208  004B68  6E0D               	movwf	(I2C_SetDataCompleteCallback@ptr+1)^0,c
 12209  004B6A  EC56  F026         	call	_I2C_SetDataCompleteCallback	;wreg free
 12210  004B6E                     
 12211                           ;mcc_generated_files/examples/i2c_master_example.c: 167:     return I2C_CONTINUE;
 12212  004B6E  0E04               	movlw	4
 12213  004B70  0012               	return		;funcret
 12214  004B72                     __end_of_wr2RegCompleteHandler:
 12215                           	callstack 0
 12216                           
 12217 ;; *************** function _I2C_SetDataCompleteCallback *****************
 12218 ;; Defined at:
 12219 ;;		line 273 in file "mcc_generated_files/i2c_master.c"
 12220 ;; Parameters:    Size  Location     Type
 12221 ;;  cb              2    9[COMRAM] PTR FTN(PTR void ,)enum 
 12222 ;;		 -> Absolute function(1), rdBlkRegCompleteHandler(1), wr2RegCompleteHandler(1), wr1RegCompleteHandler(1), 
 12223 ;;		 -> rd2RegCompleteHandler(1), rd1RegCompleteHandler(1), 
 12224 ;;  ptr             2   11[COMRAM] PTR void 
 12225 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
 12226 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
 12227 ;; Auto vars:     Size  Location     Type
 12228 ;;		None
 12229 ;; Return value:  Size  Location     Type
 12230 ;;                  1    wreg      void 
 12231 ;; Registers used:
 12232 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12233 ;; Tracked objects:
 12234 ;;		On entry : 0/0
 12235 ;;		On exit  : 0/0
 12236 ;;		Unchanged: 0/0
 12237 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12238 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12239 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12240 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12241 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12242 ;;Total ram usage:        4 bytes
 12243 ;; Hardware stack levels used: 1
 12244 ;; Hardware stack levels required when called: 5
 12245 ;; This function calls:
 12246 ;;		_I2C_SetCallback
 12247 ;; This function is called by:
 12248 ;;		_rd1RegCompleteHandler
 12249 ;;		_rd2RegCompleteHandler
 12250 ;;		_wr1RegCompleteHandler
 12251 ;;		_wr2RegCompleteHandler
 12252 ;;		_rdBlkRegCompleteHandler
 12253 ;;		_I2C_Read1ByteRegister
 12254 ;;		_I2C_Read2ByteRegister
 12255 ;;		_I2C_Write1ByteRegister
 12256 ;;		_I2C_Write2ByteRegister
 12257 ;;		_I2C_ReadDataBlock
 12258 ;; This function uses a non-reentrant model
 12259 ;;
 12260                           
 12261                           	psect	text79
 12262  004CAC                     __ptext79:
 12263                           	callstack 0
 12264  004CAC                     _I2C_SetDataCompleteCallback:
 12265                           	callstack 16
 12266  004CAC                     
 12267                           ;mcc_generated_files/i2c_master.c: 273: void I2C_SetDataCompleteCallback(i2c_callback_t 
      +                          cb, void *ptr);mcc_generated_files/i2c_master.c: 274: {;mcc_generated_files/i2c_master.c
      +                          : 275:     I2C_SetCallback(I2C_DATA_COMPLETE, cb, ptr);
 12268  004CAC  C00A  F005         	movff	I2C_SetDataCompleteCallback@cb,I2C_SetCallback@cb
 12269  004CB0  C00B  F006         	movff	I2C_SetDataCompleteCallback@cb+1,I2C_SetCallback@cb+1
 12270  004CB4  C00C  F007         	movff	I2C_SetDataCompleteCallback@ptr,I2C_SetCallback@ptr
 12271  004CB8  C00D  F008         	movff	I2C_SetDataCompleteCallback@ptr+1,I2C_SetCallback@ptr+1
 12272  004CBC  0E00               	movlw	0
 12273  004CBE  EC03  F022         	call	_I2C_SetCallback
 12274  004CC2  0012               	return		;funcret
 12275  004CC4                     __end_of_I2C_SetDataCompleteCallback:
 12276                           	callstack 0
 12277                           
 12278 ;; *************** function _I2C_SetCallback *****************
 12279 ;; Defined at:
 12280 ;;		line 298 in file "mcc_generated_files/i2c_master.c"
 12281 ;; Parameters:    Size  Location     Type
 12282 ;;  idx             1    wreg     enum E3121
 12283 ;;  cb              2    4[COMRAM] PTR FTN(PTR void ,)enum 
 12284 ;;		 -> Absolute function(1), rdBlkRegCompleteHandler(1), wr2RegCompleteHandler(1), wr1RegCompleteHandler(1), 
 12285 ;;		 -> rd2RegCompleteHandler(1), rd1RegCompleteHandler(1), 
 12286 ;;  ptr             2    6[COMRAM] PTR void 
 12287 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
 12288 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
 12289 ;; Auto vars:     Size  Location     Type
 12290 ;;  idx             1    8[COMRAM] enum E3121
 12291 ;; Return value:  Size  Location     Type
 12292 ;;                  1    wreg      void 
 12293 ;; Registers used:
 12294 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 12295 ;; Tracked objects:
 12296 ;;		On entry : 0/0
 12297 ;;		On exit  : 0/0
 12298 ;;		Unchanged: 0/0
 12299 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12300 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12301 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12302 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12303 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12304 ;;Total ram usage:        5 bytes
 12305 ;; Hardware stack levels used: 1
 12306 ;; Hardware stack levels required when called: 4
 12307 ;; This function calls:
 12308 ;;		Nothing
 12309 ;; This function is called by:
 12310 ;;		_I2C_SetDataCompleteCallback
 12311 ;;		_I2C_SetAddressNackCallback
 12312 ;;		_I2C_SetWriteCollisionCallback
 12313 ;;		_I2C_SetDataNackCallback
 12314 ;;		_I2C_SetTimeoutCallback
 12315 ;; This function uses a non-reentrant model
 12316 ;;
 12317                           
 12318                           	psect	text80
 12319  004406                     __ptext80:
 12320                           	callstack 0
 12321  004406                     _I2C_SetCallback:
 12322                           	callstack 16
 12323                           
 12324                           ;incstack = 0
 12325                           ;I2C_SetCallback@idx stored from wreg
 12326  004406  6E09               	movwf	I2C_SetCallback@idx^0,c
 12327  004408                     
 12328                           ;mcc_generated_files/i2c_master.c: 298: static void I2C_SetCallback(i2c_callbackIndex_t 
      +                          idx, i2c_callback_t cb, void *ptr);mcc_generated_files/i2c_master.c: 299: {;mcc_generate
      +                          d_files/i2c_master.c: 300:     if(cb)
 12329  004408  5005               	movf	I2C_SetCallback@cb^0,w,c
 12330  00440A  1006               	iorwf	(I2C_SetCallback@cb+1)^0,w,c
 12331  00440C  B4D8               	btfsc	status,2,c
 12332  00440E  EF0B  F022         	goto	u3061
 12333  004412  EF0D  F022         	goto	u3060
 12334  004416                     u3061:
 12335  004416  EF27  F022         	goto	l4081
 12336  00441A                     u3060:
 12337  00441A                     
 12338                           ;mcc_generated_files/i2c_master.c: 301:     {;mcc_generated_files/i2c_master.c: 302:    
      +                               I2C_Status.callbackTable[idx] = cb;
 12339  00441A  5009               	movf	I2C_SetCallback@idx^0,w,c
 12340  00441C  0D02               	mullw	2
 12341  00441E  0EB8               	movlw	low _I2C_Status
 12342  004420  24F3               	addwf	243,w,c
 12343  004422  6ED9               	movwf	fsr2l,c
 12344  004424  0E00               	movlw	high _I2C_Status
 12345  004426  20F4               	addwfc	prodh,w,c
 12346  004428  6EDA               	movwf	fsr2h,c
 12347  00442A  C005  FFDE         	movff	I2C_SetCallback@cb,postinc2
 12348  00442E  C006  FFDD         	movff	I2C_SetCallback@cb+1,postdec2
 12349                           
 12350                           ;mcc_generated_files/i2c_master.c: 303:         I2C_Status.callbackPayload[idx] = ptr;
 12351  004432  5009               	movf	I2C_SetCallback@idx^0,w,c
 12352  004434  0D02               	mullw	2
 12353  004436  0EC4               	movlw	low (_I2C_Status+12)
 12354  004438  24F3               	addwf	243,w,c
 12355  00443A  6ED9               	movwf	fsr2l,c
 12356  00443C  0E00               	movlw	high (_I2C_Status+12)
 12357  00443E  20F4               	addwfc	prodh,w,c
 12358  004440  6EDA               	movwf	fsr2h,c
 12359  004442  C007  FFDE         	movff	I2C_SetCallback@ptr,postinc2
 12360  004446  C008  FFDD         	movff	I2C_SetCallback@ptr+1,postdec2
 12361                           
 12362                           ;mcc_generated_files/i2c_master.c: 304:     }
 12363  00444A  EF3F  F022         	goto	l256
 12364  00444E                     l4081:
 12365                           
 12366                           ;mcc_generated_files/i2c_master.c: 306:     {;mcc_generated_files/i2c_master.c: 307:    
      +                               I2C_Status.callbackTable[idx] = I2C_CallbackReturnStop;
 12367  00444E  5009               	movf	I2C_SetCallback@idx^0,w,c
 12368  004450  0D02               	mullw	2
 12369  004452  0EB8               	movlw	low _I2C_Status
 12370  004454  24F3               	addwf	243,w,c
 12371  004456  6ED9               	movwf	fsr2l,c
 12372  004458  0E00               	movlw	high _I2C_Status
 12373  00445A  20F4               	addwfc	prodh,w,c
 12374  00445C  6EDA               	movwf	fsr2h,c
 12375  00445E  0E14               	movlw	low _I2C_CallbackReturnStop
 12376  004460  6EDE               	movwf	postinc2,c
 12377  004462  0E4E               	movlw	high _I2C_CallbackReturnStop
 12378  004464  6EDD               	movwf	postdec2,c
 12379                           
 12380                           ;mcc_generated_files/i2c_master.c: 308:         I2C_Status.callbackPayload[idx] = ((void
      +                          *)0);
 12381  004466  5009               	movf	I2C_SetCallback@idx^0,w,c
 12382  004468  0D02               	mullw	2
 12383  00446A  0EC4               	movlw	low (_I2C_Status+12)
 12384  00446C  24F3               	addwf	243,w,c
 12385  00446E  6ED9               	movwf	fsr2l,c
 12386  004470  0E00               	movlw	high (_I2C_Status+12)
 12387  004472  20F4               	addwfc	prodh,w,c
 12388  004474  6EDA               	movwf	fsr2h,c
 12389  004476  0E00               	movlw	0
 12390  004478  6EDE               	movwf	postinc2,c
 12391  00447A  0E00               	movlw	0
 12392  00447C  6EDD               	movwf	postdec2,c
 12393  00447E                     l256:
 12394  00447E  0012               	return		;funcret
 12395  004480                     __end_of_I2C_SetCallback:
 12396                           	callstack 0
 12397                           
 12398 ;; *************** function _I2C_SetBuffer *****************
 12399 ;; Defined at:
 12400 ;;		line 263 in file "mcc_generated_files/i2c_master.c"
 12401 ;; Parameters:    Size  Location     Type
 12402 ;;  buffer          2    4[COMRAM] PTR void 
 12403 ;;		 -> writeBuffer(10), readBuffer(10), I2C_ReadDataBlock@reg(1), I2C_ReadDataBlock@bufferBlock(4), 
 12404 ;;		 -> I2C_Write2ByteRegister@reg(1), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@reg(1), I2C_Write1ByteRegi
      +ster@data(1), 
 12405 ;;		 -> I2C_Read2ByteRegister@reg(1), I2C_Read2ByteRegister@returnValue(2), NULL(0), I2C_Read1ByteRegister@reg(1), 
 12406 ;;		 -> I2C_Read1ByteRegister@returnValue(1), 
 12407 ;;  bufferSize      2    6[COMRAM] unsigned int 
 12408 ;; Auto vars:     Size  Location     Type
 12409 ;;		None
 12410 ;; Return value:  Size  Location     Type
 12411 ;;                  1    wreg      void 
 12412 ;; Registers used:
 12413 ;;		wreg, status,2, status,0
 12414 ;; Tracked objects:
 12415 ;;		On entry : 0/0
 12416 ;;		On exit  : 0/0
 12417 ;;		Unchanged: 0/0
 12418 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12419 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12420 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12421 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12422 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12423 ;;Total ram usage:        4 bytes
 12424 ;; Hardware stack levels used: 1
 12425 ;; Hardware stack levels required when called: 4
 12426 ;; This function calls:
 12427 ;;		Nothing
 12428 ;; This function is called by:
 12429 ;;		_I2C_WriteNBytes
 12430 ;;		_I2C_ReadNBytes
 12431 ;;		_rd1RegCompleteHandler
 12432 ;;		_rd2RegCompleteHandler
 12433 ;;		_wr1RegCompleteHandler
 12434 ;;		_wr2RegCompleteHandler
 12435 ;;		_rdBlkRegCompleteHandler
 12436 ;;		_I2C_Read1ByteRegister
 12437 ;;		_I2C_Read2ByteRegister
 12438 ;;		_I2C_Write1ByteRegister
 12439 ;;		_I2C_Write2ByteRegister
 12440 ;;		_I2C_ReadDataBlock
 12441 ;; This function uses a non-reentrant model
 12442 ;;
 12443                           
 12444                           	psect	text81
 12445  004C18                     __ptext81:
 12446                           	callstack 0
 12447  004C18                     _I2C_SetBuffer:
 12448                           	callstack 23
 12449  004C18                     
 12450                           ;mcc_generated_files/i2c_master.c: 263: void I2C_SetBuffer(void *buffer, size_t bufferSi
      +                          ze);mcc_generated_files/i2c_master.c: 264: {;mcc_generated_files/i2c_master.c: 265:     
      +                          if(I2C_Status.bufferFree)
 12451  004C18  0100               	movlb	0	; () banked
 12452  004C1A  A7DB               	btfss	(_I2C_Status+35)& (0+255),3,b
 12453  004C1C  EF12  F026         	goto	u3071
 12454  004C20  EF14  F026         	goto	u3070
 12455  004C24                     u3071:
 12456  004C24  EF1D  F026         	goto	l236
 12457  004C28                     u3070:
 12458  004C28                     
 12459                           ; BSR set to: 0
 12460                           ;mcc_generated_files/i2c_master.c: 266:     {;mcc_generated_files/i2c_master.c: 267:    
      +                               I2C_Status.data_ptr = buffer;
 12461  004C28  C005  F0D5         	movff	I2C_SetBuffer@buffer,_I2C_Status+29
 12462  004C2C  C006  F0D6         	movff	I2C_SetBuffer@buffer+1,_I2C_Status+30
 12463  004C30                     
 12464                           ; BSR set to: 0
 12465                           ;mcc_generated_files/i2c_master.c: 268:         I2C_Status.data_length = bufferSize;
 12466  004C30  C007  F0D7         	movff	I2C_SetBuffer@bufferSize,_I2C_Status+31
 12467  004C34  C008  F0D8         	movff	I2C_SetBuffer@bufferSize+1,_I2C_Status+32
 12468  004C38                     
 12469                           ; BSR set to: 0
 12470                           ;mcc_generated_files/i2c_master.c: 269:         I2C_Status.bufferFree = 0;
 12471  004C38  97DB               	bcf	(_I2C_Status+35)& (0+255),3,b
 12472  004C3A                     l236:
 12473                           
 12474                           ; BSR set to: 0
 12475  004C3A  0012               	return		;funcret
 12476  004C3C                     __end_of_I2C_SetBuffer:
 12477                           	callstack 0
 12478                           
 12479 ;; *************** function _I2C_MasterStop *****************
 12480 ;; Defined at:
 12481 ;;		line 593 in file "mcc_generated_files/i2c_master.c"
 12482 ;; Parameters:    Size  Location     Type
 12483 ;;		None
 12484 ;; Auto vars:     Size  Location     Type
 12485 ;;		None
 12486 ;; Return value:  Size  Location     Type
 12487 ;;                  1    wreg      void 
 12488 ;; Registers used:
 12489 ;;		None
 12490 ;; Tracked objects:
 12491 ;;		On entry : 0/0
 12492 ;;		On exit  : 0/0
 12493 ;;		Unchanged: 0/0
 12494 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12495 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12496 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12497 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12498 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12499 ;;Total ram usage:        0 bytes
 12500 ;; Hardware stack levels used: 1
 12501 ;; Hardware stack levels required when called: 4
 12502 ;; This function calls:
 12503 ;;		Nothing
 12504 ;; This function is called by:
 12505 ;;		_I2C_DO_SEND_STOP
 12506 ;; This function uses a non-reentrant model
 12507 ;;
 12508                           
 12509                           	psect	text82
 12510  004E18                     __ptext82:
 12511                           	callstack 0
 12512  004E18                     _I2C_MasterStop:
 12513                           	callstack 17
 12514  004E18                     
 12515                           ;mcc_generated_files/i2c_master.c: 595:     SSPCON2bits.PEN = 1;
 12516  004E18  84C5               	bsf	197,2,c	;volatile
 12517  004E1A  0012               	return		;funcret
 12518  004E1C                     __end_of_I2C_MasterStop:
 12519                           	callstack 0
 12520                           
 12521 ;; *************** function _I2C_MasterEnableRestart *****************
 12522 ;; Defined at:
 12523 ;;		line 573 in file "mcc_generated_files/i2c_master.c"
 12524 ;; Parameters:    Size  Location     Type
 12525 ;;		None
 12526 ;; Auto vars:     Size  Location     Type
 12527 ;;		None
 12528 ;; Return value:  Size  Location     Type
 12529 ;;                  1    wreg      void 
 12530 ;; Registers used:
 12531 ;;		None
 12532 ;; Tracked objects:
 12533 ;;		On entry : 0/0
 12534 ;;		On exit  : 0/0
 12535 ;;		Unchanged: 0/0
 12536 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12537 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12538 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12539 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12540 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12541 ;;Total ram usage:        0 bytes
 12542 ;; Hardware stack levels used: 1
 12543 ;; Hardware stack levels required when called: 4
 12544 ;; This function calls:
 12545 ;;		Nothing
 12546 ;; This function is called by:
 12547 ;;		_I2C_DO_SEND_RESTART_READ
 12548 ;;		_I2C_DO_SEND_RESTART_WRITE
 12549 ;;		_I2C_DO_SEND_RESTART
 12550 ;;		_I2C_DO_RX_EMPTY
 12551 ;; This function uses a non-reentrant model
 12552 ;;
 12553                           
 12554                           	psect	text83
 12555  004E1C                     __ptext83:
 12556                           	callstack 0
 12557  004E1C                     _I2C_MasterEnableRestart:
 12558                           	callstack 17
 12559  004E1C                     
 12560                           ;mcc_generated_files/i2c_master.c: 575:     SSPCON2bits.RSEN = 1;
 12561  004E1C  82C5               	bsf	197,1,c	;volatile
 12562  004E1E  0012               	return		;funcret
 12563  004E20                     __end_of_I2C_MasterEnableRestart:
 12564                           	callstack 0
 12565                           
 12566 ;; *************** function _I2C_MasterStart *****************
 12567 ;; Defined at:
 12568 ;;		line 588 in file "mcc_generated_files/i2c_master.c"
 12569 ;; Parameters:    Size  Location     Type
 12570 ;;		None
 12571 ;; Auto vars:     Size  Location     Type
 12572 ;;		None
 12573 ;; Return value:  Size  Location     Type
 12574 ;;                  1    wreg      void 
 12575 ;; Registers used:
 12576 ;;		None
 12577 ;; Tracked objects:
 12578 ;;		On entry : 0/0
 12579 ;;		On exit  : 0/0
 12580 ;;		Unchanged: 0/0
 12581 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12582 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12583 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12584 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12585 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12586 ;;Total ram usage:        0 bytes
 12587 ;; Hardware stack levels used: 1
 12588 ;; Hardware stack levels required when called: 4
 12589 ;; This function calls:
 12590 ;;		Nothing
 12591 ;; This function is called by:
 12592 ;;		_I2C_MasterOperation
 12593 ;; This function uses a non-reentrant model
 12594 ;;
 12595                           
 12596                           	psect	text84
 12597  004E20                     __ptext84:
 12598                           	callstack 0
 12599  004E20                     _I2C_MasterStart:
 12600                           	callstack 21
 12601  004E20                     
 12602                           ;mcc_generated_files/i2c_master.c: 590:     SSPCON2bits.SEN = 1;
 12603  004E20  80C5               	bsf	197,0,c	;volatile
 12604  004E22  0012               	return		;funcret
 12605  004E24                     __end_of_I2C_MasterStart:
 12606                           	callstack 0
 12607                           
 12608 ;; *************** function _I2C_Close *****************
 12609 ;; Defined at:
 12610 ;;		line 209 in file "mcc_generated_files/i2c_master.c"
 12611 ;; Parameters:    Size  Location     Type
 12612 ;;		None
 12613 ;; Auto vars:     Size  Location     Type
 12614 ;;  returnValue     1    4[COMRAM] enum E355
 12615 ;; Return value:  Size  Location     Type
 12616 ;;                  1    wreg      enum E355
 12617 ;; Registers used:
 12618 ;;		wreg, status,2, cstack
 12619 ;; Tracked objects:
 12620 ;;		On entry : 0/0
 12621 ;;		On exit  : 0/0
 12622 ;;		Unchanged: 0/0
 12623 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12624 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12625 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12626 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12627 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12628 ;;Total ram usage:        1 bytes
 12629 ;; Hardware stack levels used: 1
 12630 ;; Hardware stack levels required when called: 5
 12631 ;; This function calls:
 12632 ;;		_I2C_MasterClearIrq
 12633 ;;		_I2C_MasterClose
 12634 ;;		_I2C_MasterDisableIrq
 12635 ;; This function is called by:
 12636 ;;		_I2C_WriteNBytes
 12637 ;;		_I2C_ReadNBytes
 12638 ;;		_I2C_Read1ByteRegister
 12639 ;;		_I2C_Read2ByteRegister
 12640 ;;		_I2C_Write1ByteRegister
 12641 ;;		_I2C_Write2ByteRegister
 12642 ;;		_I2C_ReadDataBlock
 12643 ;; This function uses a non-reentrant model
 12644 ;;
 12645                           
 12646                           	psect	text85
 12647  004B72                     __ptext85:
 12648                           	callstack 0
 12649  004B72                     _I2C_Close:
 12650                           	callstack 22
 12651  004B72                     
 12652                           ;mcc_generated_files/i2c_master.c: 211:     i2c_error_t returnValue = I2C_BUSY;
 12653  004B72  0E01               	movlw	1
 12654  004B74  6E05               	movwf	I2C_Close@returnValue^0,c
 12655  004B76                     
 12656                           ;mcc_generated_files/i2c_master.c: 212:     if(!I2C_Status.busy)
 12657  004B76  0100               	movlb	0	; () banked
 12658  004B78  B3DB               	btfsc	(_I2C_Status+35)& (0+255),1,b
 12659  004B7A  EFC1  F025         	goto	u4751
 12660  004B7E  EFC3  F025         	goto	u4750
 12661  004B82                     u4751:
 12662  004B82  EFCD  F025         	goto	l5279
 12663  004B86                     u4750:
 12664  004B86                     
 12665                           ; BSR set to: 0
 12666                           ;mcc_generated_files/i2c_master.c: 213:     {;mcc_generated_files/i2c_master.c: 214:    
      +                               I2C_Status.inUse = 0;
 12667  004B86  95DB               	bcf	(_I2C_Status+35)& (0+255),2,b
 12668                           
 12669                           ;mcc_generated_files/i2c_master.c: 215:         I2C_Status.address = 0xff;
 12670  004B88  69D4               	setf	(_I2C_Status+28)& (0+255),b
 12671  004B8A                     
 12672                           ; BSR set to: 0
 12673                           ;mcc_generated_files/i2c_master.c: 216:         I2C_MasterClearIrq();
 12674  004B8A  EC16  F027         	call	_I2C_MasterClearIrq	;wreg free
 12675                           
 12676                           ;mcc_generated_files/i2c_master.c: 217:         I2C_MasterDisableIrq();
 12677  004B8E  EC12  F027         	call	_I2C_MasterDisableIrq	;wreg free
 12678                           
 12679                           ;mcc_generated_files/i2c_master.c: 218:         I2C_MasterClose();
 12680  004B92  EC14  F027         	call	_I2C_MasterClose	;wreg free
 12681  004B96                     
 12682                           ;mcc_generated_files/i2c_master.c: 219:         returnValue = I2C_Status.error;
 12683  004B96  C0DA  F005         	movff	_I2C_Status+34,I2C_Close@returnValue
 12684  004B9A                     l5279:
 12685                           
 12686                           ;mcc_generated_files/i2c_master.c: 221:     return returnValue;
 12687  004B9A  5005               	movf	I2C_Close@returnValue^0,w,c
 12688  004B9C  0012               	return		;funcret
 12689  004B9E                     __end_of_I2C_Close:
 12690                           	callstack 0
 12691                           
 12692 ;; *************** function _I2C_MasterDisableIrq *****************
 12693 ;; Defined at:
 12694 ;;		line 635 in file "mcc_generated_files/i2c_master.c"
 12695 ;; Parameters:    Size  Location     Type
 12696 ;;		None
 12697 ;; Auto vars:     Size  Location     Type
 12698 ;;		None
 12699 ;; Return value:  Size  Location     Type
 12700 ;;                  1    wreg      void 
 12701 ;; Registers used:
 12702 ;;		None
 12703 ;; Tracked objects:
 12704 ;;		On entry : 0/0
 12705 ;;		On exit  : 0/0
 12706 ;;		Unchanged: 0/0
 12707 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12708 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12709 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12710 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12711 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12712 ;;Total ram usage:        0 bytes
 12713 ;; Hardware stack levels used: 1
 12714 ;; Hardware stack levels required when called: 4
 12715 ;; This function calls:
 12716 ;;		Nothing
 12717 ;; This function is called by:
 12718 ;;		_I2C_Close
 12719 ;;		_I2C_SetTimeOut
 12720 ;; This function uses a non-reentrant model
 12721 ;;
 12722                           
 12723                           	psect	text86
 12724  004E24                     __ptext86:
 12725                           	callstack 0
 12726  004E24                     _I2C_MasterDisableIrq:
 12727                           	callstack 22
 12728  004E24                     
 12729                           ;mcc_generated_files/i2c_master.c: 637:     PIE1bits.SSPIE = 0;
 12730  004E24  969D               	bcf	157,3,c	;volatile
 12731  004E26  0012               	return		;funcret
 12732  004E28                     __end_of_I2C_MasterDisableIrq:
 12733                           	callstack 0
 12734                           
 12735 ;; *************** function _I2C_MasterClose *****************
 12736 ;; Defined at:
 12737 ;;		line 557 in file "mcc_generated_files/i2c_master.c"
 12738 ;; Parameters:    Size  Location     Type
 12739 ;;		None
 12740 ;; Auto vars:     Size  Location     Type
 12741 ;;		None
 12742 ;; Return value:  Size  Location     Type
 12743 ;;                  1    wreg      void 
 12744 ;; Registers used:
 12745 ;;		None
 12746 ;; Tracked objects:
 12747 ;;		On entry : 0/0
 12748 ;;		On exit  : 0/0
 12749 ;;		Unchanged: 0/0
 12750 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12751 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12752 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12753 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12754 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12755 ;;Total ram usage:        0 bytes
 12756 ;; Hardware stack levels used: 1
 12757 ;; Hardware stack levels required when called: 4
 12758 ;; This function calls:
 12759 ;;		Nothing
 12760 ;; This function is called by:
 12761 ;;		_I2C_Close
 12762 ;; This function uses a non-reentrant model
 12763 ;;
 12764                           
 12765                           	psect	text87
 12766  004E28                     __ptext87:
 12767                           	callstack 0
 12768  004E28                     _I2C_MasterClose:
 12769                           	callstack 22
 12770  004E28                     
 12771                           ;mcc_generated_files/i2c_master.c: 560:     SSPCON1bits.SSPEN = 0;
 12772  004E28  9AC6               	bcf	198,5,c	;volatile
 12773  004E2A  0012               	return		;funcret
 12774  004E2C                     __end_of_I2C_MasterClose:
 12775                           	callstack 0
 12776                           
 12777 ;; *************** function _I2C_MasterClearIrq *****************
 12778 ;; Defined at:
 12779 ;;		line 640 in file "mcc_generated_files/i2c_master.c"
 12780 ;; Parameters:    Size  Location     Type
 12781 ;;		None
 12782 ;; Auto vars:     Size  Location     Type
 12783 ;;		None
 12784 ;; Return value:  Size  Location     Type
 12785 ;;                  1    wreg      void 
 12786 ;; Registers used:
 12787 ;;		None
 12788 ;; Tracked objects:
 12789 ;;		On entry : 0/0
 12790 ;;		On exit  : 0/0
 12791 ;;		Unchanged: 0/0
 12792 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12793 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12794 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12795 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12796 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12797 ;;Total ram usage:        0 bytes
 12798 ;; Hardware stack levels used: 1
 12799 ;; Hardware stack levels required when called: 4
 12800 ;; This function calls:
 12801 ;;		Nothing
 12802 ;; This function is called by:
 12803 ;;		_I2C_Open
 12804 ;;		_I2C_Close
 12805 ;;		_I2C_MasterFsm
 12806 ;; This function uses a non-reentrant model
 12807 ;;
 12808                           
 12809                           	psect	text88
 12810  004E2C                     __ptext88:
 12811                           	callstack 0
 12812  004E2C                     _I2C_MasterClearIrq:
 12813                           	callstack 22
 12814  004E2C                     
 12815                           ;mcc_generated_files/i2c_master.c: 642:     PIR1bits.SSPIF = 0;
 12816  004E2C  969E               	bcf	158,3,c	;volatile
 12817  004E2E  0012               	return		;funcret
 12818  004E30                     __end_of_I2C_MasterClearIrq:
 12819                           	callstack 0
 12820                           
 12821 ;; *************** function _SYSTEM_Initialize *****************
 12822 ;; Defined at:
 12823 ;;		line 50 in file "mcc_generated_files/mcc.c"
 12824 ;; Parameters:    Size  Location     Type
 12825 ;;		None
 12826 ;; Auto vars:     Size  Location     Type
 12827 ;;		None
 12828 ;; Return value:  Size  Location     Type
 12829 ;;                  1    wreg      void 
 12830 ;; Registers used:
 12831 ;;		wreg, status,2, status,0, cstack
 12832 ;; Tracked objects:
 12833 ;;		On entry : 0/0
 12834 ;;		On exit  : 0/0
 12835 ;;		Unchanged: 0/0
 12836 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12837 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12838 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12839 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12840 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12841 ;;Total ram usage:        0 bytes
 12842 ;; Hardware stack levels used: 1
 12843 ;; Hardware stack levels required when called: 6
 12844 ;; This function calls:
 12845 ;;		_EUSART_Initialize
 12846 ;;		_I2C_Initialize
 12847 ;;		_INTERRUPT_Initialize
 12848 ;;		_OSCILLATOR_Initialize
 12849 ;;		_PIN_MANAGER_Initialize
 12850 ;; This function is called by:
 12851 ;;		_main
 12852 ;; This function uses a non-reentrant model
 12853 ;;
 12854                           
 12855                           	psect	text89
 12856  004CC4                     __ptext89:
 12857                           	callstack 0
 12858  004CC4                     _SYSTEM_Initialize:
 12859                           	callstack 24
 12860  004CC4                     
 12861                           ;mcc_generated_files/mcc.c: 53:     INTERRUPT_Initialize();
 12862  004CC4  EC18  F027         	call	_INTERRUPT_Initialize	;wreg free
 12863  004CC8                     
 12864                           ;mcc_generated_files/mcc.c: 54:     I2C_Initialize();
 12865  004CC8  EC77  F026         	call	_I2C_Initialize	;wreg free
 12866  004CCC                     
 12867                           ;mcc_generated_files/mcc.c: 55:     PIN_MANAGER_Initialize();
 12868  004CCC  EC33  F025         	call	_PIN_MANAGER_Initialize	;wreg free
 12869  004CD0                     
 12870                           ;mcc_generated_files/mcc.c: 56:     OSCILLATOR_Initialize();
 12871  004CD0  ECB0  F026         	call	_OSCILLATOR_Initialize	;wreg free
 12872  004CD4                     
 12873                           ;mcc_generated_files/mcc.c: 57:     EUSART_Initialize();
 12874  004CD4  EC40  F022         	call	_EUSART_Initialize	;wreg free
 12875  004CD8  0012               	return		;funcret
 12876  004CDA                     __end_of_SYSTEM_Initialize:
 12877                           	callstack 0
 12878                           
 12879 ;; *************** function _PIN_MANAGER_Initialize *****************
 12880 ;; Defined at:
 12881 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
 12882 ;; Parameters:    Size  Location     Type
 12883 ;;		None
 12884 ;; Auto vars:     Size  Location     Type
 12885 ;;		None
 12886 ;; Return value:  Size  Location     Type
 12887 ;;                  1    wreg      void 
 12888 ;; Registers used:
 12889 ;;		wreg, status,2
 12890 ;; Tracked objects:
 12891 ;;		On entry : 0/0
 12892 ;;		On exit  : 0/0
 12893 ;;		Unchanged: 0/0
 12894 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12895 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12896 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12897 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12898 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12899 ;;Total ram usage:        0 bytes
 12900 ;; Hardware stack levels used: 1
 12901 ;; Hardware stack levels required when called: 4
 12902 ;; This function calls:
 12903 ;;		Nothing
 12904 ;; This function is called by:
 12905 ;;		_SYSTEM_Initialize
 12906 ;; This function uses a non-reentrant model
 12907 ;;
 12908                           
 12909                           	psect	text90
 12910  004A66                     __ptext90:
 12911                           	callstack 0
 12912  004A66                     _PIN_MANAGER_Initialize:
 12913                           	callstack 25
 12914  004A66                     
 12915                           ;mcc_generated_files/pin_manager.c: 60:     LATE = 0x00;
 12916  004A66  0E00               	movlw	0
 12917  004A68  6E8D               	movwf	141,c	;volatile
 12918                           
 12919                           ;mcc_generated_files/pin_manager.c: 61:     LATD = 0x00;
 12920  004A6A  0E00               	movlw	0
 12921  004A6C  6E8C               	movwf	140,c	;volatile
 12922                           
 12923                           ;mcc_generated_files/pin_manager.c: 62:     LATA = 0x00;
 12924  004A6E  0E00               	movlw	0
 12925  004A70  6E89               	movwf	137,c	;volatile
 12926                           
 12927                           ;mcc_generated_files/pin_manager.c: 63:     LATB = 0x00;
 12928  004A72  0E00               	movlw	0
 12929  004A74  6E8A               	movwf	138,c	;volatile
 12930                           
 12931                           ;mcc_generated_files/pin_manager.c: 64:     LATC = 0x00;
 12932  004A76  0E00               	movlw	0
 12933  004A78  6E8B               	movwf	139,c	;volatile
 12934                           
 12935                           ;mcc_generated_files/pin_manager.c: 69:     TRISE = 0x07;
 12936  004A7A  0E07               	movlw	7
 12937  004A7C  6E96               	movwf	150,c	;volatile
 12938  004A7E                     
 12939                           ;mcc_generated_files/pin_manager.c: 70:     TRISA = 0xFF;
 12940  004A7E  6892               	setf	146,c	;volatile
 12941  004A80                     
 12942                           ;mcc_generated_files/pin_manager.c: 71:     TRISB = 0xFF;
 12943  004A80  6893               	setf	147,c	;volatile
 12944                           
 12945                           ;mcc_generated_files/pin_manager.c: 72:     TRISC = 0xBF;
 12946  004A82  0EBF               	movlw	191
 12947  004A84  6E94               	movwf	148,c	;volatile
 12948  004A86                     
 12949                           ;mcc_generated_files/pin_manager.c: 73:     TRISD = 0xFF;
 12950  004A86  6895               	setf	149,c	;volatile
 12951  004A88                     
 12952                           ;mcc_generated_files/pin_manager.c: 78:     ANSEL = 0xFF;
 12953  004A88  687E               	setf	126,c	;volatile
 12954                           
 12955                           ;mcc_generated_files/pin_manager.c: 79:     ANSELH = 0x1F;
 12956  004A8A  0E1F               	movlw	31
 12957  004A8C  6E7F               	movwf	127,c	;volatile
 12958                           
 12959                           ;mcc_generated_files/pin_manager.c: 84:     WPUB = 0x00;
 12960  004A8E  0E00               	movlw	0
 12961  004A90  6E7C               	movwf	124,c	;volatile
 12962  004A92                     
 12963                           ;mcc_generated_files/pin_manager.c: 85:     INTCON2bits.nRBPU = 1;
 12964  004A92  8EF1               	bsf	241,7,c	;volatile
 12965  004A94  0012               	return		;funcret
 12966  004A96                     __end_of_PIN_MANAGER_Initialize:
 12967                           	callstack 0
 12968                           
 12969 ;; *************** function _OSCILLATOR_Initialize *****************
 12970 ;; Defined at:
 12971 ;;		line 60 in file "mcc_generated_files/mcc.c"
 12972 ;; Parameters:    Size  Location     Type
 12973 ;;		None
 12974 ;; Auto vars:     Size  Location     Type
 12975 ;;		None
 12976 ;; Return value:  Size  Location     Type
 12977 ;;                  1    wreg      void 
 12978 ;; Registers used:
 12979 ;;		wreg, status,2
 12980 ;; Tracked objects:
 12981 ;;		On entry : 0/0
 12982 ;;		On exit  : 0/0
 12983 ;;		Unchanged: 0/0
 12984 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12985 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12986 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12987 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12988 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12989 ;;Total ram usage:        0 bytes
 12990 ;; Hardware stack levels used: 1
 12991 ;; Hardware stack levels required when called: 4
 12992 ;; This function calls:
 12993 ;;		Nothing
 12994 ;; This function is called by:
 12995 ;;		_SYSTEM_Initialize
 12996 ;; This function uses a non-reentrant model
 12997 ;;
 12998                           
 12999                           	psect	text91
 13000  004D60                     __ptext91:
 13001                           	callstack 0
 13002  004D60                     _OSCILLATOR_Initialize:
 13003                           	callstack 25
 13004  004D60                     
 13005                           ;mcc_generated_files/mcc.c: 63:     OSCCON = 0x60;
 13006  004D60  0E60               	movlw	96
 13007  004D62  6ED3               	movwf	211,c	;volatile
 13008                           
 13009                           ;mcc_generated_files/mcc.c: 65:     OSCTUNE = 0x00;
 13010  004D64  0E00               	movlw	0
 13011  004D66  6E9B               	movwf	155,c	;volatile
 13012  004D68  0012               	return		;funcret
 13013  004D6A                     __end_of_OSCILLATOR_Initialize:
 13014                           	callstack 0
 13015                           
 13016 ;; *************** function _INTERRUPT_Initialize *****************
 13017 ;; Defined at:
 13018 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 13019 ;; Parameters:    Size  Location     Type
 13020 ;;		None
 13021 ;; Auto vars:     Size  Location     Type
 13022 ;;		None
 13023 ;; Return value:  Size  Location     Type
 13024 ;;                  1    wreg      void 
 13025 ;; Registers used:
 13026 ;;		None
 13027 ;; Tracked objects:
 13028 ;;		On entry : 0/0
 13029 ;;		On exit  : 0/0
 13030 ;;		Unchanged: 0/0
 13031 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13032 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13033 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13034 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13035 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13036 ;;Total ram usage:        0 bytes
 13037 ;; Hardware stack levels used: 1
 13038 ;; Hardware stack levels required when called: 4
 13039 ;; This function calls:
 13040 ;;		Nothing
 13041 ;; This function is called by:
 13042 ;;		_SYSTEM_Initialize
 13043 ;; This function uses a non-reentrant model
 13044 ;;
 13045                           
 13046                           	psect	text92
 13047  004E30                     __ptext92:
 13048                           	callstack 0
 13049  004E30                     _INTERRUPT_Initialize:
 13050                           	callstack 25
 13051  004E30                     
 13052                           ;mcc_generated_files/interrupt_manager.c: 55:     RCONbits.IPEN = 0;
 13053  004E30  9ED0               	bcf	208,7,c	;volatile
 13054  004E32  0012               	return		;funcret
 13055  004E34                     __end_of_INTERRUPT_Initialize:
 13056                           	callstack 0
 13057                           
 13058 ;; *************** function _I2C_Initialize *****************
 13059 ;; Defined at:
 13060 ;;		line 167 in file "mcc_generated_files/i2c_master.c"
 13061 ;; Parameters:    Size  Location     Type
 13062 ;;		None
 13063 ;; Auto vars:     Size  Location     Type
 13064 ;;		None
 13065 ;; Return value:  Size  Location     Type
 13066 ;;                  1    wreg      void 
 13067 ;; Registers used:
 13068 ;;		wreg, status,2
 13069 ;; Tracked objects:
 13070 ;;		On entry : 0/0
 13071 ;;		On exit  : 0/0
 13072 ;;		Unchanged: 0/0
 13073 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13074 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13075 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13076 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13077 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13078 ;;Total ram usage:        0 bytes
 13079 ;; Hardware stack levels used: 1
 13080 ;; Hardware stack levels required when called: 4
 13081 ;; This function calls:
 13082 ;;		Nothing
 13083 ;; This function is called by:
 13084 ;;		_SYSTEM_Initialize
 13085 ;; This function uses a non-reentrant model
 13086 ;;
 13087                           
 13088                           	psect	text93
 13089  004CEE                     __ptext93:
 13090                           	callstack 0
 13091  004CEE                     _I2C_Initialize:
 13092                           	callstack 25
 13093  004CEE                     
 13094                           ;mcc_generated_files/i2c_master.c: 169:     SSPSTAT = 0x00;
 13095  004CEE  0E00               	movlw	0
 13096  004CF0  6EC7               	movwf	199,c	;volatile
 13097                           
 13098                           ;mcc_generated_files/i2c_master.c: 170:     SSPCON1 = 0x08;
 13099  004CF2  0E08               	movlw	8
 13100  004CF4  6EC6               	movwf	198,c	;volatile
 13101                           
 13102                           ;mcc_generated_files/i2c_master.c: 171:     SSPCON2 = 0x00;
 13103  004CF6  0E00               	movlw	0
 13104  004CF8  6EC5               	movwf	197,c	;volatile
 13105                           
 13106                           ;mcc_generated_files/i2c_master.c: 172:     SSPADD = 0x13;
 13107  004CFA  0E13               	movlw	19
 13108  004CFC  6EC8               	movwf	200,c	;volatile
 13109  004CFE                     
 13110                           ;mcc_generated_files/i2c_master.c: 173:     SSPCON1bits.SSPEN = 0;
 13111  004CFE  9AC6               	bcf	198,5,c	;volatile
 13112  004D00  0012               	return		;funcret
 13113  004D02                     __end_of_I2C_Initialize:
 13114                           	callstack 0
 13115                           
 13116 ;; *************** function _EUSART_Initialize *****************
 13117 ;; Defined at:
 13118 ;;		line 88 in file "mcc_generated_files/eusart.c"
 13119 ;; Parameters:    Size  Location     Type
 13120 ;;		None
 13121 ;; Auto vars:     Size  Location     Type
 13122 ;;		None
 13123 ;; Return value:  Size  Location     Type
 13124 ;;                  1    wreg      void 
 13125 ;; Registers used:
 13126 ;;		wreg, status,2, status,0, cstack
 13127 ;; Tracked objects:
 13128 ;;		On entry : 0/0
 13129 ;;		On exit  : 0/0
 13130 ;;		Unchanged: 0/0
 13131 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13132 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13133 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13134 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13135 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13136 ;;Total ram usage:        0 bytes
 13137 ;; Hardware stack levels used: 1
 13138 ;; Hardware stack levels required when called: 5
 13139 ;; This function calls:
 13140 ;;		_EUSART_SetErrorHandler
 13141 ;;		_EUSART_SetFramingErrorHandler
 13142 ;;		_EUSART_SetOverrunErrorHandler
 13143 ;;		_EUSART_SetRxInterruptHandler
 13144 ;;		_EUSART_SetTxInterruptHandler
 13145 ;; This function is called by:
 13146 ;;		_SYSTEM_Initialize
 13147 ;; This function uses a non-reentrant model
 13148 ;;
 13149                           
 13150                           	psect	text94
 13151  004480                     __ptext94:
 13152                           	callstack 0
 13153  004480                     _EUSART_Initialize:
 13154                           	callstack 24
 13155  004480                     
 13156                           ;mcc_generated_files/eusart.c: 91:     PIE1bits.RC1IE = 0;
 13157  004480  9A9D               	bcf	157,5,c	;volatile
 13158  004482                     
 13159                           ;mcc_generated_files/eusart.c: 92:     EUSART_SetRxInterruptHandler(EUSART_Receive_ISR);
 13160  004482  0EAA               	movlw	low _EUSART_Receive_ISR
 13161  004484  6E05               	movwf	EUSART_SetRxInterruptHandler@interruptHandler^0,c
 13162  004486  0E3F               	movlw	high _EUSART_Receive_ISR
 13163  004488  6E06               	movwf	(EUSART_SetRxInterruptHandler@interruptHandler+1)^0,c
 13164  00448A  ECBA  F026         	call	_EUSART_SetRxInterruptHandler	;wreg free
 13165  00448E                     
 13166                           ;mcc_generated_files/eusart.c: 93:     PIE1bits.TX1IE = 0;
 13167  00448E  989D               	bcf	157,4,c	;volatile
 13168                           
 13169                           ;mcc_generated_files/eusart.c: 94:     EUSART_SetTxInterruptHandler(EUSART_Transmit_ISR)
      +                          ;
 13170  004490  0E06               	movlw	low _EUSART_Transmit_ISR
 13171  004492  6E05               	movwf	EUSART_SetTxInterruptHandler@interruptHandler^0,c
 13172  004494  0E49               	movlw	high _EUSART_Transmit_ISR
 13173  004496  6E06               	movwf	(EUSART_SetTxInterruptHandler@interruptHandler+1)^0,c
 13174  004498  ECB5  F026         	call	_EUSART_SetTxInterruptHandler	;wreg free
 13175  00449C                     
 13176                           ;mcc_generated_files/eusart.c: 98:     BAUDCON = 0x08;
 13177  00449C  0E08               	movlw	8
 13178  00449E  6EB8               	movwf	184,c	;volatile
 13179  0044A0                     
 13180                           ;mcc_generated_files/eusart.c: 101:     RCSTA = 0x90;
 13181  0044A0  0E90               	movlw	144
 13182  0044A2  6EAB               	movwf	171,c	;volatile
 13183  0044A4                     
 13184                           ;mcc_generated_files/eusart.c: 104:     TXSTA = 0x24;
 13185  0044A4  0E24               	movlw	36
 13186  0044A6  6EAC               	movwf	172,c	;volatile
 13187  0044A8                     
 13188                           ;mcc_generated_files/eusart.c: 107:     SPBRG = 0xCF;
 13189  0044A8  0ECF               	movlw	207
 13190  0044AA  6EAF               	movwf	175,c	;volatile
 13191  0044AC                     
 13192                           ;mcc_generated_files/eusart.c: 110:     SPBRGH = 0x00;
 13193  0044AC  0E00               	movlw	0
 13194  0044AE  6EB0               	movwf	176,c	;volatile
 13195  0044B0                     
 13196                           ;mcc_generated_files/eusart.c: 113:     EUSART_SetFramingErrorHandler(EUSART_DefaultFram
      +                          ingErrorHandler);
 13197  0044B0  0E34               	movlw	low _EUSART_DefaultFramingErrorHandler
 13198  0044B2  6E05               	movwf	EUSART_SetFramingErrorHandler@interruptHandler^0,c
 13199  0044B4  0E4E               	movlw	high _EUSART_DefaultFramingErrorHandler
 13200  0044B6  6E06               	movwf	(EUSART_SetFramingErrorHandler@interruptHandler+1)^0,c
 13201  0044B8  ECC4  F026         	call	_EUSART_SetFramingErrorHandler	;wreg free
 13202  0044BC                     
 13203                           ;mcc_generated_files/eusart.c: 114:     EUSART_SetOverrunErrorHandler(EUSART_DefaultOver
      +                          runErrorHandler);
 13204  0044BC  0EF8               	movlw	low _EUSART_DefaultOverrunErrorHandler
 13205  0044BE  6E05               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler^0,c
 13206  0044C0  0E4D               	movlw	high _EUSART_DefaultOverrunErrorHandler
 13207  0044C2  6E06               	movwf	(EUSART_SetOverrunErrorHandler@interruptHandler+1)^0,c
 13208  0044C4  ECBF  F026         	call	_EUSART_SetOverrunErrorHandler	;wreg free
 13209  0044C8                     
 13210                           ;mcc_generated_files/eusart.c: 115:     EUSART_SetErrorHandler(EUSART_DefaultErrorHandle
      +                          r);
 13211  0044C8  0EFE               	movlw	low _EUSART_DefaultErrorHandler
 13212  0044CA  6E05               	movwf	EUSART_SetErrorHandler@interruptHandler^0,c
 13213  0044CC  0E4D               	movlw	high _EUSART_DefaultErrorHandler
 13214  0044CE  6E06               	movwf	(EUSART_SetErrorHandler@interruptHandler+1)^0,c
 13215  0044D0  ECC9  F026         	call	_EUSART_SetErrorHandler	;wreg free
 13216                           
 13217                           ;mcc_generated_files/eusart.c: 117:     eusartRxLastError.status = 0;
 13218  0044D4  0E00               	movlw	0
 13219  0044D6  0100               	movlb	0	; () banked
 13220  0044D8  6FFC               	movwf	_eusartRxLastError& (0+255),b	;volatile
 13221                           
 13222                           ;mcc_generated_files/eusart.c: 120:     eusartTxHead = 0;
 13223  0044DA  0E00               	movlw	0
 13224  0044DC  6E5A               	movwf	_eusartTxHead^0,c	;volatile
 13225                           
 13226                           ;mcc_generated_files/eusart.c: 121:     eusartTxTail = 0;
 13227  0044DE  0E00               	movlw	0
 13228  0044E0  6E59               	movwf	_eusartTxTail^0,c	;volatile
 13229                           
 13230                           ;mcc_generated_files/eusart.c: 122:     eusartTxBufferRemaining = sizeof(eusartTxBuffer)
      +                          ;
 13231  0044E2  0E08               	movlw	8
 13232  0044E4  6FFF               	movwf	_eusartTxBufferRemaining& (0+255),b	;volatile
 13233                           
 13234                           ;mcc_generated_files/eusart.c: 124:     eusartRxHead = 0;
 13235  0044E6  0E00               	movlw	0
 13236  0044E8  6E58               	movwf	_eusartRxHead^0,c	;volatile
 13237                           
 13238                           ;mcc_generated_files/eusart.c: 125:     eusartRxTail = 0;
 13239  0044EA  0E00               	movlw	0
 13240  0044EC  6E57               	movwf	_eusartRxTail^0,c	;volatile
 13241                           
 13242                           ;mcc_generated_files/eusart.c: 126:     eusartRxCount = 0;
 13243  0044EE  0E00               	movlw	0
 13244  0044F0  6E56               	movwf	_eusartRxCount^0,c	;volatile
 13245  0044F2                     
 13246                           ; BSR set to: 0
 13247                           ;mcc_generated_files/eusart.c: 129:     PIE1bits.RC1IE = 1;
 13248  0044F2  8A9D               	bsf	157,5,c	;volatile
 13249  0044F4                     
 13250                           ; BSR set to: 0
 13251  0044F4  0012               	return		;funcret
 13252  0044F6                     __end_of_EUSART_Initialize:
 13253                           	callstack 0
 13254                           
 13255 ;; *************** function _EUSART_SetTxInterruptHandler *****************
 13256 ;; Defined at:
 13257 ;;		line 285 in file "mcc_generated_files/eusart.c"
 13258 ;; Parameters:    Size  Location     Type
 13259 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
 13260 ;;		 -> EUSART_Transmit_ISR(1), 
 13261 ;; Auto vars:     Size  Location     Type
 13262 ;;		None
 13263 ;; Return value:  Size  Location     Type
 13264 ;;                  1    wreg      void 
 13265 ;; Registers used:
 13266 ;;		wreg, status,2, status,0
 13267 ;; Tracked objects:
 13268 ;;		On entry : 0/0
 13269 ;;		On exit  : 0/0
 13270 ;;		Unchanged: 0/0
 13271 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13272 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13273 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13274 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13275 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13276 ;;Total ram usage:        2 bytes
 13277 ;; Hardware stack levels used: 1
 13278 ;; Hardware stack levels required when called: 4
 13279 ;; This function calls:
 13280 ;;		Nothing
 13281 ;; This function is called by:
 13282 ;;		_EUSART_Initialize
 13283 ;; This function uses a non-reentrant model
 13284 ;;
 13285                           
 13286                           	psect	text95
 13287  004D6A                     __ptext95:
 13288                           	callstack 0
 13289  004D6A                     _EUSART_SetTxInterruptHandler:
 13290                           	callstack 24
 13291  004D6A                     
 13292                           ;mcc_generated_files/eusart.c: 286:     EUSART_TxDefaultInterruptHandler = interruptHand
      +                          ler;
 13293  004D6A  C005  F0FD         	movff	EUSART_SetTxInterruptHandler@interruptHandler,_EUSART_TxDefaultInterruptHandler
 13294  004D6E  C006  F0FE         	movff	EUSART_SetTxInterruptHandler@interruptHandler+1,_EUSART_TxDefaultInterruptHandler
      +                          +1
 13295  004D72  0012               	return		;funcret
 13296  004D74                     __end_of_EUSART_SetTxInterruptHandler:
 13297                           	callstack 0
 13298                           
 13299 ;; *************** function _EUSART_SetRxInterruptHandler *****************
 13300 ;; Defined at:
 13301 ;;		line 289 in file "mcc_generated_files/eusart.c"
 13302 ;; Parameters:    Size  Location     Type
 13303 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
 13304 ;;		 -> EUSART_Receive_ISR(1), 
 13305 ;; Auto vars:     Size  Location     Type
 13306 ;;		None
 13307 ;; Return value:  Size  Location     Type
 13308 ;;                  1    wreg      void 
 13309 ;; Registers used:
 13310 ;;		wreg, status,2, status,0
 13311 ;; Tracked objects:
 13312 ;;		On entry : 0/0
 13313 ;;		On exit  : 0/0
 13314 ;;		Unchanged: 0/0
 13315 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13316 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13317 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13318 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13319 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13320 ;;Total ram usage:        2 bytes
 13321 ;; Hardware stack levels used: 1
 13322 ;; Hardware stack levels required when called: 4
 13323 ;; This function calls:
 13324 ;;		Nothing
 13325 ;; This function is called by:
 13326 ;;		_EUSART_Initialize
 13327 ;; This function uses a non-reentrant model
 13328 ;;
 13329                           
 13330                           	psect	text96
 13331  004D74                     __ptext96:
 13332                           	callstack 0
 13333  004D74                     _EUSART_SetRxInterruptHandler:
 13334                           	callstack 24
 13335  004D74                     
 13336                           ;mcc_generated_files/eusart.c: 290:     EUSART_RxDefaultInterruptHandler = interruptHand
      +                          ler;
 13337  004D74  C005  F182         	movff	EUSART_SetRxInterruptHandler@interruptHandler,_EUSART_RxDefaultInterruptHandler
 13338  004D78  C006  F183         	movff	EUSART_SetRxInterruptHandler@interruptHandler+1,_EUSART_RxDefaultInterruptHandler
      +                          +1
 13339  004D7C  0012               	return		;funcret
 13340  004D7E                     __end_of_EUSART_SetRxInterruptHandler:
 13341                           	callstack 0
 13342                           
 13343 ;; *************** function _EUSART_SetOverrunErrorHandler *****************
 13344 ;; Defined at:
 13345 ;;		line 277 in file "mcc_generated_files/eusart.c"
 13346 ;; Parameters:    Size  Location     Type
 13347 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
 13348 ;;		 -> EUSART_DefaultOverrunErrorHandler(1), 
 13349 ;; Auto vars:     Size  Location     Type
 13350 ;;		None
 13351 ;; Return value:  Size  Location     Type
 13352 ;;                  1    wreg      void 
 13353 ;; Registers used:
 13354 ;;		wreg, status,2, status,0
 13355 ;; Tracked objects:
 13356 ;;		On entry : 0/0
 13357 ;;		On exit  : 0/0
 13358 ;;		Unchanged: 0/0
 13359 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13360 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13361 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13362 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13363 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13364 ;;Total ram usage:        2 bytes
 13365 ;; Hardware stack levels used: 1
 13366 ;; Hardware stack levels required when called: 4
 13367 ;; This function calls:
 13368 ;;		Nothing
 13369 ;; This function is called by:
 13370 ;;		_EUSART_Initialize
 13371 ;; This function uses a non-reentrant model
 13372 ;;
 13373                           
 13374                           	psect	text97
 13375  004D7E                     __ptext97:
 13376                           	callstack 0
 13377  004D7E                     _EUSART_SetOverrunErrorHandler:
 13378                           	callstack 24
 13379  004D7E                     
 13380                           ;mcc_generated_files/eusart.c: 278:     EUSART_OverrunErrorHandler = interruptHandler;
 13381  004D7E  C005  F17E         	movff	EUSART_SetOverrunErrorHandler@interruptHandler,_EUSART_OverrunErrorHandler
 13382  004D82  C006  F17F         	movff	EUSART_SetOverrunErrorHandler@interruptHandler+1,_EUSART_OverrunErrorHandler+1
 13383  004D86  0012               	return		;funcret
 13384  004D88                     __end_of_EUSART_SetOverrunErrorHandler:
 13385                           	callstack 0
 13386                           
 13387 ;; *************** function _EUSART_SetFramingErrorHandler *****************
 13388 ;; Defined at:
 13389 ;;		line 273 in file "mcc_generated_files/eusart.c"
 13390 ;; Parameters:    Size  Location     Type
 13391 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
 13392 ;;		 -> EUSART_DefaultFramingErrorHandler(1), 
 13393 ;; Auto vars:     Size  Location     Type
 13394 ;;		None
 13395 ;; Return value:  Size  Location     Type
 13396 ;;                  1    wreg      void 
 13397 ;; Registers used:
 13398 ;;		wreg, status,2, status,0
 13399 ;; Tracked objects:
 13400 ;;		On entry : 0/0
 13401 ;;		On exit  : 0/0
 13402 ;;		Unchanged: 0/0
 13403 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13404 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13405 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13406 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13407 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13408 ;;Total ram usage:        2 bytes
 13409 ;; Hardware stack levels used: 1
 13410 ;; Hardware stack levels required when called: 4
 13411 ;; This function calls:
 13412 ;;		Nothing
 13413 ;; This function is called by:
 13414 ;;		_EUSART_Initialize
 13415 ;; This function uses a non-reentrant model
 13416 ;;
 13417                           
 13418                           	psect	text98
 13419  004D88                     __ptext98:
 13420                           	callstack 0
 13421  004D88                     _EUSART_SetFramingErrorHandler:
 13422                           	callstack 24
 13423  004D88                     
 13424                           ;mcc_generated_files/eusart.c: 274:     EUSART_FramingErrorHandler = interruptHandler;
 13425  004D88  C005  F180         	movff	EUSART_SetFramingErrorHandler@interruptHandler,_EUSART_FramingErrorHandler
 13426  004D8C  C006  F181         	movff	EUSART_SetFramingErrorHandler@interruptHandler+1,_EUSART_FramingErrorHandler+1
 13427  004D90  0012               	return		;funcret
 13428  004D92                     __end_of_EUSART_SetFramingErrorHandler:
 13429                           	callstack 0
 13430                           
 13431 ;; *************** function _EUSART_SetErrorHandler *****************
 13432 ;; Defined at:
 13433 ;;		line 281 in file "mcc_generated_files/eusart.c"
 13434 ;; Parameters:    Size  Location     Type
 13435 ;;  interruptHan    2    4[COMRAM] PTR FTN()void 
 13436 ;;		 -> EUSART_DefaultErrorHandler(1), 
 13437 ;; Auto vars:     Size  Location     Type
 13438 ;;		None
 13439 ;; Return value:  Size  Location     Type
 13440 ;;                  1    wreg      void 
 13441 ;; Registers used:
 13442 ;;		wreg, status,2, status,0
 13443 ;; Tracked objects:
 13444 ;;		On entry : 0/0
 13445 ;;		On exit  : 0/0
 13446 ;;		Unchanged: 0/0
 13447 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13448 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13449 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13450 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13451 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13452 ;;Total ram usage:        2 bytes
 13453 ;; Hardware stack levels used: 1
 13454 ;; Hardware stack levels required when called: 4
 13455 ;; This function calls:
 13456 ;;		Nothing
 13457 ;; This function is called by:
 13458 ;;		_EUSART_Initialize
 13459 ;; This function uses a non-reentrant model
 13460 ;;
 13461                           
 13462                           	psect	text99
 13463  004D92                     __ptext99:
 13464                           	callstack 0
 13465  004D92                     _EUSART_SetErrorHandler:
 13466                           	callstack 24
 13467  004D92                     
 13468                           ;mcc_generated_files/eusart.c: 282:     EUSART_ErrorHandler = interruptHandler;
 13469  004D92  C005  F17C         	movff	EUSART_SetErrorHandler@interruptHandler,_EUSART_ErrorHandler
 13470  004D96  C006  F17D         	movff	EUSART_SetErrorHandler@interruptHandler+1,_EUSART_ErrorHandler+1
 13471  004D9A  0012               	return		;funcret
 13472  004D9C                     __end_of_EUSART_SetErrorHandler:
 13473                           	callstack 0
 13474                           
 13475 ;; *************** function _INTERRUPT_InterruptManager *****************
 13476 ;; Defined at:
 13477 ;;		line 58 in file "mcc_generated_files/interrupt_manager.c"
 13478 ;; Parameters:    Size  Location     Type
 13479 ;;		None
 13480 ;; Auto vars:     Size  Location     Type
 13481 ;;		None
 13482 ;; Return value:  Size  Location     Type
 13483 ;;                  1    wreg      void 
 13484 ;; Registers used:
 13485 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
 13486 ;; Tracked objects:
 13487 ;;		On entry : 0/0
 13488 ;;		On exit  : 0/0
 13489 ;;		Unchanged: 0/0
 13490 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13491 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13492 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13493 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13494 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13495 ;;Total ram usage:        4 bytes
 13496 ;; Hardware stack levels used: 1
 13497 ;; Hardware stack levels required when called: 3
 13498 ;; This function calls:
 13499 ;;		Absolute function
 13500 ;;		_EUSART_Receive_ISR
 13501 ;;		_EUSART_Transmit_ISR
 13502 ;; This function is called by:
 13503 ;;		Interrupt level 2
 13504 ;; This function uses a non-reentrant model
 13505 ;;
 13506                           
 13507                           	psect	intcode
 13508  000008                     __pintcode:
 13509                           	callstack 0
 13510  000008                     _INTERRUPT_InterruptManager:
 13511                           	callstack 16
 13512                           
 13513                           ;incstack = 0
 13514  000008  825B               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 13515  00000A  CFFA F001          	movff	pclath,??_INTERRUPT_InterruptManager
 13516  00000E  CFFB F002          	movff	pclatu,??_INTERRUPT_InterruptManager+1
 13517  000012  CFD9 F003          	movff	fsr2l,??_INTERRUPT_InterruptManager+2
 13518  000016  CFDA F004          	movff	fsr2h,??_INTERRUPT_InterruptManager+3
 13519  00001A                     
 13520                           ;mcc_generated_files/interrupt_manager.c: 61:     if(INTCONbits.PEIE == 1)
 13521  00001A  ACF2               	btfss	242,6,c	;volatile
 13522  00001C  EF12  F000         	goto	i2u604_41
 13523  000020  EF14  F000         	goto	i2u604_40
 13524  000024                     i2u604_41:
 13525  000024  EF4E  F000         	goto	i2l671
 13526  000028                     i2u604_40:
 13527  000028                     
 13528                           ;mcc_generated_files/interrupt_manager.c: 62:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 63:         if(PIE1bits.TX1IE == 1 && PIR1bits.TX1IF == 1)
 13529  000028  A89D               	btfss	157,4,c	;volatile
 13530  00002A  EF19  F000         	goto	i2u605_41
 13531  00002E  EF1B  F000         	goto	i2u605_40
 13532  000032                     i2u605_41:
 13533  000032  EF31  F000         	goto	i2l666
 13534  000036                     i2u605_40:
 13535  000036  A89E               	btfss	158,4,c	;volatile
 13536  000038  EF20  F000         	goto	i2u606_41
 13537  00003C  EF22  F000         	goto	i2u606_40
 13538  000040                     i2u606_41:
 13539  000040  EF31  F000         	goto	i2l666
 13540  000044                     i2u606_40:
 13541  000044                     
 13542                           ;mcc_generated_files/interrupt_manager.c: 64:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 65:             EUSART_TxDefaultInterruptHandler();
 13543  000044  D802               	call	i2u607_48
 13544  000046  EF2F  F000         	goto	i2u607_49
 13545  00004A                     i2u607_48:
 13546  00004A  0005               	push	
 13547  00004C  6EFA               	movwf	pclath,c
 13548  00004E  0100               	movlb	0	; () banked
 13549  000050  51FD               	movf	_EUSART_TxDefaultInterruptHandler& (0+255),w,b
 13550  000052  6EFD               	movwf	tosl,c
 13551  000054  51FE               	movf	(_EUSART_TxDefaultInterruptHandler+1)& (0+255),w,b
 13552  000056  6EFE               	movwf	tosh,c
 13553  000058  6AFF               	clrf	tosu,c
 13554  00005A  50FA               	movf	pclath,w,c
 13555  00005C  0012               	return		;indir
 13556  00005E                     i2u607_49:
 13557                           
 13558                           ;mcc_generated_files/interrupt_manager.c: 66:         }
 13559  00005E  EF4E  F000         	goto	i2l671
 13560  000062                     i2l666:
 13561  000062  AA9D               	btfss	157,5,c	;volatile
 13562  000064  EF36  F000         	goto	i2u608_41
 13563  000068  EF38  F000         	goto	i2u608_40
 13564  00006C                     i2u608_41:
 13565  00006C  EF4E  F000         	goto	i2l667
 13566  000070                     i2u608_40:
 13567  000070  AA9E               	btfss	158,5,c	;volatile
 13568  000072  EF3D  F000         	goto	i2u609_41
 13569  000076  EF3F  F000         	goto	i2u609_40
 13570  00007A                     i2u609_41:
 13571  00007A  EF4E  F000         	goto	i2l667
 13572  00007E                     i2u609_40:
 13573  00007E                     
 13574                           ;mcc_generated_files/interrupt_manager.c: 68:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 69:             EUSART_RxDefaultInterruptHandler();
 13575  00007E  D802               	call	i2u610_48
 13576  000080  EF4C  F000         	goto	i2u610_49
 13577  000084                     i2u610_48:
 13578  000084  0005               	push	
 13579  000086  6EFA               	movwf	pclath,c
 13580  000088  0101               	movlb	1	; () banked
 13581  00008A  5182               	movf	_EUSART_RxDefaultInterruptHandler& (0+255),w,b
 13582  00008C  6EFD               	movwf	tosl,c
 13583  00008E  5183               	movf	(_EUSART_RxDefaultInterruptHandler+1)& (0+255),w,b
 13584  000090  6EFE               	movwf	tosh,c
 13585  000092  6AFF               	clrf	tosu,c
 13586  000094  50FA               	movf	pclath,w,c
 13587  000096  0012               	return		;indir
 13588  000098                     i2u610_49:
 13589                           
 13590                           ;mcc_generated_files/interrupt_manager.c: 70:         }
 13591  000098  EF4E  F000         	goto	i2l671
 13592  00009C                     i2l667:
 13593  00009C                     i2l671:
 13594  00009C  C004  FFDA         	movff	??_INTERRUPT_InterruptManager+3,fsr2h
 13595  0000A0  C003  FFD9         	movff	??_INTERRUPT_InterruptManager+2,fsr2l
 13596  0000A4  C002  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
 13597  0000A8  C001  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
 13598  0000AC  925B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 13599  0000AE  0011               	retfie		f
 13600  0000B0                     __end_of_INTERRUPT_InterruptManager:
 13601                           	callstack 0
 13602                           
 13603 ;; *************** function _EUSART_Transmit_ISR *****************
 13604 ;; Defined at:
 13605 ;;		line 206 in file "mcc_generated_files/eusart.c"
 13606 ;; Parameters:    Size  Location     Type
 13607 ;;		None
 13608 ;; Auto vars:     Size  Location     Type
 13609 ;;		None
 13610 ;; Return value:  Size  Location     Type
 13611 ;;                  1    wreg      void 
 13612 ;; Registers used:
 13613 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 13614 ;; Tracked objects:
 13615 ;;		On entry : 0/0
 13616 ;;		On exit  : 0/0
 13617 ;;		Unchanged: 0/0
 13618 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13619 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13620 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13621 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13622 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13623 ;;Total ram usage:        0 bytes
 13624 ;; Hardware stack levels used: 1
 13625 ;; This function calls:
 13626 ;;		Nothing
 13627 ;; This function is called by:
 13628 ;;		_EUSART_Initialize
 13629 ;;		_INTERRUPT_InterruptManager
 13630 ;; This function uses a non-reentrant model
 13631 ;;
 13632                           
 13633                           	psect	text101
 13634  004906                     __ptext101:
 13635                           	callstack 0
 13636  004906                     _EUSART_Transmit_ISR:
 13637                           	callstack 18
 13638  004906                     
 13639                           ;mcc_generated_files/eusart.c: 210:     if(sizeof(eusartTxBuffer) > eusartTxBufferRemain
      +                          ing)
 13640  004906  0E08               	movlw	8
 13641  004908  0100               	movlb	0	; () banked
 13642  00490A  61FF               	cpfslt	_eusartTxBufferRemaining& (0+255),b	;volatile
 13643  00490C  EF8A  F024         	goto	i2u576_41
 13644  004910  EF8C  F024         	goto	i2u576_40
 13645  004914                     i2u576_41:
 13646  004914  EFA2  F024         	goto	i2l607
 13647  004918                     i2u576_40:
 13648  004918                     
 13649                           ; BSR set to: 0
 13650                           ;mcc_generated_files/eusart.c: 211:     {;mcc_generated_files/eusart.c: 212:         TXR
      +                          EG = eusartTxBuffer[eusartTxTail++];
 13651  004918  0E10               	movlw	low _eusartTxBuffer
 13652  00491A  2459               	addwf	_eusartTxTail^0,w,c	;volatile
 13653  00491C  6ED9               	movwf	fsr2l,c
 13654  00491E  6ADA               	clrf	fsr2h,c
 13655  004920  0E01               	movlw	high _eusartTxBuffer
 13656  004922  22DA               	addwfc	fsr2h,f,c
 13657  004924  50DF               	movf	indf2,w,c
 13658  004926  6EAD               	movwf	173,c	;volatile
 13659  004928                     
 13660                           ; BSR set to: 0
 13661  004928  2A59               	incf	_eusartTxTail^0,f,c	;volatile
 13662  00492A                     
 13663                           ; BSR set to: 0
 13664                           ;mcc_generated_files/eusart.c: 213:         if(sizeof(eusartTxBuffer) <= eusartTxTail)
 13665  00492A  0E07               	movlw	7
 13666  00492C  6459               	cpfsgt	_eusartTxTail^0,c	;volatile
 13667  00492E  EF9B  F024         	goto	i2u577_41
 13668  004932  EF9D  F024         	goto	i2u577_40
 13669  004936                     i2u577_41:
 13670  004936  EF9F  F024         	goto	i2l5979
 13671  00493A                     i2u577_40:
 13672  00493A                     
 13673                           ; BSR set to: 0
 13674                           ;mcc_generated_files/eusart.c: 214:         {;mcc_generated_files/eusart.c: 215:        
      +                               eusartTxTail = 0;
 13675  00493A  0E00               	movlw	0
 13676  00493C  6E59               	movwf	_eusartTxTail^0,c	;volatile
 13677  00493E                     i2l5979:
 13678                           
 13679                           ; BSR set to: 0
 13680                           ;mcc_generated_files/eusart.c: 217:         eusartTxBufferRemaining++;
 13681  00493E  2BFF               	incf	_eusartTxBufferRemaining& (0+255),f,b	;volatile
 13682                           
 13683                           ;mcc_generated_files/eusart.c: 218:     }
 13684  004940  EFA3  F024         	goto	i2l610
 13685  004944                     i2l607:
 13686                           
 13687                           ; BSR set to: 0
 13688                           ;mcc_generated_files/eusart.c: 220:     {;mcc_generated_files/eusart.c: 221:         PIE
      +                          1bits.TX1IE = 0;
 13689  004944  989D               	bcf	157,4,c	;volatile
 13690  004946                     i2l610:
 13691                           
 13692                           ; BSR set to: 0
 13693  004946  0012               	return		;funcret
 13694  004948                     __end_of_EUSART_Transmit_ISR:
 13695                           	callstack 0
 13696                           
 13697 ;; *************** function _EUSART_Receive_ISR *****************
 13698 ;; Defined at:
 13699 ;;		line 225 in file "mcc_generated_files/eusart.c"
 13700 ;; Parameters:    Size  Location     Type
 13701 ;;		None
 13702 ;; Auto vars:     Size  Location     Type
 13703 ;;		None
 13704 ;; Return value:  Size  Location     Type
 13705 ;;                  1    wreg      void 
 13706 ;; Registers used:
 13707 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, cstack
 13708 ;; Tracked objects:
 13709 ;;		On entry : 0/0
 13710 ;;		On exit  : 0/0
 13711 ;;		Unchanged: 0/0
 13712 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13713 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13714 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13715 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13716 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13717 ;;Total ram usage:        0 bytes
 13718 ;; Hardware stack levels used: 1
 13719 ;; Hardware stack levels required when called: 2
 13720 ;; This function calls:
 13721 ;;		Absolute function
 13722 ;;		_EUSART_DefaultErrorHandler
 13723 ;;		_EUSART_DefaultFramingErrorHandler
 13724 ;;		_EUSART_DefaultOverrunErrorHandler
 13725 ;;		_EUSART_RxDataHandler
 13726 ;; This function is called by:
 13727 ;;		_EUSART_Initialize
 13728 ;;		_INTERRUPT_InterruptManager
 13729 ;; This function uses a non-reentrant model
 13730 ;;
 13731                           
 13732                           	psect	text102
 13733  003FAA                     __ptext102:
 13734                           	callstack 0
 13735  003FAA                     _EUSART_Receive_ISR:
 13736                           	callstack 16
 13737  003FAA                     
 13738                           ;mcc_generated_files/eusart.c: 228:     eusartRxStatusBuffer[eusartRxHead].status = 0;
 13739  003FAA  0E00               	movlw	low _eusartRxStatusBuffer
 13740  003FAC  2458               	addwf	_eusartRxHead^0,w,c	;volatile
 13741  003FAE  6ED9               	movwf	fsr2l,c
 13742  003FB0  6ADA               	clrf	fsr2h,c
 13743  003FB2  0E01               	movlw	high _eusartRxStatusBuffer
 13744  003FB4  22DA               	addwfc	fsr2h,f,c
 13745  003FB6  0E00               	movlw	0
 13746  003FB8  6EDF               	movwf	indf2,c
 13747  003FBA                     
 13748                           ;mcc_generated_files/eusart.c: 230:     if(RCSTAbits.FERR){
 13749  003FBA  A4AB               	btfss	171,2,c	;volatile
 13750  003FBC  EFE2  F01F         	goto	i2u578_41
 13751  003FC0  EFE4  F01F         	goto	i2u578_40
 13752  003FC4                     i2u578_41:
 13753  003FC4  EFF8  F01F         	goto	i2l5989
 13754  003FC8                     i2u578_40:
 13755  003FC8                     
 13756                           ;mcc_generated_files/eusart.c: 231:         eusartRxStatusBuffer[eusartRxHead].ferr = 1;
 13757  003FC8  0E00               	movlw	low _eusartRxStatusBuffer
 13758  003FCA  2458               	addwf	_eusartRxHead^0,w,c	;volatile
 13759  003FCC  6ED9               	movwf	fsr2l,c
 13760  003FCE  6ADA               	clrf	fsr2h,c
 13761  003FD0  0E01               	movlw	high _eusartRxStatusBuffer
 13762  003FD2  22DA               	addwfc	fsr2h,f,c
 13763  003FD4  0101               	movlb	1	; () banked
 13764  003FD6  82DF               	bsf	indf2,1,c
 13765  003FD8                     
 13766                           ; BSR set to: 1
 13767                           ;mcc_generated_files/eusart.c: 232:         EUSART_FramingErrorHandler();
 13768  003FD8  D802               	call	i2u579_48
 13769  003FDA  EFF8  F01F         	goto	i2u579_49
 13770  003FDE                     i2u579_48:
 13771  003FDE  0005               	push	
 13772  003FE0  6EFA               	movwf	pclath,c
 13773  003FE2  5180               	movf	_EUSART_FramingErrorHandler& (0+255),w,b
 13774  003FE4  6EFD               	movwf	tosl,c
 13775  003FE6  5181               	movf	(_EUSART_FramingErrorHandler+1)& (0+255),w,b
 13776  003FE8  6EFE               	movwf	tosh,c
 13777  003FEA  6AFF               	clrf	tosu,c
 13778  003FEC  50FA               	movf	pclath,w,c
 13779  003FEE  0012               	return		;indir
 13780  003FF0                     i2u579_49:
 13781  003FF0                     i2l5989:
 13782                           
 13783                           ;mcc_generated_files/eusart.c: 235:     if(RCSTAbits.OERR){
 13784  003FF0  A2AB               	btfss	171,1,c	;volatile
 13785  003FF2  EFFD  F01F         	goto	i2u580_41
 13786  003FF6  EFFF  F01F         	goto	i2u580_40
 13787  003FFA                     i2u580_41:
 13788  003FFA  EF13  F020         	goto	i2l5995
 13789  003FFE                     i2u580_40:
 13790  003FFE                     
 13791                           ;mcc_generated_files/eusart.c: 236:         eusartRxStatusBuffer[eusartRxHead].oerr = 1;
 13792  003FFE  0E00               	movlw	low _eusartRxStatusBuffer
 13793  004000  2458               	addwf	_eusartRxHead^0,w,c	;volatile
 13794  004002  6ED9               	movwf	fsr2l,c
 13795  004004  6ADA               	clrf	fsr2h,c
 13796  004006  0E01               	movlw	high _eusartRxStatusBuffer
 13797  004008  22DA               	addwfc	fsr2h,f,c
 13798  00400A  0101               	movlb	1	; () banked
 13799  00400C  84DF               	bsf	indf2,2,c
 13800  00400E                     
 13801                           ; BSR set to: 1
 13802                           ;mcc_generated_files/eusart.c: 237:         EUSART_OverrunErrorHandler();
 13803  00400E  D802               	call	i2u581_48
 13804  004010  EF13  F020         	goto	i2u581_49
 13805  004014                     i2u581_48:
 13806  004014  0005               	push	
 13807  004016  6EFA               	movwf	pclath,c
 13808  004018  517E               	movf	_EUSART_OverrunErrorHandler& (0+255),w,b
 13809  00401A  6EFD               	movwf	tosl,c
 13810  00401C  517F               	movf	(_EUSART_OverrunErrorHandler+1)& (0+255),w,b
 13811  00401E  6EFE               	movwf	tosh,c
 13812  004020  6AFF               	clrf	tosu,c
 13813  004022  50FA               	movf	pclath,w,c
 13814  004024  0012               	return		;indir
 13815  004026                     i2u581_49:
 13816  004026                     i2l5995:
 13817                           
 13818                           ;mcc_generated_files/eusart.c: 240:     if(eusartRxStatusBuffer[eusartRxHead].status){
 13819  004026  0E00               	movlw	low _eusartRxStatusBuffer
 13820  004028  2458               	addwf	_eusartRxHead^0,w,c	;volatile
 13821  00402A  6ED9               	movwf	fsr2l,c
 13822  00402C  6ADA               	clrf	fsr2h,c
 13823  00402E  0E01               	movlw	high _eusartRxStatusBuffer
 13824  004030  22DA               	addwfc	fsr2h,f,c
 13825  004032  50DF               	movf	indf2,w,c
 13826  004034  B4D8               	btfsc	status,2,c
 13827  004036  EF1F  F020         	goto	i2u582_41
 13828  00403A  EF21  F020         	goto	i2u582_40
 13829  00403E                     i2u582_41:
 13830  00403E  EF30  F020         	goto	i2l5999
 13831  004042                     i2u582_40:
 13832  004042                     
 13833                           ;mcc_generated_files/eusart.c: 241:         EUSART_ErrorHandler();
 13834  004042  D802               	call	i2u583_48
 13835  004044  EF2E  F020         	goto	i2u583_49
 13836  004048                     i2u583_48:
 13837  004048  0005               	push	
 13838  00404A  6EFA               	movwf	pclath,c
 13839  00404C  0101               	movlb	1	; () banked
 13840  00404E  517C               	movf	_EUSART_ErrorHandler& (0+255),w,b
 13841  004050  6EFD               	movwf	tosl,c
 13842  004052  517D               	movf	(_EUSART_ErrorHandler+1)& (0+255),w,b
 13843  004054  6EFE               	movwf	tosh,c
 13844  004056  6AFF               	clrf	tosu,c
 13845  004058  50FA               	movf	pclath,w,c
 13846  00405A  0012               	return		;indir
 13847  00405C                     i2u583_49:
 13848                           
 13849                           ;mcc_generated_files/eusart.c: 242:     } else {
 13850  00405C  EF32  F020         	goto	i2l617
 13851  004060                     i2l5999:
 13852                           
 13853                           ;mcc_generated_files/eusart.c: 243:         EUSART_RxDataHandler();
 13854  004060  ECE4  F025         	call	_EUSART_RxDataHandler	;wreg free
 13855  004064                     i2l617:
 13856  004064  0012               	return		;funcret
 13857  004066                     __end_of_EUSART_Receive_ISR:
 13858                           	callstack 0
 13859                           
 13860 ;; *************** function _EUSART_DefaultOverrunErrorHandler *****************
 13861 ;; Defined at:
 13862 ;;		line 261 in file "mcc_generated_files/eusart.c"
 13863 ;; Parameters:    Size  Location     Type
 13864 ;;		None
 13865 ;; Auto vars:     Size  Location     Type
 13866 ;;		None
 13867 ;; Return value:  Size  Location     Type
 13868 ;;                  1    wreg      void 
 13869 ;; Registers used:
 13870 ;;		None
 13871 ;; Tracked objects:
 13872 ;;		On entry : 0/0
 13873 ;;		On exit  : 0/0
 13874 ;;		Unchanged: 0/0
 13875 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13876 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13877 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13878 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13879 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13880 ;;Total ram usage:        0 bytes
 13881 ;; Hardware stack levels used: 1
 13882 ;; This function calls:
 13883 ;;		Nothing
 13884 ;; This function is called by:
 13885 ;;		_EUSART_Initialize
 13886 ;;		_EUSART_Receive_ISR
 13887 ;; This function uses a non-reentrant model
 13888 ;;
 13889                           
 13890                           	psect	text103
 13891  004DF8                     __ptext103:
 13892                           	callstack 0
 13893  004DF8                     _EUSART_DefaultOverrunErrorHandler:
 13894                           	callstack 17
 13895  004DF8                     
 13896                           ;mcc_generated_files/eusart.c: 264:     RCSTAbits.CREN = 0;
 13897  004DF8  98AB               	bcf	171,4,c	;volatile
 13898                           
 13899                           ;mcc_generated_files/eusart.c: 265:     RCSTAbits.CREN = 1;
 13900  004DFA  88AB               	bsf	171,4,c	;volatile
 13901  004DFC  0012               	return		;funcret
 13902  004DFE                     __end_of_EUSART_DefaultOverrunErrorHandler:
 13903                           	callstack 0
 13904                           
 13905 ;; *************** function _EUSART_DefaultFramingErrorHandler *****************
 13906 ;; Defined at:
 13907 ;;		line 259 in file "mcc_generated_files/eusart.c"
 13908 ;; Parameters:    Size  Location     Type
 13909 ;;		None
 13910 ;; Auto vars:     Size  Location     Type
 13911 ;;		None
 13912 ;; Return value:  Size  Location     Type
 13913 ;;                  1    wreg      void 
 13914 ;; Registers used:
 13915 ;;		None
 13916 ;; Tracked objects:
 13917 ;;		On entry : 0/0
 13918 ;;		On exit  : 0/0
 13919 ;;		Unchanged: 0/0
 13920 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13921 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13922 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13923 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13924 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13925 ;;Total ram usage:        0 bytes
 13926 ;; Hardware stack levels used: 1
 13927 ;; This function calls:
 13928 ;;		Nothing
 13929 ;; This function is called by:
 13930 ;;		_EUSART_Initialize
 13931 ;;		_EUSART_Receive_ISR
 13932 ;; This function uses a non-reentrant model
 13933 ;;
 13934                           
 13935                           	psect	text104
 13936  004E34                     __ptext104:
 13937                           	callstack 0
 13938  004E34                     _EUSART_DefaultFramingErrorHandler:
 13939                           	callstack 17
 13940  004E34  0012               	return		;funcret
 13941  004E36                     __end_of_EUSART_DefaultFramingErrorHandler:
 13942                           	callstack 0
 13943                           
 13944 ;; *************** function _EUSART_DefaultErrorHandler *****************
 13945 ;; Defined at:
 13946 ;;		line 269 in file "mcc_generated_files/eusart.c"
 13947 ;; Parameters:    Size  Location     Type
 13948 ;;		None
 13949 ;; Auto vars:     Size  Location     Type
 13950 ;;		None
 13951 ;; Return value:  Size  Location     Type
 13952 ;;                  1    wreg      void 
 13953 ;; Registers used:
 13954 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 13955 ;; Tracked objects:
 13956 ;;		On entry : 0/0
 13957 ;;		On exit  : 0/0
 13958 ;;		Unchanged: 0/0
 13959 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13960 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13961 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13962 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13963 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13964 ;;Total ram usage:        0 bytes
 13965 ;; Hardware stack levels used: 1
 13966 ;; Hardware stack levels required when called: 1
 13967 ;; This function calls:
 13968 ;;		_EUSART_RxDataHandler
 13969 ;; This function is called by:
 13970 ;;		_EUSART_Initialize
 13971 ;;		_EUSART_Receive_ISR
 13972 ;; This function uses a non-reentrant model
 13973 ;;
 13974                           
 13975                           	psect	text105
 13976  004DFE                     __ptext105:
 13977                           	callstack 0
 13978  004DFE                     _EUSART_DefaultErrorHandler:
 13979                           	callstack 16
 13980  004DFE                     
 13981                           ;mcc_generated_files/eusart.c: 270:     EUSART_RxDataHandler();
 13982  004DFE  ECE4  F025         	call	_EUSART_RxDataHandler	;wreg free
 13983  004E02  0012               	return		;funcret
 13984  004E04                     __end_of_EUSART_DefaultErrorHandler:
 13985                           	callstack 0
 13986                           
 13987 ;; *************** function _EUSART_RxDataHandler *****************
 13988 ;; Defined at:
 13989 ;;		line 249 in file "mcc_generated_files/eusart.c"
 13990 ;; Parameters:    Size  Location     Type
 13991 ;;		None
 13992 ;; Auto vars:     Size  Location     Type
 13993 ;;		None
 13994 ;; Return value:  Size  Location     Type
 13995 ;;                  1    wreg      void 
 13996 ;; Registers used:
 13997 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 13998 ;; Tracked objects:
 13999 ;;		On entry : 0/0
 14000 ;;		On exit  : 0/0
 14001 ;;		Unchanged: 0/0
 14002 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14003 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14004 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14005 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14006 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14007 ;;Total ram usage:        0 bytes
 14008 ;; Hardware stack levels used: 1
 14009 ;; This function calls:
 14010 ;;		Nothing
 14011 ;; This function is called by:
 14012 ;;		_EUSART_Receive_ISR
 14013 ;;		_EUSART_DefaultErrorHandler
 14014 ;; This function uses a non-reentrant model
 14015 ;;
 14016                           
 14017                           	psect	text106
 14018  004BC8                     __ptext106:
 14019                           	callstack 0
 14020  004BC8                     _EUSART_RxDataHandler:
 14021                           	callstack 17
 14022  004BC8                     
 14023                           ;mcc_generated_files/eusart.c: 251:     eusartRxBuffer[eusartRxHead++] = RCREG;
 14024  004BC8  0E08               	movlw	low _eusartRxBuffer
 14025  004BCA  2458               	addwf	_eusartRxHead^0,w,c	;volatile
 14026  004BCC  6ED9               	movwf	fsr2l,c
 14027  004BCE  6ADA               	clrf	fsr2h,c
 14028  004BD0  0E01               	movlw	high _eusartRxBuffer
 14029  004BD2  22DA               	addwfc	fsr2h,f,c
 14030  004BD4  CFAE FFDF          	movff	4014,indf2	;volatile
 14031  004BD8  2A58               	incf	_eusartRxHead^0,f,c	;volatile
 14032  004BDA                     
 14033                           ;mcc_generated_files/eusart.c: 252:     if(sizeof(eusartRxBuffer) <= eusartRxHead)
 14034  004BDA  0E07               	movlw	7
 14035  004BDC  6458               	cpfsgt	_eusartRxHead^0,c	;volatile
 14036  004BDE  EFF3  F025         	goto	i2u544_41
 14037  004BE2  EFF5  F025         	goto	i2u544_40
 14038  004BE6                     i2u544_41:
 14039  004BE6  EFF7  F025         	goto	i2l5691
 14040  004BEA                     i2u544_40:
 14041  004BEA                     
 14042                           ;mcc_generated_files/eusart.c: 253:     {;mcc_generated_files/eusart.c: 254:         eus
      +                          artRxHead = 0;
 14043  004BEA  0E00               	movlw	0
 14044  004BEC  6E58               	movwf	_eusartRxHead^0,c	;volatile
 14045  004BEE                     i2l5691:
 14046                           
 14047                           ;mcc_generated_files/eusart.c: 256:     eusartRxCount++;
 14048  004BEE  2A56               	incf	_eusartRxCount^0,f,c	;volatile
 14049  004BF0  0012               	return		;funcret
 14050  004BF2                     __end_of_EUSART_RxDataHandler:
 14051                           	callstack 0
 14052                           
 14053                           	psect	text107
 14054  000000                     __ptext107:
 14055                           	callstack 0
 14056  000000                     
 14057                           	psect	rparam
 14058  0000                     
 14059                           	psect	temp
 14060  00005B                     btemp:
 14061                           	callstack 0
 14062  00005B                     	ds	1
 14063  0000                     int$flags	set	btemp
 14064  0000                     wtemp8	set	btemp+1
 14065  0000                     ttemp5	set	btemp+1
 14066  0000                     ttemp6	set	btemp+4
 14067  0000                     ttemp7	set	btemp+8
 14068                           
 14069                           	psect	idloc
 14070                           
 14071                           ;Config register IDLOC0 @ 0x200000
 14072                           ;	unspecified, using default values
 14073  200000                     	org	2097152
 14074  200000  FF                 	db	255
 14075                           
 14076                           ;Config register IDLOC1 @ 0x200001
 14077                           ;	unspecified, using default values
 14078  200001                     	org	2097153
 14079  200001  FF                 	db	255
 14080                           
 14081                           ;Config register IDLOC2 @ 0x200002
 14082                           ;	unspecified, using default values
 14083  200002                     	org	2097154
 14084  200002  FF                 	db	255
 14085                           
 14086                           ;Config register IDLOC3 @ 0x200003
 14087                           ;	unspecified, using default values
 14088  200003                     	org	2097155
 14089  200003  FF                 	db	255
 14090                           
 14091                           ;Config register IDLOC4 @ 0x200004
 14092                           ;	unspecified, using default values
 14093  200004                     	org	2097156
 14094  200004  FF                 	db	255
 14095                           
 14096                           ;Config register IDLOC5 @ 0x200005
 14097                           ;	unspecified, using default values
 14098  200005                     	org	2097157
 14099  200005  FF                 	db	255
 14100                           
 14101                           ;Config register IDLOC6 @ 0x200006
 14102                           ;	unspecified, using default values
 14103  200006                     	org	2097158
 14104  200006  FF                 	db	255
 14105                           
 14106                           ;Config register IDLOC7 @ 0x200007
 14107                           ;	unspecified, using default values
 14108  200007                     	org	2097159
 14109  200007  FF                 	db	255
 14110                           
 14111                           	psect	config
 14112                           
 14113                           ; Padding undefined space
 14114  300000                     	org	3145728
 14115  300000  FF                 	db	255
 14116                           
 14117                           ;Config register CONFIG1H @ 0x300001
 14118                           ;	Oscillator Selection bits
 14119                           ;	FOSC = INTIO67, Internal oscillator block, port function on RA6 and RA7
 14120                           ;	Fail-Safe Clock Monitor Enable bit
 14121                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
 14122                           ;	Internal/External Oscillator Switchover bit
 14123                           ;	IESO = OFF, Oscillator Switchover mode disabled
 14124  300001                     	org	3145729
 14125  300001  08                 	db	8
 14126                           
 14127                           ;Config register CONFIG2L @ 0x300002
 14128                           ;	Power-up Timer Enable bit
 14129                           ;	PWRT = OFF, PWRT disabled
 14130                           ;	Brown-out Reset Enable bits
 14131                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
 14132                           ;	Brown Out Reset Voltage bits
 14133                           ;	BORV = 18, VBOR set to 1.8 V nominal
 14134  300002                     	org	3145730
 14135  300002  1F                 	db	31
 14136                           
 14137                           ;Config register CONFIG2H @ 0x300003
 14138                           ;	Watchdog Timer Enable bit
 14139                           ;	WDTEN = OFF, WDT is controlled by SWDTEN bit of the WDTCON register
 14140                           ;	Watchdog Timer Postscale Select bits
 14141                           ;	WDTPS = 32768, 1:32768
 14142  300003                     	org	3145731
 14143  300003  1E                 	db	30
 14144                           
 14145                           ; Padding undefined space
 14146  300004                     	org	3145732
 14147  300004  FF                 	db	255
 14148                           
 14149                           ;Config register CONFIG3H @ 0x300005
 14150                           ;	CCP2 MUX bit
 14151                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
 14152                           ;	PORTB A/D Enable bit
 14153                           ;	PBADEN = ON, PORTB<4:0> pins are configured as analog input channels on Reset
 14154                           ;	Low-Power Timer1 Oscillator Enable bit
 14155                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
 14156                           ;	HFINTOSC Fast Start-up
 14157                           ;	HFOFST = ON, HFINTOSC starts clocking the CPU without waiting for the oscillator to st
      +                          ablize.
 14158                           ;	MCLR Pin Enable bit
 14159                           ;	MCLRE = OFF, RE3 input pin enabled; MCLR disabled
 14160  300005                     	org	3145733
 14161  300005  0B                 	db	11
 14162                           
 14163                           ;Config register CONFIG4L @ 0x300006
 14164                           ;	Stack Full/Underflow Reset Enable bit
 14165                           ;	STVREN = ON, Stack full/underflow will cause Reset
 14166                           ;	Single-Supply ICSP Enable bit
 14167                           ;	LVP = OFF, Single-Supply ICSP disabled
 14168                           ;	Extended Instruction Set Enable bit
 14169                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
 14170                           ;	Background Debugger Enable bit
 14171                           ;	DEBUG = OFF, Background debugger disabled, RB6 and RB7 configured as general purpose I
      +                          /O pins
 14172  300006                     	org	3145734
 14173  300006  81                 	db	129
 14174                           
 14175                           ; Padding undefined space
 14176  300007                     	org	3145735
 14177  300007  FF                 	db	255
 14178                           
 14179                           ;Config register CONFIG5L @ 0x300008
 14180                           ;	Code Protection Block 0
 14181                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
 14182                           ;	Code Protection Block 1
 14183                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
 14184                           ;	Code Protection Block 2
 14185                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
 14186                           ;	Code Protection Block 3
 14187                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
 14188  300008                     	org	3145736
 14189  300008  0F                 	db	15
 14190                           
 14191                           ;Config register CONFIG5H @ 0x300009
 14192                           ;	Boot Block Code Protection bit
 14193                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
 14194                           ;	Data EEPROM Code Protection bit
 14195                           ;	CPD = OFF, Data EEPROM not code-protected
 14196  300009                     	org	3145737
 14197  300009  C0                 	db	192
 14198                           
 14199                           ;Config register CONFIG6L @ 0x30000A
 14200                           ;	Write Protection Block 0
 14201                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
 14202                           ;	Write Protection Block 1
 14203                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
 14204                           ;	Write Protection Block 2
 14205                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
 14206                           ;	Write Protection Block 3
 14207                           ;	WRT3 = OFF, Block 3 (00C000h-00FFFFh) not write-protected
 14208  30000A                     	org	3145738
 14209  30000A  0F                 	db	15
 14210                           
 14211                           ;Config register CONFIG6H @ 0x30000B
 14212                           ;	Configuration Register Write Protection bit
 14213                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
 14214                           ;	Boot Block Write Protection bit
 14215                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
 14216                           ;	Data EEPROM Write Protection bit
 14217                           ;	WRTD = OFF, Data EEPROM not write-protected
 14218  30000B                     	org	3145739
 14219  30000B  E0                 	db	224
 14220                           
 14221                           ;Config register CONFIG7L @ 0x30000C
 14222                           ;	Table Read Protection Block 0
 14223                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
 14224                           ;	Table Read Protection Block 1
 14225                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
 14226                           ;	Table Read Protection Block 2
 14227                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
 14228                           ;	Table Read Protection Block 3
 14229                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
 14230  30000C                     	org	3145740
 14231  30000C  0F                 	db	15
 14232                           
 14233                           ;Config register CONFIG7H @ 0x30000D
 14234                           ;	Boot Block Table Read Protection bit
 14235                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
 14236  30000D                     	org	3145741
 14237  30000D  40                 	db	64
 14238                           tosu	equ	0xFFF
 14239                           tosh	equ	0xFFE
 14240                           tosl	equ	0xFFD
 14241                           stkptr	equ	0xFFC
 14242                           pclatu	equ	0xFFB
 14243                           pclath	equ	0xFFA
 14244                           pcl	equ	0xFF9
 14245                           tblptru	equ	0xFF8
 14246                           tblptrh	equ	0xFF7
 14247                           tblptrl	equ	0xFF6
 14248                           tablat	equ	0xFF5
 14249                           prodh	equ	0xFF4
 14250                           prodl	equ	0xFF3
 14251                           indf0	equ	0xFEF
 14252                           postinc0	equ	0xFEE
 14253                           postdec0	equ	0xFED
 14254                           preinc0	equ	0xFEC
 14255                           plusw0	equ	0xFEB
 14256                           fsr0h	equ	0xFEA
 14257                           fsr0l	equ	0xFE9
 14258                           wreg	equ	0xFE8
 14259                           indf1	equ	0xFE7
 14260                           postinc1	equ	0xFE6
 14261                           postdec1	equ	0xFE5
 14262                           preinc1	equ	0xFE4
 14263                           plusw1	equ	0xFE3
 14264                           fsr1h	equ	0xFE2
 14265                           fsr1l	equ	0xFE1
 14266                           bsr	equ	0xFE0
 14267                           indf2	equ	0xFDF
 14268                           postinc2	equ	0xFDE
 14269                           postdec2	equ	0xFDD
 14270                           preinc2	equ	0xFDC
 14271                           plusw2	equ	0xFDB
 14272                           fsr2h	equ	0xFDA
 14273                           fsr2l	equ	0xFD9
 14274                           status	equ	0xFD8

Data Sizes:
    Strings     80
    Constant    32
    Data        0
    BSS         198
    Persistent  11
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     85      90
    BANK0           160     88     160
    BANK1           256      4     136
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           96      0       0

Pointer List with Targets:

    I2C_Read1ByteRegister@returnValue.data	PTR unsigned char  size(2) Largest target is 0

    I2C_Read2ByteRegister@returnValue.data	PTR unsigned char  size(2) Largest target is 0

    I2C_Write1ByteRegister@data.data	PTR unsigned char  size(2) Largest target is 0

    I2C_Write2ByteRegister@data.data	PTR unsigned char  size(2) Largest target is 0

    I2C_DO_TX$2552$0	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    I2C_DO_RX$2558$0	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    I2C_DO_TX_EMPTY$2564$0	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    I2C_DO_RX_EMPTY$2570$0	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    I2C_DO_TX_EMPTY$2569	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    I2C_DO_TX_EMPTY$2564	PTR FTN(PTR void ,)enum E360 size(2) Largest target is 1
		 -> I2C_CallbackReturnReset(), I2C_CallbackReturnStop(), Absolute function(), rdBlkRegCompleteHandler(), 
		 -> wr2RegCompleteHandler(), wr1RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 

    I2C_DO_RX$2563	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    I2C_DO_RX$2558	PTR FTN(PTR void ,)enum E360 size(2) Largest target is 1
		 -> I2C_CallbackReturnReset(), I2C_CallbackReturnStop(), Absolute function(), rdBlkRegCompleteHandler(), 
		 -> wr2RegCompleteHandler(), wr1RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 

    I2C_DO_TX$2557	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    I2C_DO_TX$2552	PTR FTN(PTR void ,)enum E360 size(2) Largest target is 1
		 -> I2C_CallbackReturnReset(), I2C_CallbackReturnStop(), Absolute function(), rdBlkRegCompleteHandler(), 
		 -> wr2RegCompleteHandler(), wr1RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 

    I2C_MasterFsm$2551	const PTR FTN()enum E3103 size(2) Largest target is 1
		 -> I2C_DO_ADDRESS_NACK(), I2C_DO_RESET(), I2C_DO_RX_NACK_RESTART(), I2C_DO_RX_NACK_STOP(), 
		 -> I2C_DO_RX_ACK(), I2C_DO_SEND_STOP(), I2C_DO_SEND_RESTART(), I2C_DO_SEND_RESTART_WRITE(), 
		 -> I2C_DO_SEND_RESTART_READ(), I2C_DO_TX_EMPTY(), I2C_DO_RCEN(), I2C_DO_RX(), 
		 -> I2C_DO_TX(), I2C_DO_SEND_ADR_WRITE(), I2C_DO_SEND_ADR_READ(), I2C_DO_IDLE(), 

    I2C_CallbackReturnStop@funPtr	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    I2C_CallbackReturnReset@funPtr	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    cb$0	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    Absolute function$0	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    cb$0	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    S248$0$0	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_15(CODE[3]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_15(CODE[3]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_10(CODE[4]), STR_9(CODE[4]), STR_6(CODE[4]), STR_5(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_10(CODE[4]), STR_9(CODE[4]), STR_6(CODE[4]), STR_5(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S2008_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 16
		 -> STR_4(CODE[16]), STR_3(CODE[15]), STR_2(CODE[15]), STR_1(CODE[15]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK1[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 16
		 -> STR_4(CODE[16]), STR_3(CODE[15]), STR_2(CODE[15]), STR_1(CODE[15]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 16
		 -> STR_4(CODE[16]), STR_3(CODE[15]), STR_2(CODE[15]), STR_1(CODE[15]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> printf@ap(BANK1[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    printf@fmt	PTR const unsigned char  size(2) Largest target is 16
		 -> STR_4(CODE[16]), STR_3(CODE[15]), STR_2(CODE[15]), STR_1(CODE[15]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(BANK0[2]), 

    EUSART_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Receive_ISR(), 

    EUSART_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Receive_ISR(), Absolute function(), 

    EUSART_SetTxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Transmit_ISR(), 

    EUSART_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Transmit_ISR(), Absolute function(), 

    EUSART_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), 

    EUSART_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), 

    EUSART_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), 

    EUSART_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), Absolute function(), 

    EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), Absolute function(), 

    EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), Absolute function(), 

    I2C_SetCallback@ptr	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    I2C_SetCallback@cb	PTR FTN(PTR void ,)enum E360 size(2) Largest target is 1
		 -> Absolute function(), rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), wr1RegCompleteHandler(), 
		 -> rd2RegCompleteHandler(), rd1RegCompleteHandler(), 

    I2C_SetAddressNackCallback@ptr	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    I2C_SetAddressNackCallback@cb	PTR FTN(PTR void ,)enum E360 size(2) Largest target is 1
		 -> Absolute function(), 

    I2C_SetDataCompleteCallback@ptr	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    I2C_SetDataCompleteCallback@cb	PTR FTN(PTR void ,)enum E360 size(2) Largest target is 1
		 -> Absolute function(), rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), wr1RegCompleteHandler(), 
		 -> rd2RegCompleteHandler(), rd1RegCompleteHandler(), 

    I2C_SetBuffer@buffer	PTR void  size(2) Largest target is 10
		 -> writeBuffer(BANK1[10]), readBuffer(BANK1[10]), I2C_ReadDataBlock@reg(COMRAM[1]), I2C_ReadDataBlock@bufferBlock(COMRAM[4]), 
		 -> I2C_Write2ByteRegister@reg(COMRAM[1]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@reg(COMRAM[1]), I2C_Write1ByteRegister@data(COMRAM[1]), 
		 -> I2C_Read2ByteRegister@reg(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), NULL(NULL[0]), I2C_Read1ByteRegister@reg(COMRAM[1]), 
		 -> I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    S248$data_ptr	PTR unsigned char  size(2) Largest target is 10
		 -> writeBuffer(BANK1[10]), readBuffer(BANK1[10]), I2C_ReadDataBlock@reg(COMRAM[1]), I2C_ReadDataBlock@bufferBlock(COMRAM[4]), 
		 -> I2C_Write2ByteRegister@reg(COMRAM[1]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@reg(COMRAM[1]), I2C_Write1ByteRegister@data(COMRAM[1]), 
		 -> I2C_Read2ByteRegister@reg(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), NULL(NULL[0]), I2C_Read1ByteRegister@reg(COMRAM[1]), 
		 -> I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    I2C_Status.data_ptr	PTR unsigned char  size(2) Largest target is 10
		 -> writeBuffer(BANK1[10]), readBuffer(BANK1[10]), I2C_ReadDataBlock@reg(COMRAM[1]), I2C_ReadDataBlock@bufferBlock(COMRAM[4]), 
		 -> I2C_Write2ByteRegister@reg(COMRAM[1]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@reg(COMRAM[1]), I2C_Write1ByteRegister@data(COMRAM[1]), 
		 -> I2C_Read2ByteRegister@reg(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), NULL(NULL[0]), I2C_Read1ByteRegister@reg(COMRAM[1]), 
		 -> I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    S248$callbackPayload	PTR void [6] size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    I2C_Status.callbackPayload	PTR void [6] size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    S248$callbackTable	PTR FTN(PTR void ,)enum E360[6] size(2) Largest target is 1
		 -> I2C_CallbackReturnReset(), I2C_CallbackReturnStop(), Absolute function(), rdBlkRegCompleteHandler(), 
		 -> wr2RegCompleteHandler(), wr1RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 

    I2C_Status.callbackTable	PTR FTN(PTR void ,)enum E360[6] size(2) Largest target is 1
		 -> I2C_CallbackReturnReset(), I2C_CallbackReturnStop(), Absolute function(), rdBlkRegCompleteHandler(), 
		 -> wr2RegCompleteHandler(), wr1RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 

    fsmStateTable	const PTR FTN()enum E3103[16] size(2) Largest target is 1
		 -> I2C_DO_ADDRESS_NACK(), I2C_DO_RESET(), I2C_DO_RX_NACK_RESTART(), I2C_DO_RX_NACK_STOP(), 
		 -> I2C_DO_RX_ACK(), I2C_DO_SEND_STOP(), I2C_DO_SEND_RESTART(), I2C_DO_SEND_RESTART_WRITE(), 
		 -> I2C_DO_SEND_RESTART_READ(), I2C_DO_TX_EMPTY(), I2C_DO_RCEN(), I2C_DO_RX(), 
		 -> I2C_DO_TX(), I2C_DO_SEND_ADR_WRITE(), I2C_DO_SEND_ADR_READ(), I2C_DO_IDLE(), 

    rdBlkRegCompleteHandler@ptr.data	PTR unsigned char  size(2) Largest target is 0

    rdBlkRegCompleteHandler@ptr	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    wr2RegCompleteHandler@ptr	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    wr1RegCompleteHandler@ptr	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    rd2RegCompleteHandler@ptr	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    rd1RegCompleteHandler@ptr	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    S96$data	PTR unsigned char  size(2) Largest target is 0

    bufferBlock.data	PTR unsigned char  size(2) Largest target is 0

    I2C_ReadNBytes@data	PTR unsigned char  size(2) Largest target is 10
		 -> readBuffer(BANK1[10]), 

    I2C_WriteNBytes@data	PTR unsigned char  size(2) Largest target is 10
		 -> writeBuffer(BANK1[10]), 


Critical Paths under _main in COMRAM

    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _efgtoa->___flsub
    _tolower->_isupper
    _pad->_fputs
    _fputs->_fputc
    _fputc->_putch
    _putch->_EUSART_Write
    _floorf->___fldiv
    ___flsub->___fladd
    ___flge->___flmul
    _atoi->_isspace
    _TLV493_Z_GetValue->___flmul
    _TLV493_Y_GetValue->___flmul
    _TLV493_X_GetValue->___flmul
    _TLV493_Temp_GetValue->___fladd
    ___flmul->___xxtofl
    ___fladd->___flmul
    _TLV493_Read->_I2C_ReadNBytes
    _TLV493_Init->_I2C_ReadNBytes
    _TLV493_Init->_I2C_WriteNBytes
    _I2C_SetAddressNackCallback->_I2C_SetCallback
    _I2C_MasterWrite->_I2C_MasterOperation
    _I2C_MasterRead->_I2C_MasterOperation
    _I2C_Poller->_I2C_MasterFsm
    _I2C_MasterFsm->_I2C_DO_ADDRESS_NACK
    _I2C_MasterFsm->_I2C_DO_RX
    _I2C_MasterFsm->_I2C_DO_TX
    _I2C_MasterFsm->_I2C_DO_TX_EMPTY
    _I2C_DO_TX_EMPTY->_I2C_CallbackReturnReset
    _I2C_DO_TX_EMPTY->_I2C_CallbackReturnStop
    _I2C_DO_TX_EMPTY->_rd1RegCompleteHandler
    _I2C_DO_TX_EMPTY->_rd2RegCompleteHandler
    _I2C_DO_TX_EMPTY->_rdBlkRegCompleteHandler
    _I2C_DO_TX_EMPTY->_wr1RegCompleteHandler
    _I2C_DO_TX_EMPTY->_wr2RegCompleteHandler
    _I2C_DO_TX->_I2C_CallbackReturnReset
    _I2C_DO_TX->_I2C_CallbackReturnStop
    _I2C_DO_TX->_rd1RegCompleteHandler
    _I2C_DO_TX->_rd2RegCompleteHandler
    _I2C_DO_TX->_rdBlkRegCompleteHandler
    _I2C_DO_TX->_wr1RegCompleteHandler
    _I2C_DO_TX->_wr2RegCompleteHandler
    _I2C_DO_SEND_ADR_WRITE->_I2C_MasterSendTxData
    _I2C_DO_RX->_I2C_CallbackReturnReset
    _I2C_DO_RX->_I2C_CallbackReturnStop
    _I2C_DO_RX->_rd1RegCompleteHandler
    _I2C_DO_RX->_rd2RegCompleteHandler
    _I2C_DO_RX->_rdBlkRegCompleteHandler
    _I2C_DO_RX->_wr1RegCompleteHandler
    _I2C_DO_RX->_wr2RegCompleteHandler
    _I2C_DO_ADDRESS_NACK->_I2C_CallbackReturnReset
    _I2C_DO_ADDRESS_NACK->_I2C_CallbackReturnStop
    _I2C_DO_ADDRESS_NACK->_rd1RegCompleteHandler
    _I2C_DO_ADDRESS_NACK->_rd2RegCompleteHandler
    _I2C_DO_ADDRESS_NACK->_rdBlkRegCompleteHandler
    _I2C_DO_ADDRESS_NACK->_wr1RegCompleteHandler
    _I2C_DO_ADDRESS_NACK->_wr2RegCompleteHandler
    _wr2RegCompleteHandler->_I2C_SetDataCompleteCallback
    _wr1RegCompleteHandler->_I2C_SetDataCompleteCallback
    _rdBlkRegCompleteHandler->_I2C_SetDataCompleteCallback
    _rd2RegCompleteHandler->_I2C_SetDataCompleteCallback
    _rd1RegCompleteHandler->_I2C_SetDataCompleteCallback
    _I2C_SetDataCompleteCallback->_I2C_SetCallback
    _EUSART_Initialize->_EUSART_SetErrorHandler
    _EUSART_Initialize->_EUSART_SetFramingErrorHandler
    _EUSART_Initialize->_EUSART_SetOverrunErrorHandler
    _EUSART_Initialize->_EUSART_SetRxInterruptHandler
    _EUSART_Initialize->_EUSART_SetTxInterruptHandler

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_printf
    _printf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_printf

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0  612536
                                              2 BANK1      2     2      0
                  _SYSTEM_Initialize
                        _TLV493_Init
               _TLV493_Temp_GetValue
                  _TLV493_X_GetValue
                  _TLV493_Y_GetValue
                  _TLV493_Z_GetValue
                             _printf
 ---------------------------------------------------------------------------------
 (1) _printf                                              10     4      6   40541
                                             82 BANK0      6     0      6
                                              0 BANK1      2     2      0
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6   40082
                                             74 BANK0      8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           48    42      6   39522
                                             79 COMRAM     6     0      6
                                             56 BANK0     18    18      0
                               _atoi
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                            _strncmp
                            _tolower
 ---------------------------------------------------------------------------------
 (4) _strncmp                                             11     5      6     595
                                              4 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (4) _efgtoa                                              68    61      7   30620
                                             67 COMRAM    12     5      7
                                              0 BANK0     56    56      0
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (4) _tolower                                              8     6      2    1142
                                             10 COMRAM     8     6      2
                            _isupper
 ---------------------------------------------------------------------------------
 (5) _isupper                                              6     4      2     551
                                              4 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _strcpy                                              10     6      4    1037
                                              4 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    3957
                                             22 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               4     2      2     220
                                              4 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1537
                                             15 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4    1037
                                              6 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0      93
                                              5 COMRAM     1     1      0
                       _EUSART_Write
 ---------------------------------------------------------------------------------
 (6) _EUSART_Write                                         1     1      0      62
                                              4 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (5) _floorf                                              20    16      4     669
                                             29 COMRAM    20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fpclassifyf                                       14    10      4     375
                                              4 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (5) ___fltol                                             10     6      4     517
                                              4 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (5) ___flsub                                              8     0      8    4187
                                             59 COMRAM     8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___flneg                                              4     0      4     155
                                              4 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (5) ___flge                                              12     4      8     986
                                             43 COMRAM    12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fleq                                              12     4      8     770
                                              4 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (5) ___fldiv                                             25    17      8    2723
                                              4 COMRAM    25    17      8
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              6     2      4     613
                                              4 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4     625
                                              4 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (4) _atoi                                                15    13      2    3385
                                             11 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (5) _isspace                                              7     5      2     259
                                              4 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              6     4      2     281
                                              4 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4    2282
                                              4 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _TLV493_Z_GetValue                                   12     8      4   96037
                                             43 COMRAM    12     8      4
                        _TLV493_Read
                            ___flmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (1) _TLV493_Y_GetValue                                   12     8      4   96037
                                             43 COMRAM    12     8      4
                        _TLV493_Read
                            ___flmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (1) _TLV493_X_GetValue                                   12     8      4   96037
                                             43 COMRAM    12     8      4
                        _TLV493_Read
                            ___flmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (1) _TLV493_Temp_GetValue                                12     8      4   99724
                                             59 COMRAM    12     8      4
                        _TLV493_Read
                            ___fladd
                            ___flmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     626
                                              4 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (5) ___flmul                                             25    17      8    4313
                                             18 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fladd                                             16     8      8    3622
                                             43 COMRAM    16     8      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) _TLV493_Read                                          0     0      0   90928
                     _I2C_ReadNBytes
 ---------------------------------------------------------------------------------
 (1) _TLV493_Init                                          6     6      0  183670
                                             26 COMRAM     6     6      0
                     _I2C_ReadNBytes
                    _I2C_WriteNBytes
 ---------------------------------------------------------------------------------
 (2) _I2C_WriteNBytes                                      5     1      4   92646
                                             21 COMRAM     5     1      4
                          _I2C_Close
                    _I2C_MasterWrite
                           _I2C_Open
         _I2C_SetAddressNackCallback
                      _I2C_SetBuffer
 ---------------------------------------------------------------------------------
 (3) _I2C_SetAddressNackCallback                           4     0      4    1870
                                              9 COMRAM     4     0      4
                    _I2C_SetCallback
 ---------------------------------------------------------------------------------
 (3) _I2C_MasterWrite                                      0     0      0   88620
                _I2C_MasterOperation
 ---------------------------------------------------------------------------------
 (3) _I2C_ReadNBytes                                       5     1      4   90928
                                             21 COMRAM     5     1      4
                          _I2C_Close
                     _I2C_MasterRead
                           _I2C_Open
                      _I2C_SetBuffer
 ---------------------------------------------------------------------------------
 (4) _I2C_Open                                             2     2      0      46
                                              4 COMRAM     2     2      0
                 _I2C_MasterClearIrq
                     _I2C_MasterOpen
 ---------------------------------------------------------------------------------
 (5) _I2C_MasterOpen                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _I2C_MasterRead                                       0     0      0   88620
                _I2C_MasterOperation
 ---------------------------------------------------------------------------------
 (5) _I2C_MasterOperation                                  2     2      0   88620
                                             19 COMRAM     2     2      0
                    _I2C_MasterStart
                         _I2C_Poller
 ---------------------------------------------------------------------------------
 (6) _I2C_Poller                                           0     0      0   88574
                      _I2C_MasterFsm
             _I2C_MasterWaitForEvent
 ---------------------------------------------------------------------------------
 (7) _I2C_MasterWaitForEvent                               0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _I2C_MasterFsm                                        2     2      0   88574
                                             17 COMRAM     2     2      0
                _I2C_DO_ADDRESS_NACK *
                        _I2C_DO_IDLE *
                        _I2C_DO_RCEN *
                       _I2C_DO_RESET *
                          _I2C_DO_RX *
                      _I2C_DO_RX_ACK *
             _I2C_DO_RX_NACK_RESTART *
                _I2C_DO_RX_NACK_STOP *
               _I2C_DO_SEND_ADR_READ *
              _I2C_DO_SEND_ADR_WRITE *
                _I2C_DO_SEND_RESTART *
           _I2C_DO_SEND_RESTART_READ *
          _I2C_DO_SEND_RESTART_WRITE *
                   _I2C_DO_SEND_STOP *
                          _I2C_DO_TX *
                    _I2C_DO_TX_EMPTY *
                 _I2C_MasterClearIrq
                   _I2C_MasterIsNack
 ---------------------------------------------------------------------------------
 (8) _I2C_DO_TX_EMPTY                                      2     2      0   22127
                                             15 COMRAM     2     2      0
                   Absolute function *
            _I2C_CallbackReturnReset *
             _I2C_CallbackReturnStop *
                _I2C_DO_SEND_RESTART
                   _I2C_DO_SEND_STOP
                   _I2C_MasterSetIrq
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (9) _I2C_MasterSetIrq                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _I2C_DO_TX                                            2     2      0   22149
                                             15 COMRAM     2     2      0
                   Absolute function *
            _I2C_CallbackReturnReset *
             _I2C_CallbackReturnStop *
           _I2C_DO_SEND_RESTART_READ
          _I2C_DO_SEND_RESTART_WRITE
                   _I2C_DO_SEND_STOP
                   _I2C_MasterIsNack
               _I2C_MasterSendTxData
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (8) _I2C_MasterIsNack                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _I2C_DO_SEND_RESTART_WRITE                            0     0      0       0
            _I2C_MasterEnableRestart
 ---------------------------------------------------------------------------------
 (9) _I2C_DO_SEND_RESTART_READ                             0     0      0       0
            _I2C_MasterEnableRestart
 ---------------------------------------------------------------------------------
 (8) _I2C_DO_SEND_ADR_WRITE                                0     0      0      22
               _I2C_MasterSendTxData
 ---------------------------------------------------------------------------------
 (8) _I2C_DO_SEND_ADR_READ                                 0     0      0      22
               _I2C_MasterSendTxData
 ---------------------------------------------------------------------------------
 (9) _I2C_MasterSendTxData                                 1     1      0      22
                                              4 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (8) _I2C_DO_RX_ACK                                        0     0      0       0
                  _I2C_MasterSendAck
 ---------------------------------------------------------------------------------
 (8) _I2C_DO_RX                                            2     2      0   22127
                                             15 COMRAM     2     2      0
                   Absolute function *
            _I2C_CallbackReturnReset *
             _I2C_CallbackReturnStop *
             _I2C_DO_RX_NACK_RESTART
                _I2C_DO_RX_NACK_STOP
                _I2C_MasterGetRxData
                  _I2C_MasterSendAck
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (9) _I2C_MasterSendAck                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _I2C_MasterGetRxData                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _I2C_DO_RX_NACK_STOP                                  0     0      0       0
                 _I2C_MasterSendNack
 ---------------------------------------------------------------------------------
 (8) _I2C_DO_RX_NACK_RESTART                               0     0      0       0
                 _I2C_MasterSendNack
 ---------------------------------------------------------------------------------
 (9) _I2C_MasterSendNack                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _I2C_DO_RESET                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _I2C_DO_RCEN                                          0     0      0       0
                  _I2C_MasterStartRx
 ---------------------------------------------------------------------------------
 (9) _I2C_MasterStartRx                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _I2C_DO_IDLE                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _I2C_DO_ADDRESS_NACK                                  2     2      0   22127
                                             15 COMRAM     2     2      0
                   Absolute function *
            _I2C_CallbackReturnReset *
             _I2C_CallbackReturnStop *
                _I2C_DO_SEND_RESTART
                   _I2C_DO_SEND_STOP
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (9) _wr2RegCompleteHandler                                2     0      2    4368
                                             13 COMRAM     2     0      2
                      _I2C_SetBuffer
        _I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (9) _wr1RegCompleteHandler                                2     0      2    4368
                                             13 COMRAM     2     0      2
                      _I2C_SetBuffer
        _I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (9) _rdBlkRegCompleteHandler                              2     0      2    4390
                                             13 COMRAM     2     0      2
                      _I2C_SetBuffer
        _I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (9) _rd2RegCompleteHandler                                2     0      2    4368
                                             13 COMRAM     2     0      2
                      _I2C_SetBuffer
        _I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (9) _rd1RegCompleteHandler                                2     0      2    4368
                                             13 COMRAM     2     0      2
                      _I2C_SetBuffer
        _I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (10) _I2C_SetDataCompleteCallback                         4     0      4    2478
                                              9 COMRAM     4     0      4
                    _I2C_SetCallback
 ---------------------------------------------------------------------------------
 (11) _I2C_SetCallback                                     5     1      4     914
                                              4 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (4) _I2C_SetBuffer                                        4     0      4    1868
                                              4 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (9) _I2C_DO_SEND_STOP                                     0     0      0       0
                     _I2C_MasterStop
 ---------------------------------------------------------------------------------
 (10) _I2C_MasterStop                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _I2C_DO_SEND_RESTART                                  0     0      0       0
            _I2C_MasterEnableRestart
 ---------------------------------------------------------------------------------
 (10) _I2C_MasterEnableRestart                             0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _I2C_CallbackReturnStop                               2     0      2       0
                                             13 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (9) _I2C_CallbackReturnReset                              2     0      2     265
                                             13 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              2     0      2       0
 ---------------------------------------------------------------------------------
 (6) _I2C_MasterStart                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _I2C_Close                                            1     1      0      24
                                              4 COMRAM     1     1      0
                 _I2C_MasterClearIrq
                    _I2C_MasterClose
               _I2C_MasterDisableIrq
 ---------------------------------------------------------------------------------
 (5) _I2C_MasterDisableIrq                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _I2C_MasterClose                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _I2C_MasterClearIrq                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     490
                  _EUSART_Initialize
                     _I2C_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    0     0      0     490
             _EUSART_SetErrorHandler
      _EUSART_SetFramingErrorHandler
      _EUSART_SetOverrunErrorHandler
       _EUSART_SetRxInterruptHandler
       _EUSART_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetTxInterruptHandler                         2     0      2      98
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetRxInterruptHandler                         2     0      2      98
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetOverrunErrorHandler                        2     0      2      98
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetFramingErrorHandler                        2     0      2      98
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetErrorHandler                               2     0      2      98
                                              4 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 14
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _INTERRUPT_InterruptManager                          4     4      0       0
                                              0 COMRAM     4     4      0
                   Absolute function *
                 _EUSART_Receive_ISR *
                _EUSART_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (13) _EUSART_Transmit_ISR                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _EUSART_Receive_ISR                                  0     0      0       0
                   Absolute function *
         _EUSART_DefaultErrorHandler *
  _EUSART_DefaultFramingErrorHandler *
  _EUSART_DefaultOverrunErrorHandler *
               _EUSART_RxDataHandler
 ---------------------------------------------------------------------------------
 (14) _EUSART_DefaultOverrunErrorHandler                   0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _EUSART_DefaultFramingErrorHandler                   0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _EUSART_DefaultErrorHandler                          0     0      0       0
               _EUSART_RxDataHandler
 ---------------------------------------------------------------------------------
 (14) _EUSART_RxDataHandler                                0     0      0       0
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              2     0      2       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 14
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _EUSART_Initialize
       _EUSART_SetErrorHandler
       _EUSART_SetFramingErrorHandler
       _EUSART_SetOverrunErrorHandler
       _EUSART_SetRxInterruptHandler
       _EUSART_SetTxInterruptHandler
     _I2C_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
   _TLV493_Init
     _I2C_ReadNBytes
       _I2C_Close
         _I2C_MasterClearIrq
         _I2C_MasterClose
         _I2C_MasterDisableIrq
       _I2C_MasterRead
         _I2C_MasterOperation
           _I2C_MasterStart
           _I2C_Poller
             _I2C_MasterFsm
               _I2C_DO_ADDRESS_NACK *
                 Absolute function(Fake) *
                 _I2C_CallbackReturnReset *
                 _I2C_CallbackReturnStop *
                 _I2C_DO_SEND_RESTART *
                   _I2C_MasterEnableRestart
                 _I2C_DO_SEND_STOP *
                   _I2C_MasterStop
                 _rd1RegCompleteHandler *
                   _I2C_SetBuffer
                   _I2C_SetDataCompleteCallback
                     _I2C_SetCallback
                 _rd2RegCompleteHandler *
                   _I2C_SetBuffer
                   _I2C_SetDataCompleteCallback
                 _rdBlkRegCompleteHandler *
                   _I2C_SetBuffer
                   _I2C_SetDataCompleteCallback
                 _wr1RegCompleteHandler *
                   _I2C_SetBuffer
                   _I2C_SetDataCompleteCallback
                 _wr2RegCompleteHandler *
                   _I2C_SetBuffer
                   _I2C_SetDataCompleteCallback
               _I2C_DO_IDLE *
               _I2C_DO_RCEN *
                 _I2C_MasterStartRx
               _I2C_DO_RESET *
               _I2C_DO_RX *
                 Absolute function(Fake) *
                 _I2C_CallbackReturnReset *
                 _I2C_CallbackReturnStop *
                 _I2C_DO_RX_NACK_RESTART *
                   _I2C_MasterSendNack
                 _I2C_DO_RX_NACK_STOP *
                   _I2C_MasterSendNack
                 _I2C_MasterGetRxData *
                 _I2C_MasterSendAck *
                 _rd1RegCompleteHandler *
                 _rd2RegCompleteHandler *
                 _rdBlkRegCompleteHandler *
                 _wr1RegCompleteHandler *
                 _wr2RegCompleteHandler *
               _I2C_DO_RX_ACK *
                 _I2C_MasterSendAck
               _I2C_DO_RX_NACK_RESTART *
               _I2C_DO_RX_NACK_STOP *
               _I2C_DO_SEND_ADR_READ *
                 _I2C_MasterSendTxData
               _I2C_DO_SEND_ADR_WRITE *
                 _I2C_MasterSendTxData
               _I2C_DO_SEND_RESTART *
               _I2C_DO_SEND_RESTART_READ *
                 _I2C_MasterEnableRestart
               _I2C_DO_SEND_RESTART_WRITE *
                 _I2C_MasterEnableRestart
               _I2C_DO_SEND_STOP *
               _I2C_DO_TX *
                 Absolute function(Fake) *
                 _I2C_CallbackReturnReset *
                 _I2C_CallbackReturnStop *
                 _I2C_DO_SEND_RESTART_READ *
                 _I2C_DO_SEND_RESTART_WRITE *
                 _I2C_DO_SEND_STOP *
                 _I2C_MasterIsNack *
                 _I2C_MasterSendTxData *
                 _rd1RegCompleteHandler *
                 _rd2RegCompleteHandler *
                 _rdBlkRegCompleteHandler *
                 _wr1RegCompleteHandler *
                 _wr2RegCompleteHandler *
               _I2C_DO_TX_EMPTY *
                 Absolute function(Fake) *
                 _I2C_CallbackReturnReset *
                 _I2C_CallbackReturnStop *
                 _I2C_DO_SEND_RESTART *
                 _I2C_DO_SEND_STOP *
                 _I2C_MasterSetIrq *
                 _rd1RegCompleteHandler *
                 _rd2RegCompleteHandler *
                 _rdBlkRegCompleteHandler *
                 _wr1RegCompleteHandler *
                 _wr2RegCompleteHandler *
               _I2C_MasterClearIrq *
               _I2C_MasterIsNack *
             _I2C_MasterWaitForEvent
       _I2C_Open
         _I2C_MasterClearIrq
         _I2C_MasterOpen
       _I2C_SetBuffer
     _I2C_WriteNBytes
       _I2C_Close
       _I2C_MasterWrite
         _I2C_MasterOperation
       _I2C_Open
       _I2C_SetAddressNackCallback
         _I2C_SetCallback
       _I2C_SetBuffer
   _TLV493_Temp_GetValue
     _TLV493_Read
       _I2C_ReadNBytes
     ___fladd
       ___flmul (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___flmul
     ___xxtofl
   _TLV493_X_GetValue
     _TLV493_Read
     ___flmul
     ___xxtofl
   _TLV493_Y_GetValue
     _TLV493_Read
     ___flmul
     ___xxtofl
   _TLV493_Z_GetValue
     _TLV493_Read
     ___flmul
     ___xxtofl
   _printf
     _vfprintf
       _vfpfcnvrt
         _atoi
           ___wmul
           _isdigit
           _isspace
         _efgtoa
           ___awdiv
           ___awmod
           ___fladd
           ___fldiv
           ___fleq
           ___flge
             ___flmul (ARG)
           ___flmul
           ___flneg
           ___flsub
             ___fladd
             ___flmul (ARG)
           ___fltol
           ___fpclassifyf
           _floorf
             ___fldiv (ARG)
           _isupper
           _pad
             _fputc
               _putch
                 _EUSART_Write
             _fputs
               _fputc
             _strlen
           _strcpy
           _tolower
             _isupper
         _fputc
         _isdigit
         _isupper
         _strncmp
         _tolower

 _INTERRUPT_InterruptManager (ROOT)
   Absolute function(Fake) *
   _EUSART_Receive_ISR *
     Absolute function(Fake) *
     _EUSART_DefaultErrorHandler *
       _EUSART_RxDataHandler
     _EUSART_DefaultFramingErrorHandler *
     _EUSART_DefaultOverrunErrorHandler *
     _EUSART_RxDataHandler *
   _EUSART_Transmit_ISR *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F5F      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      4      88       7       53.1%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     58      A0       5      100.0%
BITBANK15           60      0       0      35        0.0%
BANK15              60      0       0      36        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     55      5A       1       95.7%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     182      32        0.0%
DATA                 0      0     182       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Thu Sep 30 09:26:18 2021

                ?_EUSART_SetRxInterruptHandler 0005                         ??_I2C_DO_SEND_ADR_READ 0005  
                  __size_of_I2C_MasterSendNack 0006                             __size_of_I2C_Close 002C  
                                 ___fldiv@aexp 001D                                   ___fldiv@bexp 001C  
                                 ___fldiv@sign 0015                        ??_I2C_DO_SEND_ADR_WRITE 0006  
                                  _SSPSTATbits 000FC7                                             l90 4B44  
                                           l93 4B18                                             l69 4746  
                                           l78 487C                                             l96 4AEC  
                                           l99 4B70                                   ___awdiv@sign 000A  
                          ___wmul@multiplicand 0007                            __size_of_I2C_Poller 001E  
                        ??_I2C_DO_SEND_RESTART 0005                   __size_of_I2C_MasterOperation 0044  
                                          l102 4986                                            l213 4388  
                                          l223 4904                                            l312 4404  
                                          l209 4D00                                            l217 4B9C  
                __size_of_I2C_MasterSendTxData 0008                                            l402 4E1A  
                                          l306 4D48                                            l330 4DE2  
                                          l226 4DAA                                            l411 4DF6  
                                          l236 4C3A                                            l405 4CEC  
                                          l333 4DDA                                            l229 4DA2  
                                          l245 4CAA                                            l342 4DC2  
                                          l262 4C7A                                            l239 4CC2  
                                          l351 4D3C                                            l256 447E  
                                          l408 4DF0                                            l432 4E06  
                                          l272 4D30                                            l336 4DD2  
                                          l281 3D6E                                            l345 4DBA  
                                          l426 4E26                                            l266 4564  
                                          l275 4D20                                            l339 4DCA  
                                          l435 4D02                                            l348 4DB2  
                                          l604 4D5E                                            l429 4E2E  
                                          l381 4E2A                                            l365 4E16  
                                          l269 4D54                                            l357 45CA  
                                          l390 4E1E                                            l278 3D36  
                                          l294 41F6                                            l295 4264  
                                          l439 4D10                                            l456 4CD8  
                                          l368 4E12                                            l384 4E0A  
                                          l633 4D90                                            l642 4D72  
                                          l570 44F4                                            l378 4C5C  
                                          l459 4D68                                            l387 4DEA  
                                          l636 4D86                                            l660 4E32  
                                          l492 4A94                                            l396 4E0E  
                                          l645 4D7C                                            l733 3E30  
                                          l741 3EEC                                            l726 3B20  
                                          l639 4D9A                                            l399 4E22  
                                          l729 4C92                                            l745 3968  
                                          l737 3FA8                                            l594 475C  
                                          l595 4772                                            l748 4C16  
                                          l598 479E                                            l992 4114  
                                          l979 3CAA                         ??_EUSART_RxDataHandler 0001  
                                          _pad 3B22                         fp__I2C_DO_RX_NACK_STOP 0000  
                       _I2C_MasterWaitForEvent 4D02                 ?_EUSART_SetFramingErrorHandler 0005  
                                 ___awmod@sign 000A                                            prod 000FF3  
                                          tosl 000FFD                                            wreg 000FE8  
                                 ___flmul@aexp 0020                                   ___flmul@bexp 0025  
                 ??_I2C_SetAddressNackCallback 000E                                   ___flmul@sign 001F  
                                 ___flmul@temp 002A                                   ___flmul@prod 0026  
                    TLV493_X_GetValue@XDataAnz 0032                       ??_I2C_CallbackReturnStop 0010  
                                 _I2C_DO_RESET 4D32                          ?_TLV493_Temp_GetValue 003C  
                                 ___fltol@exp1 000E                                           l1013 3738  
                                         l1022 49F6                                           l1007 41BE  
                                         l1018 377E                        ??_rd2RegCompleteHandler 0010  
                                         l1045 367A                                           l1302 2656  
                                         l1303 2644                                           l1410 3202  
                                         l1330 2F00                                           l1403 316A  
                                         l1332 2D60                                           l1341 2DA6  
                                         l1406 32C6                                           l1318 4836  
                                         l1343 2E1E                                           l1335 2D24  
                                         l1344 2E0C                                           l1417 325E  
                                         l1601 219A                                           l1362 2802  
                                         l1426 4BC6                                           l1371 2A70  
                                         l1276 246C                                           l1372 2A5E  
                                         l1508 148C                                           l4101 4B2E  
                                         l1293 2586                                           l1285 273C  
                                         l1277 245A                                           l1278 2420  
                                         l1366 2B66                                           l1470 3BAA  
                                         l4103 4B42                                           l4111 4B16  
                                         l1703 48C0                                           l1607 4626  
                                         l1472 3BE6                                           l1536 18CC  
                                         l1608 462E                                           l1369 29F8  
                                         l1650 3460                                           l1618 387C  
                                         l1490 1D16                                           l4123 4B46  
                                         l4107 4AEE                                           l4115 4AC2  
                                         l4131 4948                                           l1379 2B28  
                                         l1715 4A64                                           l1467 3B68  
                                         l4125 4B5A                                           l4109 4B02  
                                         l4117 4AD6                                           l4133 4970  
                                         l4221 4D4E                                           l4301 420C  
                                         l1709 46EC                                           l1734 468E  
                                         l4127 4B6E                                           l4119 4AEA  
                                         l4135 4984                                           l4143 4DE6  
                                         l4223 4D52                                           l4231 4D2E  
                                         l4311 4D46                                           l4151 4DD4  
                                         l1647 3458                                           l1719 3A44  
                                         l1656 3112                                           l1680 49BE  
                                         l4217 4E2C                                           l4401 4E20  
                                         l4081 444E                                           l4321 439A  
                                         l4145 4DDC                                           l4153 4DD8  
                                         l6001 3A46                                           l1729 4686  
                                         l1666 4A2E                                           l1674 47F0  
                                         l1594 227C                                           l4091 4C38  
                                         l4083 4CAC                                           l4163 4E08  
                                         l4139 4CDA                                           l4323 439E  
                                         l4315 438A                                           l4219 4D4A  
                                         l4227 4D22                                           l4235 4D12  
                                         l4251 3CCC                                           l4243 3CAC  
                                         l4307 4D3E                                           l4147 4DE0  
                                         l4171 4DB0                                           l4403 4C5E  
                                         l6011 3A90                                           l6003 3A60  
                                         l1659 3056                                           l1579 1E0E  
                                         l4093 4E1C                                           l4085 4C18  
                                         l4077 4408                                           l4181 4E0C  
                                         l4317 4392                                           l4333 43AC  
                                         l4229 4D26                                           l4237 4D16  
                                         l4261 3CDC                                           l4309 4D42  
                                         l4157 4DC4                                           l4341 4DC0  
                                         l4405 4C62                                           l5221 42FE  
                                         l6021 3ACC                                           l6013 3A94  
                                         l6005 3A76                                           l4095 4E18  
                                         l4087 4C28                                           l4079 441A  
                                         l4191 4E14                                           l4167 4DEC  
                                         l4327 43A4                                           l4239 4D1E  
                                         l4263 3D3A                                           l4255 3CD4  
                                         l4247 3CC4                                           l4183 4DCC  
                                         l4159 4DC8                                           l4175 4DB4  
                                         l4407 4C66                                           l5231 431A  
                                         l5223 4302                                           l6031 3B06  
                                         l6023 3AD0                                           l6015 3AAC  
                                         l6007 3A7C                                           l1695 42FA  
                                         l4089 4C30                                           l4097 4DF2  
                                         l4265 3D4C                                           l4281 41D4  
                                         l4185 4DD0                                           l4177 4DB8  
                                         l4169 4DAC                                           l4345 4D32  
                                         l4361 457A                                           l4353 4566  
                                         l4409 4C6A                                           l5241 4332  
                                         l5233 431C                                           l5225 4312  
                                         l6025 3AE8                                           l6017 3AB0  
                                         l6009 3A80                                           l7001 40B4  
                                         l4099 4B1A                                           l4195 4E10  
                                         l4267 3D66                                           l4291 41FC  
                                         l4283 41EC                                           l4339 4DBC  
                                         l4347 4D36                                           l4355 456A  
                                         l5251 435A                                           l5243 433A  
                                         l5235 4320                                           l5227 4316  
                                         l6027 3AEC                                           l6019 3AB4  
                                         l7011 40EE                                           l7003 40BC  
                                         l4189 4E04                                           l4269 3D6C  
                                         l4285 41F0                                           l4277 41C0  
                                         l4349 4D3A                                           l4357 4572  
                                         l4381 450A                                           l5261 437E  
                                         l5253 4362                                           l5245 4342  
                                         l5237 4328                                           l5229 4318  
                                         l6029 3AF0                                           l7005 40CA  
                                         l7013 40F4                                           l7021 4116  
                                         l7101 363A                                           ?_pad 0017  
                                         l5271 4B76                                           l4295 4204  
                                         l4279 41CE                                           l4367 4582  
                                         l4383 451E                                           l5263 4382  
                                         l5255 436A                                           l5247 434A  
                                         l5239 432A                                           l7015 4104  
                                         l7007 40E0                                           l7031 41B6  
                                         l7023 4144                                           l7103 364A  
                                         l7111 3B22                                           l5273 4B86  
                                         l4385 4524                                           l4377 44F6  
                                         l5257 4372                                           l5249 4352  
                                         l5265 4386                                           l7201 47A0  
                                         l7017 410C                                           l7009 40E8  
                                         l7033 41BC                                           l7025 4154  
                                         l7041 36BA                                           l7105 365A  
                                         l7121 3B74                                           l7113 3B32  
                                         l4643 4E24                                           l5275 4B8A  
                                         l4379 44FA                                           l4651 48D8  
                                         l5283 4DA4                                           l4635 4C3C  
                                         l5259 437A                                           l7203 47A4  
                                         l7027 4182                                           l7051 3726  
                                         l7043 36E8                                           l7107 366A  
                                         l6411 4784                                           l6403 474A  
                                         l7123 3B88                                           l7115 3B46  
                                         l4645 4E28                                           l5277 4B96  
                                         l5269 4B72                                           l4661 48FA  
                                         l4653 48DA                                           l4637 4C4A  
                                         l6501 23A2                                           l7205 47B8  
                                         l7029 4192                                           l7053 3776  
                                         l7045 36F8                                           l7037 367C  
                                         l7061 49D6                                           l7141 3812  
                                         l7133 3780                                           l6413 4786  
                                         l6405 474A                                           l6421 4D58  
                                         l7125 3B8C                                           l7117 3B54  
                                         l7301 143A                                           l7221 10A2  
                                         l7213 1072                                           l5279 4B9A  
                                         l4663 48FE                                           l4655 48DE  
                                         l4647 48C4                                           l4639 4C5A  
                                         l6511 23B6                                           l6503 23A6  
                                         l7207 47E6                                           l7055 377C  
                                         l7047 3706                                           l7039 36AA  
                                         l7063 49E6                                           l7151 3874  
                                         l7135 37A0                                           l6415 4796  
                                         l6407 476A                                           l6431 42B2  
                                         l6423 4266                                           l7127 3BBA  
                                         l7119 3B60                                           l7303 144C  
                                         l7311 1498                                           l7231 10F8  
                                         l7223 10C6                                           l7215 107C  
                                         l4657 48EE                                           l4665 4902  
                                         l4649 48C8                                           l6601 2626  
                                         l6521 2408                                           l6513 23BA  
                                         l6505 23AA                                           l6441 2298  
                                         l7209 47EA                                           l7049 3718  
                                         l7081 35E0                                           l7073 35A0  
                                         l7137 37DE                                           l7145 381E  
                                         l6417 479A                                           l6409 4774  
                                         l6433 42E8                                           l6425 4278  
                                         l7129 3BCE                                           l7401 196E  
                                         l7321 14D8                                           l7305 145E  
                                         l7241 1126                                           l7233 110A  
                                         l7225 10D0                                           l7217 108C  
                                         l4659 48F6                                           l6611 2680  
                                         l6603 263C                                           l6531 244C  
                                         l6523 2418                                           l6507 23AE  
                                         l6515 23BE                                           l6451 22CC  
                                         l6443 229A                                           l7059 49C0  
                                         l7091 3610                                           l7083 35EE  
                                         l7075 35CA                                           l7067 3576  
                                         l7147 3830                                           l7139 3806  
                                         l7171 2F22                                           l6419 479C  
                                         l6427 428A                                           l7155 4690  
                                         l7163 4666                                           l7411 19B6  
                                         l7403 1980                                           l7331 1534  
                                         l7323 150E                                           l7307 1466  
                                         l7251 119A                                           l7235 1116  
                                         l7243 112C                                           l7227 10D8  
                                         l7219 109A                                           l5821 46F0  
                                         l6621 26FC                                           l6613 26BA  
                                         l6533 244E                                           l6525 242E  
                                         l6517 23C2                                           l6509 23B2  
                                         l6461 22FE                                           l6445 22AA  
                                         l6453 22D4                                           l6437 227E  
                                         l5901 31EA                                           l6701 2C1C  
                                         l7093 361A                                           l7077 35CC  
                                         l7069 358C                                           l7181 300A  
                                         l7173 2F78                                           l6429 4294  
                                         l7157 46A0                                           l7165 4678  
                                         l7501 1C66                                           l7421 19EC  
                                         l7413 19C6                                           l7405 198E  
                                         l7341 1578                                           l7333 1546  
                                         l7325 1516                                           l7317 14AA  
                                         l7309 1480                                           l7253 11B6  
                                         l7245 1152                                           l7261 1200  
                                         l7237 111E                                           l7229 10EA  
                                         l5671 4868                                           l5663 483A  
                                         l5831 4732                                           l5823 46F0  
                                         l6631 271C                                           l6623 2700  
                                         l6607 2666                                           l6615 26BC  
                                         l6551 24D6                                           l6543 249E  
                                         l6535 2458                                           l6527 243A  
                                         l6519 23EC                                           l6471 2334  
                                         l6463 2304                                           l6455 22E4  
                                         l6447 22BA                                           l6439 228A  
                                         l5911 324E                                           l5903 31EC  
                                         l6711 2C62                                           l6703 2C24  
                                         l7079 35DC                                           l7191 30F2  
                                         l7183 3046                                           l7175 2F8C  
                                         l7159 4630                                           l7511 1CC0  
                                         l7431 1A20                                           l7423 19F0  
                                         l7415 19CA                                           l7407 1996  
                                         l7351 15C2                                           l7343 1590  
                                         l7335 1554                                           l7319 14BC  
                                         l7327 151A                                           l7271 128A  
                                         l7263 1226                                           l7255 11CE  
                                         l7239 1122                                           l5681 4D92  
                                         l5673 4D74                                           l5833 4CEE  
                                         l5841 4A7E                                           l5665 483A  
                                         l5657 4C94                                           l5825 4706  
                                         l6633 272A                                           l6625 270E  
                                         l6617 26CC                                           l6609 2672  
                                         l6553 24DA                                           l6545 24AE  
                                         l6537 247A                                           l6561 24FA  
                                         l6529 243E                                           l6481 2370  
                                         l6473 2344                                           l6465 2312  
                                         l6457 22EA                                           l6449 22CA  
                                         l5921 32A6                                           l5913 326C  
                                         l5905 31F8                                           l7521 32C8  
                                         l6721 2C8A                                           l6713 2C66  
                                         l6705 2C34                                           l7089 3606  
                                         l7193 3102                                           l7177 2F9A  
                                         l7185 307A                                           l7169 2F02  
                                         l6641 488A                                           l7513 1CD0  
                                         l7505 1C9A                                           l7441 1ABE  
                                         l7433 1A24                                           l7425 19F6  
                                         l7417 19D0                                           l7409 19A8  
                                         l7353 15D6                                           l7361 16CC  
                                         l7345 15A2                                           l7337 1558  
                                         l7329 1522                                           l7281 12EE  
                                         l7273 12A2                                           l7257 11D8  
                                         l7249 1188                                           l7601 1D88  
                                         l5675 4D6A                                           l5835 4CFE  
                                         l5851 4D60                                           l5843 4A80  
                                         l5667 4850                                           l5659 4D9C  
                                         l5827 471A                                           l6635 272C  
                                         l6627 2714                                           l6619 26DC  
                                         l6563 2520                                           l6571 2576  
                                         l6555 24E8                                           l6547 24BC  
                                         l6539 248A                                           l6491 238E  
                                         l6483 237E                                           l6475 2346  
                                         l6467 2314                                           l6459 22FC  
                                         l6811 275A                                           l5923 32B4  
                                         l5915 326E                                           l5907 3234  
                                         l7531 333A                                           l7523 32DC  
                                         l6731 2CD8                                           l6707 2C4A  
                                         l7099 362E                                           l7187 30B6  
                                         l6643 489C                                           l6651 4A40  
                                         l7515 1CD6                                           l7507 1CAC  
                                         l7451 1B1C                                           l7419 19DC  
                                         l7427 19FC                                           l7435 1A2A  
                                         l7443 1AC2                                           l7371 1798  
                                         l7363 16EA                                           l7355 163A  
                                         l7339 156A                                           l7347 15AA  
                                         l7291 13B8                                           l7275 12AC  
                                         l7267 125C                                           l5677 4D88  
                                         l5861 44A0                                           l5853 4480  
                                         l5837 4E30                                           l5845 4A86  
                                         l5941 4CCC                                           l5669 4864  
                                         l5829 472E                                           l6629 2716  
                                         l6581 25CA                                           l6573 259C  
                                         l6565 2554                                           l6557 24EA  
                                         l6549 24CA                                           l6493 2392  
                                         l6485 2382                                           l6469 2324  
                                         l6477 234E                                           l6901 2A56  
                                         l6821 27A0                                           l6813 276A  
                                         l6805 273E                                           l5925 32B6  
                                         l5917 3272                                           l5909 3240  
                                         l6661 4BF2                                           l7197 49F8  
                                         l7541 3362                                           l7533 333E  
                                         l7525 32E0                                           l6741 2D22  
                                         l6733 2CE8                                           l6725 2C9E  
                                         l6709 2C5A                                           l6717 2C7A  
                                         l7189 30CA                                           l6645 48A0  
                                         l6653 4A58                                           l7509 1CB8  
                                         l7461 1B5A                                           l7517 1CF2  
                                         l7453 1B2C                                           l7445 1AE0  
                                         l7437 1A82                                           l7429 1A0E  
                                         l7381 1848                                           l7373 17A8  
                                         l7365 171E                                           l7357 1692  
                                         l7349 15B2                                           l7293 13EC  
                                         l7285 1324                                           l7269 126E  
                                         l7621 1E1C                                           l7613 1D9A  
                                         l7605 1D8E                                           l5679 4D7E  
                                         l5871 44BC                                           l5863 44A4  
                                         l5855 4482                                           l5847 4A88  
                                         l5839 4A66                                           l5943 4CD0  
                                         l6591 25F4                                           l6583 25D8  
                                         l6575 25AC                                           l6567 2556  
                                         l6559 24F4                                           l6495 2396  
                                         l6487 2386                                           l6479 235E  
                                         l6911 2AC4                                           l6831 27CC  
                                         l6823 27A6                                           l6815 277A  
                                         l6807 274A                                           l5919 3296  
                                         l6663 4C0E                                           l7543 336A  
                                         l7527 32E4                                           l6751 2D70  
                                         l6743 2D2E                                           l6735 2CF0  
                                         l6727 2CB8                                           l6719 2C8A  
                                         l6671 2B82                                           l6639 487E  
                                         l6647 4A30                                           l7471 1B90  
                                         l7463 1B6A                                           l7455 1B30  
                                         l7447 1AFC                                           l7439 1AB6  
                                         l7391 18B8                                           l7383 187C  
                                         l7375 17B8                                           l7367 1750  
                                         l7359 16C6                                           l7295 13F4  
                                         l7287 1358                                           l7279 12D4  
                                         l7631 1E80                                           l7623 1E1E  
                                         l7711 45CC                                           l5873 44C8  
                                         l5865 44A8                                           l5857 448E  
                                         l5849 4A92                                           l5945 4CD4  
                                         l5937 4CC4                                           l5881 4C7C  
                                         l6593 2604                                           l6585 25DA  
                                         l6569 2566                                           l6497 239A  
                                         l6489 238A                                           l6921 2B2C  
                                         l6905 2A80                                           l6913 2AC8  
                                         l6841 2822                                           l6833 27DC  
                                         l6825 27AC                                           l6817 278A  
                                         l6809 2758                                           l7721 3D74  
                                         l7553 3418                                           l7545 33A0  
                                         l7537 3344                                           l7529 3302  
                                         l6753 2D86                                           l6761 2DB6  
                                         l6745 2D4C                                           l6737 2D00  
                                         l6729 2CC8                                           l6681 2BB6  
                                         l6673 2B84                                           l6649 4A3C  
                                         l6657 4988                                           l7481 1BEC  
                                         l7473 1B9C                                           l7465 1B72  
                                         l7457 1B40                                           l7449 1B0E  
                                         l7393 18C4                                           l7385 1890  
                                         l7377 17EC                                           l7369 1766  
                                         l7289 135E                                           l7297 1426  
                                         l7641 1F32                                           l7633 1EBA  
                                         l7625 1E44                                           l7617 1DA6  
                                         l7609 1D94                                           l7713 45D4  
                                         l7801 3466                                           l5875 44F2  
                                         l5867 44AC                                           l5859 449C  
                                         l5939 4CC8                                           l6587 25E8  
                                         l6579 25C0                                           l6595 2606  
                                         l6499 239E                                           l6931 2B56  
                                         l6923 2B3C                                           l6915 2AE2  
                                         l6907 2A8C                                           l6851 2862  
                                         l6835 27EC                                           l6827 27BA  
                                         l6819 2790                                           l5891 3190  
                                         l5883 3116                                           l7731 3DD4  
                                         l7723 3D7A                                           l7555 342A  
                                         l7539 335A                                           l6763 2DC4  
                                         l6755 2D8C                                           l6747 2D4E  
                                         l6739 2D14                                           l6691 2BE8  
                                         l6675 2B94                                           l6683 2BBE  
                                         l6667 2B68                                           l7491 1C36  
                                         l7475 1BA2                                           l7483 1BF2  
                                         l7467 1B80                                           l7459 1B52  
                                         l7395 18E8                                           l7379 1842  
                                         l7387 1894                                           l7299 1436  
                                         l7571 39AE                                           l7563 396A  
                                         l7651 1FBC                                           l7635 1EDA  
                                         l7627 1E4C                                           l7643 1F44  
                                         l7619 1DFC                                           l7715 45E2  
                                         l7811 349E                                           l7803 346A  
                                         l5869 44B0                                           l6589 25F0  
                                         l6597 2614                                           l6925 2B4A  
                                         l6917 2AF6                                           l6909 2A9A  
                                         l6861 28AC                                           l6853 286E  
                                         l6845 2836                                           l6837 27F2  
                                         l6829 27BC                                           l5885 3126  
                                         l7733 3E20                                           l7725 3D9C  
                                         l7741 3EF8                                           l7557 343C  
                                         l7549 33D8                                           l6941 3BE8  
                                         l6773 2E2E                                           l6781 2E76  
                                         l6765 2DC8                                           l6757 2D96  
                                         l6749 2D5E                                           l6693 2BEA  
                                         l6685 2BCE                                           l6677 2BA4  
                                         l6669 2B74                                           l7493 1C42  
                                         l7485 1C04                                           l7477 1BC8  
                                         l7469 1B88                                           l7397 194C  
                                         l7389 18A4                                           l7573 39C6  
                                         l7565 3994                                           l7661 2058  
                                         l7653 1FF0                                           l7645 1F68  
                                         l7637 1EE8                                           l7629 1E5A  
                                         l7717 4608                                           l7821 3516  
                                         l7813 34B2                                           l7805 3486  
                                         l6599 2618                                           l6927 2B4C  
                                         l6919 2B10                                           l6871 28FE  
                                         l6863 28B8                                           l6855 2886  
                                         l6847 2842                                           l6839 2812  
                                         l5895 31A4                                           l5887 3134  
                                         l7727 3DAE                                           l7719 3D70  
                                         l7751 3F98                                           l7743 3F1A  
                                         l6951 3C14                                           l6943 3BEC  
                                         l6791 2EE0                                           l6783 2E90  
                                         l6775 2E3A                                           l6767 2DD6  
                                         l6759 2DA4                                           l6695 2BFA  
                                         l6687 2BD4                                           l6679 2BB4  
                                         l6935 47F2                                           l7495 1C4A  
                                         l7487 1C1E                                           l7479 1BE4  
                                         l7399 195C                                           l7575 39E4  
                                         l7671 2124                                           l7655 2002  
                                         l7647 1F78                                           l7591 1D62  
                                         l7583 1D18                                           l7823 3534  
                                         l7815 34C6                                           l7807 3488  
                                         l6929 2B52                                           l6881 297C  
                                         l6873 290E                                           l6865 28C8  
                                         l6857 2892                                           l6849 284C  
                                         l5897 31AC                                           l5889 317A  
                                         l7729 3DC8                                           l7745 3F26  
                                         l7737 3EEE                                           l7761 3E5E  
                                         l6961 3C42                                           l6953 3C1C  
                                         l6945 3BFA                                           l6793 2EEE  
                                         l6785 2EA6                                           l6777 2E48  
                                         l6769 2E04                                           l6697 2C0A  
                                         l6689 2BDA                                           l6937 4802  
                                         l7497 1C5A                                           l7489 1C24  
                                         l7577 39F6                                           l7569 39A0  
                                         l7673 2136                                           l7681 21D6  
                                         l7657 201A                                           l7665 2084  
                                         l7649 1FAC                                           l7593 1D6E  
                                         l7585 1D3E                                           l7825 3552  
                                         l7817 34DA                                           l7809 348A  
                                         l6891 29F6                                           l6883 29B2  
                                         l6875 292A                                           l6867 28D4  
                                         l6859 289E                                           l5899 31B8  
                                         l7747 3F40                                           l7739 3EF2  
                                         l7763 3E6A                                           l7755 3E32  
                                         l6971 3C7C                                           l6963 3C4A  
                                         l6955 3C20                                           l6947 3C02  
                                         l6795 2EF4                                           l6787 2EC0  
                                         l6779 2E72                                           l6699 2C1A  
                                         l7499 1C60                                           l7579 3A20  
                                         l7683 21FC                                           l7691 222A  
                                         l7675 216A                                           l7667 20B2  
                                         l7659 2028                                           l7595 1D70  
                                         l7587 1D4C                                           l7819 34F8  
                                         l6893 2A08                                           l6885 29C0  
                                         l6877 2936                                           l6869 28E4  
                                         l7781 38B6                                           l7773 387E  
                                         l7749 3F4C                                           l7765 3E84  
                                         l7757 3E36                                           l6981 3CA2  
                                         l6973 3C7E                                           l6965 3C58  
                                         l6957 3C28                                           l6949 3C06  
                                         l6797 2EF6                                           l6789 2EDC  
                                         l7693 2238                                           l7685 220A  
                                         l7677 21AA                                           l7597 1D82  
                                         l7589 1D5E                                           l6895 2A16  
                                         l6887 29DE                                           l6879 2952  
                                         l7783 38C2                                           l7775 3882  
                                         l7767 3E90                                           l7759 3E3C  
                                         l6975 3C84                                           l6967 3C5E  
                                         l6959 3C3A                                           l6991 4080  
                                         l7687 221E                                           l7961 45B4  
                                         l6897 2A1A                                           l6889 29E8  
                                         l7785 38DC                                           l7777 3888  
                                         l7769 3EDC                                           l6969 3C74  
                                         l6977 3C8A                                           l6993 4084  
                                         l6985 4066                                           l7697 2244  
                                         l7793 4B9E                                           l7963 423E  
                                         l6899 2A28                                           l7787 38E8  
                                         l7779 38AA                                           l6979 3C9A  
                                         l6995 4092                                           l6987 406A  
                                         l7699 226A                                           l7795 4BA8  
                                         l7965 3D10                                           l7789 3958  
                                         l6997 409A                                           l6989 4078  
                                         l7957 1DCE                                           l7967 43DE  
                                         l7959 338A                                           l6999 40AC  
                                         l7799 3462                                           STR_1 1031  
                                         STR_2 1040                                           STR_3 104F  
                                         STR_4 1021                                           STR_5 105E  
                                         STR_6 1066                                           STR_9 1062  
                                         _LATA 000F89                                           _LATB 000F8A  
                                         _LATC 000F8B                                           u3120 3CC0  
                                         u3200 450A                                           _LATD 000F8C  
                                         u3121 3CBC                                           u3201 4506  
                                         _LATE 000F8D                                           u3210 451E  
                                         u3211 451A                                           u3060 441A  
                                         u3140 3D66                                           u3061 4416  
                                         u3141 3D62                                           u3070 4C28  
                                         u3150 41EC                                           u3071 4C24  
                                         u3151 41E8                                           u3080 4CEA  
                                         u3081 4CE4                                           u3138 3CEA  
                                         u3139 3CFE                                           u3228 454E  
                                         u3229 4560                                           u3086 4CEC  
                                         u3190 4D10                                           u3270 4C7A  
                                         u3191 4D0C                                           u3271 4C76  
                                         u3168 421A                                           u3169 422C  
                                         u3178 43BA                                           u3179 43CC  
                                         u3188 4590                                           u3189 45A2  
                                         u3710 4C4A                                           u6110 475C  
                                         u3711 4C46                                           u6111 4758  
                                         u3720 48D8                                           u6200 22BA  
                                         u7000 2AE2                                           u6120 476A  
                                         u3721 48D4                                           u6201 22B6  
                                         u7001 2ADE                                           u6121 4766  
                                         u3730 48EE                                           u6210 22FC  
                                         u7010 2B10                                           u6130 4796  
                                         u3731 48EA                                           u6211 22F8  
                                         u7011 2B0C                                           u6131 4792  
                                         u5420 4850                                           u6300 242E  
                                         u6220 2312                                           u7020 2B4A  
                                         u7100 4092                                           u6140 4278  
                                         u5421 484C                                           u6301 242A  
                                         u6221 230E                                           u7021 2B46  
                                         u7101 408E                                           u6141 4274  
                                         u5430 487C                                           u6310 244C  
                                         u6230 2324                                           u7030 3BFA  
                                         u7110 40AC                                           u6150 428A  
                                         u5431 4878                                           u6311 2448  
                                         u6231 2320                                           u7031 3BF6  
                                         u7111 40A8                                           u6151 4286  
                                         u6400 259C                                           u6320 246C  
                                         u6240 2334                                           u7040 3C14  
                                         u7120 40CA                                           u7200 3706  
                                         u6160 42B2                                           u8000 19A8  
                                         u6401 2598                                           u6321 2468  
                                         u6241 2330                                           u7041 3C10  
                                         u7121 40C6                                           u7201 3702  
                                         u6161 42AE                                           u8001 19A4  
                                         u5610 4706                                           u6410 25AC  
                                         u6330 247A                                           u6250 2370  
                                         u7050 3C3A                                           u7130 40E0  
                                         u7210 3726                                           u6170 42E8  
                                         u8010 19B6                                           u5611 4702  
                                         u6411 25A8                                           u6331 2476  
                                         u6251 236C                                           u7051 3C36  
                                         u7131 40DC                                           u7211 3722  
                                         u6171 42E4                                           u8011 19B2  
                                         u4740 4312                                           u5620 4746  
                                         u6500 2680                                           u6420 25D8  
                                         u6340 248A                                           u6260 237E  
                                         u6180 2298                                           u5700 326C  
                                         u7060 3C58                                           u7140 4104  
                                         u7220 3776                                           u7300 365A  
                                         u8100 1C1E                                           u8020 1A0E  
                                         u4741 430E                                           u5621 4742  
                                         u6501 267C                                           u6421 25D4  
                                         u6341 2486                                           u6261 237A  
                                         u6181 2294                                           u5701 3268  
                                         u7061 3C54                                           u7141 4100  
                                         u7221 3772                                           u7301 3656  
                                         u8101 1C1A                                           u8021 1A0A  
                                         u4750 4B86                                           u6510 26BA  
                                         u6430 25E8                                           u6350 24BC  
                                         u6270 23EC                                           u6190 22AA  
                                         u5710 32A6                                           u5630 3126  
                                         u7070 3C74                                           u7150 4144  
                                         u7230 49D6                                           u7310 3B32  
                                         u8110 1C36                                           u8030 1AE0  
                                         u4751 4B82                                           u6511 26B6  
                                         u6431 25E4                                           u6351 24B8  
                                         u6271 23E8                                           u6191 22A6  
                                         u5711 32A2                                           u5631 3122  
                                         u7071 3C70                                           u7151 4140  
                                         u7231 49D2                                           u7311 3B2E  
                                         u8111 1C32                                           u8031 1ADC  
                                         u6520 26CC                                           u6440 2604  
                                         u6360 24CA                                           u6280 2404  
                                         u5720 32B4                                           u5640 3134  
                                         u8200 342A                                           u7080 3C9A  
                                         u7160 4182                                           u7240 358C  
                                         u7400 386A                                           u7320 3B54  
                                         u6600 49BA                                           u8120 1C94  
                                         u8040 1AFC                                           u6521 26C8  
                                         u6441 2600                                           u6361 24C6  
                                         u6281 23FE                                           u5721 32B0  
                                         u5641 3130                                           u8201 3426  
                                         u7081 3C96                                           u7161 417E  
                                         u7241 3588                                           u7401 3864  
                                         u7321 3B50                                           u8121 1C8E  
                                         u8041 1AF8                                           u6530 26DC  
                                         u6450 2614                                           u6370 24E8  
                                         u6290 2406                                           u5650 3190  
                                         u8210 343C                                           u7090 4078  
                                         u6610 2B82                                           u7170 41B6  
                                         u7250 35C0                                           u7410 386C  
                                         u7330 3BAA                                           u8130 1C96  
                                         u8050 1B0E                                           u6531 26D8  
                                         u6451 2610                                           u6371 24E4  
                                         u5651 318C                                           u8211 3438  
                                         u7091 4074                                           u6611 2B7E  
                                         u7171 41B2                                           u7331 3BA6  
                                         u8051 1B0A                                           u6540 26FC  
                                         u6460 2626                                           u6380 2520  
                                         u5660 31E6                                           u6700 2D22  
                                         u6620 2B94                                           u7180 36AA  
                                         u7260 35EE                                           u7340 3BBA  
                                         u7420 46DA                                           u8140 1CAC  
                                         u8060 1B1C                                           u8220 3994  
                                         u8300 1E44                                           u6541 26F8  
                                         u6461 2622                                           u6381 251C  
                                         u5661 31E2                                           u6701 2D1E  
                                         u6621 2B90                                           u7181 36A6  
                                         u7261 35EA                                           u7341 3BB6  
                                         u8141 1CA8                                           u8061 1B18  
                                         u8221 3990                                           u8301 1E40  
                                         u6550 270E                                           u6470 263C  
                                         u6390 2566                                           u5670 3230  
                                         u8150 3302                                           u6710 2D4C  
                                         u6630 2BA4                                           u7190 36E8  
                                         u7270 3602                                           u7350 37C0  
                                         u7510 3006                                           u7430 46EC  
                                         u8070 1B52                                           u8230 39C6  
                                         u8310 1E80                                           u6551 270A  
                                         u6471 2638                                           u6391 2562  
                                         u5671 322C                                           u8151 32FE  
                                         u6711 2D48                                           u6631 2BA0  
                                         u7191 36E4                                           u7271 35FE  
                                         u7255 35B6                                           u7511 3002  
                                         u7431 46E8                                           u8071 1B4E  
                                         u8231 39C2                                           u8311 1E7C  
                                         u5840 3A90                                           u6560 272A  
                                         u6480 2652                                           u5680 324E  
                                         u7600 47E6                                           u8160 333A  
                                         u6800 2E48                                           u6720 2D70  
                                         u6640 2BE8                                           u7280 362A  
                                         u7360 37DE                                           u7520 302A  
                                         u7440 4660                                           u8080 1B80  
                                         u8240 39E4                                           u8400 2120  
                                         u8320 1F2C                                           u5841 3A8C  
                                         u6561 2726                                           u6481 264E  
                                         u5681 324A                                           u7601 47E2  
                                         u8161 3336                                           u6801 2E44  
                                         u6721 2D6C                                           u6641 2BE4  
                                         u7281 3626                                           u7361 37DA  
                                         u7505 2FAE                                           u7441 465A  
                                         u8081 1B7C                                           u8241 39E0  
                                         u8321 1F26                                           u5850 3AAC  
                                         u6490 2666                                           u5690 325E  
                                         u8170 3356                                           u6810 2E90  
                                         u6730 2D86                                           u6650 2BFA  
                                         u7290 364A                                           u7370 3806  
                                         u7530 3046                                           u7506 2FB8  
                                         u6570 48C0                                           u7450 4662  
                                         u8090 1C04                                           u7610 109A  
                                         u8250 39F6                                           u8410 2136  
                                         u8330 1F2E                                           u5851 3AA8  
                                         u6491 2662                                           u5691 325A  
                                         u8171 3352                                           u6811 2E8C  
                                         u6731 2D82                                           u6651 2BF6  
                                         u7291 3646                                           u7371 3802  
                                         u7355 37B6                                           u7531 3042  
                                         u7507 2FC8                                           u6571 48BC  
                                         u7427 46D0                                           u8091 1C00  
                                         u7611 1096                                           u8251 39F2  
                                         u8411 2132                                           u5860 3ACC  
                                         u6900 2812                                           u8180 3412  
                                         u6820 2EC0                                           u6740 2DA4  
                                         u6660 2C0A                                           u7380 3830  
                                         u7540 309A                                           u6580 4A58  
                                         u7460 4678                                           u7700 1254  
                                         u7620 10EA                                           u8260 3A20  
                                         u8420 21FC                                           u8340 1F44  
                                         u5861 3AC8                                           u6901 280E  
                                         u8181 340C                                           u6821 2EBC  
                                         u6741 2DA0                                           u6661 2C06  
                                         u7381 382C                                           u7525 3020  
                                         u6581 4A54                                           u7461 4674  
                                         u7701 124E                                           u7621 10E6  
                                         u8261 3A1C                                           u8421 21F8  
                                         u8341 1F40                                           u5870 3AE8  
                                         u6910 2822                                           u8190 3414  
                                         u6830 2EEE                                           u6750 2DC4  
                                         u6670 2C4A                                           u7550 30B6  
                                         u7470 2F4A                                           u6590 49B8  
                                         u7710 1256                                           u7630 10F8  
                                         u8350 1F78                                           u8270 1D3E  
                                         u8430 4626                                           u5871 3AE4  
                                         u6911 281E                                           u6831 2EEA  
                                         u6751 2DC0                                           u6671 2C46  
                                         u7551 30B2                                           u6591 49B2  
                                         u7631 10F4                                           u8351 1F74  
                                         u8271 1D3A                                           u8431 4622  
                                         u6920 299C                                           u6840 2758  
                                         u8440 3DC8                                           u6760 2DD6  
                                         u6680 2C8A                                           u7560 30F2  
                                         u7480 2F78                                           u7800 14BC  
                                         u7720 126E                                           u7640 110A  
                                         u8360 1FBC                                           u8280 1E0E  
                                         u6841 2754                                           u8441 3DC4  
                                         u6761 2DD2                                           u6681 2C86  
                                         u7561 30EE                                           u7545 3090  
                                         u7481 2F74                                           u7801 14B8  
                                         u7721 126A                                           u7641 1106  
                                         u8361 1FB8                                           u8281 1E0A  
                                         u6930 29F6                                           u6850 276A  
                                         u8450 3F40                                           u7570 4A28  
                                         u6770 2E04                                           u6690 2D00  
                                         u7490 2F9A                                           u7810 14D8  
                                         u7730 1320                                           u7650 1152  
                                         u8370 2002                                           u8290 1E1C  
                                         u8507 3A50                                           u6931 29F2  
                                         u6851 2766                                           u8451 3F3C  
                                         u7571 4A22                                           u6771 2E00  
                                         u6691 2CFC                                           u7395 3842  
                                         u7491 2F96                                           u7475 2F40  
                                         u7811 14D4                                           u7731 131C  
                                         u7651 114E                                           u8371 1FFE  
                                         u8291 1E18                                           u6940 2A16  
                                         u6860 277A                                           u8460 3E84  
                                         u7580 4A2A                                           u6780 2E1A  
                                         u7900 1750                                           u7820 150E  
                                         u7740 13B4                                           u7660 1180  
                                         u8380 20B2                                           u8517 3B10  
                                         u6941 2A12                                           u6925 2992  
                                         u6861 2776                                           u8461 3E80  
                                         u6781 2E16                                           u7901 174C  
                                         u7821 150A                                           u7741 13B0  
                                         u7661 117A                                           u8381 20AE  
                                         u6950 2A28                                           u6870 27BA  
                                         u8470 38DC                                           u7590 47B8  
                                         u6790 2E2E                                           u7910 1798  
                                         u7830 1534                                           u7750 1426  
                                         u7670 1182                                           u8390 211E  
                                         u6951 2A24                                           u6871 27B6  
                                         u8471 38D8                                           u7591 47B4  
                                         u6791 2E2A                                           u7911 1794  
                                         u7831 1530                                           u7751 1422  
                                         u8391 2118                                           u6960 2A56  
                                         u6880 27CC                                           u7920 17A8  
                                         u7840 1546                                           u7760 144C  
                                         u7680 119A                                           u6961 2A52  
                                         u6881 27C8                                           u7921 17A4  
                                         u7841 1542                                           u7761 1448  
                                         u7681 1196                                           u6970 2A6C  
                                         u6890 27DC                                           u7930 1842  
                                         u7850 1554                                           u7770 145E  
                                         u7690 1226                                           u6971 2A68  
                                         u6891 27D8                                           u7931 183E  
                                         u7851 1550                                           u7771 145A  
                                         u7691 1222                                           u6980 2A80  
                                         u7940 1890                                           u7860 156A  
                                         u7780 1480                                           u6981 2A7C  
                                         u7941 188C                                           u7861 1566  
                                         u7781 147C                                           u6990 2A9A  
                                         u7950 18B8                                           u7870 1578  
                                         u7790 14A6                                           u6991 2A96  
                                         u7951 18B4                                           u7871 1574  
                                         u7791 14A2                                           u8487 3476  
                                         u7960 195C                                           u7880 15A2  
                                         u7961 1958                                           u7881 159E  
                                         u8497 355E                                           u7970 196E  
                                         u7890 16EA                                           u7971 196A  
                                         u7891 16E6                                           u7980 1980  
                                         u7981 197C                                           u7990 198E  
                                         u7991 198A                                           _WPUB 000F7C  
                      ??_wr2RegCompleteHandler 0010                                           _dbuf 0118  
                                         _atoi 32C8                                           _main 3462  
                     ?_I2C_CallbackReturnReset 000E                              _TLV493_X_GetValue 3D70  
                                         _prec 00F8                                           _nout 00F4  
                                         pad@i 001E                                           pad@p 001B  
                                         fsr0h 000FEA                                           fsr1h 000FE2  
                                         indf0 000FEF                                           fsr2h 000FDA  
                                         fsr0l 000FE9                                           indf2 000FDF  
                                         fsr1l 000FE1                                           pad@w 0020  
                                         fsr2l 000FD9                               __end_of_I2C_Open 438A  
                                         btemp 005B                                  ___fpclassifyf 3780  
                                         prodh 000FF4                                           prodl 000FF3  
                                         start 00B0                             ?_TLV493_X_GetValue 002C  
                              ___fldiv@new_exp 0016                              _TLV493_Y_GetValue 3EEE  
                 fp__I2C_DO_SEND_RESTART_WRITE 0000                                   _tolower$2276 0011  
                                 ___param_bank 000000                             ?_TLV493_Y_GetValue 002C  
                            _TLV493_Z_GetValue 3E32               __size_of_rdBlkRegCompleteHandler 0040  
                                        ??_pad 001D                               ?_I2C_MasterClose 0001  
                          ??_TLV493_X_GetValue 0030                             ?_TLV493_Z_GetValue 002C  
                              _I2C_WriteNBytes 46EE                                  ?_EUSART_Write 0001  
          __size_of_I2C_SetAddressNackCallback 0018                 __size_of_OSCILLATOR_Initialize 000A  
                             ?_I2C_MasterStart 0001                                  _I2C_DO_RX_ACK 4DBC  
                             ?_I2C_MasterWrite 0001                  __end_of_OSCILLATOR_Initialize 4D6A  
                                  _writeBuffer 0172                                  ___fltol@sign1 000D  
                          ??_TLV493_Y_GetValue 0030                                          ?_atoi 000C  
                              __end_of___fladd 273E                                          ?_main 0001  
                              __end_of___fldiv 2F02                                __end_of___awdiv 3CAC  
                              __end_of___flneg 49F8                                          STR_10 106A  
                                        STR_13 106E                                          STR_15 106E  
                              __end_of___awmod 4116                                __end_of___flmul 2B68  
                              __end_of___flsub 4838                                __end_of___fltol 367C  
                                        _ANSEL 000F7E                                ___awdiv@divisor 0007  
                                        i2l610 4946                                          i2l621 4BF0  
                                        i2l630 4E02                                          i2l607 4944  
                                        i2l624 4E34                                          i2l617 4064  
                                        i2l627 4DFC                                          i2l671 009C  
                                        i2l666 0062                                          i2l667 009C  
                              ___awdiv@counter 0009                                          _RCREG 000FAE  
                 __size_of_I2C_DO_RX_NACK_STOP 0008                                          _RCSTA 000FAB  
                                 vfpfcnvrt@fmt 0052                                          _SPBRG 000FAF  
                            ??_I2C_DO_TX_EMPTY 0010                                          _TRISA 000F92  
                                        _TRISB 000F93                                          _TRISC 000F94  
                                        _TRISD 000F95                                          _TRISE 000F96  
                          ??_TLV493_Z_GetValue 0030                                          _TXREG 000FAD  
                                        _TXSTA 000FAC                              __end_of_I2C_DO_RX 4266  
                            __end_of_I2C_DO_TX 3D70                                          _flags 00FA  
                                        _fputc 4266                              __end_of_I2C_Close 4B9E  
                                        _fputs 487E                                __end_of_isdigit 4A30  
                       __size_of_I2C_MasterFsm 0070                 I2C_MasterOperation@returnValue 0015  
                                        atoi@n 0019                                          pad@fp 0017  
                                        atoi@s 000C                                          _width 00F6  
                                        _putch 4D56                        _I2C_MasterEnableRestart 4E1C  
                              __end_of_isspace 47F2                      __end_of_TLV493_X_GetValue 3E32  
                              __end_of_isupper 49C0                                          pclath 000FFA  
                                        tablat 000FF5                               ?_I2C_SetCallback 0005  
                 I2C_SetAddressNackCallback@cb 000A                                          ttemp5 005C  
                                        ttemp6 005F                                          ttemp7 0063  
                                        status 000FD8                                          wtemp8 005C  
                    __end_of_TLV493_Y_GetValue 3FAA                                 ?___fpclassifyf 0005  
                              __end_of_tolower 4690                              ?_I2C_DO_SEND_STOP 0001  
                       __size_of_I2C_SetBuffer 0024                                __end_of_strncmp 3A46  
                           ??_I2C_DO_SEND_STOP 0005                      __end_of_TLV493_Z_GetValue 3EEE  
                                _fsmStateTable 1001                       fp__rd1RegCompleteHandler 0000  
                              __initialization 4A96                                   __end_of_atoi 3462  
                                 __end_of_main 3576                       fp__wr1RegCompleteHandler 0000  
            __size_of_I2C_DO_SEND_RESTART_READ 0008                      ?_I2C_DO_SEND_RESTART_READ 0001  
                               ??_EUSART_Write 0005                                 ?_I2C_DO_RX_ACK 0001  
                  ?_INTERRUPT_InterruptManager 0001                 ??_EUSART_SetRxInterruptHandler 0007  
                                       ??_atoi 000E                                         ??_main 0186  
                            ?_I2C_MasterIsNack 0001                                  __activetblptr 000003  
                                 ?_TLV493_Init 0001                                   ?_TLV493_Read 0001  
                            ?_I2C_MasterSetIrq 0001                             ??_I2C_MasterIsNack 0005  
                           ??_I2C_MasterSetIrq 0005                         ??_TLV493_Temp_GetValue 0040  
         fp__EUSART_DefaultFramingErrorHandler 0000      __end_of_EUSART_DefaultFramingErrorHandler 4E36  
   __size_of_EUSART_DefaultFramingErrorHandler 0002            ??_EUSART_DefaultFramingErrorHandler 0001  
           ?_EUSART_DefaultFramingErrorHandler 0001              _EUSART_DefaultFramingErrorHandler 4E34  
                   _EUSART_OverrunErrorHandler 017E                __end_of_I2C_CallbackReturnReset 4E14  
                                       ?_fputc 0007                                         ?_fputs 0010  
              __size_of_I2C_CallbackReturnStop 0004                               ___awdiv@dividend 0005  
                I2C_SetDataCompleteCallback@cb 000A                                         ?_putch 0001  
                                       _ANSELH 000F7F                                   ??_I2C_Poller 0014  
                                       i2l6241 0070                                         i2l6233 001A  
                                       i2l6243 007E                                         i2l6235 0028  
                                       i2l6237 0036                                         i2l6239 0044  
                                       i2l5691 4BEE                                         i2l5683 4BC8  
                                       i2l5685 4BD8                                         i2l5687 4BDA  
                                       i2l5689 4BEA                                         i2l5971 4918  
                                       i2l5877 4DF8                                         i2l5981 3FAA  
                                       i2l5973 4928                                         i2l5879 4DFE  
                                       i2l5991 3FFE                                         i2l5983 3FBA  
                                       i2l5975 492A                                         i2l5993 400E  
                                       i2l5985 3FC8                                         i2l5977 493A  
                                       i2l5969 4906                                         i2l5995 4026  
                                       i2l5987 3FD8                                         i2l5979 493E  
                                       i2l5997 4042                                         i2l5989 3FF0  
                                       i2l5999 4060                                         _OSCCON 000FD3  
                                vfpfcnvrt@done 009C                                         _SPBRGH 000FB0  
                                       _SSPADD 000FC8                                         _SSPBUF 000FC9  
                             __end_of___xxtofl 32C8                            _I2C_MasterGetRxData 4E08  
                      __end_of_I2C_WriteNBytes 4748                                   vfprintf@cfmt 00B0  
                      __size_of_I2C_ReadNBytes 0046                                         ___flge 367C  
                                       ___fleq 4116                                      ??___fladd 0034  
                                       ___wmul 4BF2                                      ??___fldiv 000D  
                                _I2C_MasterFsm 44F6                                      ??___awdiv 0009  
                                    ??___flneg 0009                                      ??___awmod 0009  
                                    ??___flmul 001B                                      ??___flsub 0044  
                                    ??___fltol 0009                                         _efgtoa 1072  
                          _EUSART_Transmit_ISR 4906                                         _floorf 2F02  
                                       clear_0 4A9C                                         clear_1 4AA8  
                            I2C_SetCallback@cb 0005                               ___awdiv@quotient 000B  
                      fp__I2C_DO_SEND_ADR_READ 0000                                ___awmod@divisor 0007  
                      __size_of_I2C_MasterRead 0008                        __size_of_I2C_MasterOpen 0022  
                                       isa$std 000001                        __size_of_I2C_MasterStop 0004  
                              ___awmod@counter 0009                        __size_of_I2C_Initialize 0014  
                                       _printf 4B9E                                         pad@buf 0019  
                                _I2C_SetBuffer 4C18                             __end_of_I2C_Poller 4C7C  
                                       _strcpy 4690                                         _strlen 4A30  
                 __end_of_I2C_MasterDisableIrq 4E28                                         fputc@c 0007  
                                       fputs@c 0014                            _I2C_DO_ADDRESS_NACK 4566  
                                       fputs@i 0015                                         fputs@s 0010  
                                    ??_isdigit 0007                           ?_I2C_MasterGetRxData 0001  
                                    ?_I2C_Open 0001             __end_of_I2C_SetAddressNackCallback 4CAC  
                   _I2C_SetAddressNackCallback 4C94                                ___fpclassifyf@e 000D  
                              ___fpclassifyf@u 000F                                ___fpclassifyf@x 0005  
                                 __mediumconst 0000                                      ??_isspace 0007  
                                       tblptrh 000FF7                                      ??_isupper 0007  
                                       tblptrl 000FF6                                         tblptru 000FF8  
                    ??_I2C_MasterEnableRestart 0005                               __end_of_vfprintf 4630  
                                    ??_tolower 000D                                      ??_strncmp 000B  
                         ?_EUSART_Transmit_ISR 0001                  __size_of_INTERRUPT_Initialize 0004  
                   __size_of_TLV493_X_GetValue 00C2                                     ___flge@ff1 002C  
                                   ___flge@ff2 0030                                ??___fpclassifyf 0009  
                                 ___xxtofl@arg 000F                                   ___xxtofl@exp 000E  
                            _SYSTEM_Initialize 4CC4                                   ___xxtofl@val 0005  
                                   ___fleq@ff1 0005                                     ___fleq@ff2 0009  
                                   __accesstop 0060                        __end_of__initialization 4AB8  
                                   ___flneg@f1 0005                     __size_of_TLV493_Y_GetValue 00BC  
                          _I2C_MasterOperation 48C2                             ?_SYSTEM_Initialize 0001  
                                ___rparam_used 000001                           ?_I2C_DO_ADDRESS_NACK 0001  
                                   ___fltol@f1 0005                     __size_of_TLV493_Z_GetValue 00BC  
         __end_of_EUSART_SetTxInterruptHandler 4D74          __size_of_EUSART_SetTxInterruptHandler 000A  
                 _EUSART_SetTxInterruptHandler 4D6A                        _rdBlkRegCompleteHandler 4948  
                   fp__rdBlkRegCompleteHandler 0000                                 __pcstackCOMRAM 0001  
                               ?_I2C_MasterFsm 0001                                ??_I2C_DO_RX_ACK 0005  
                       _I2C_CallbackReturnStop 4E14                            ??_SYSTEM_Initialize 0007  
                                __end_of_fputc 42FC                                  __end_of_fputs 48C2  
                                __end_of_putch 4D60                                 ?_I2C_SetBuffer 0005  
                      ?_I2C_MasterWaitForEvent 0001                 __size_of_I2C_DO_SEND_ADR_WRITE 0010  
           __size_of_I2C_DO_SEND_RESTART_WRITE 0008                  __end_of_I2C_DO_SEND_ADR_WRITE 4D22  
                   ?_I2C_DO_SEND_RESTART_WRITE 0001                           ?_I2C_MasterOperation 0001  
                        ??_I2C_MasterGetRxData 0005                          I2C_ReadNBytes@address 001A  
                                   ??_I2C_Open 0005                           _eusartRxStatusBuffer 0100  
                   __end_of_I2C_MasterClearIrq 4E30                ??_EUSART_SetOverrunErrorHandler 0007  
                                      ??_fputc 000B                      __end_of_SYSTEM_Initialize 4CDA  
                                      ??_fputs 0014                          ??_EUSART_Transmit_ISR 0001  
                                      ??_putch 0006                              _I2C_MasterSendAck 4DEC  
                                   __pbssBANK0 00B8                                     __pbssBANK1 0100  
                         __end_of_EUSART_Write 47A0                                  ??_I2C_DO_IDLE 0005  
               __size_of_rd2RegCompleteHandler 002C                                  ??_I2C_DO_RCEN 0005  
                __end_of_rd2RegCompleteHandler 4B1A                   __end_of_I2C_MasterSendTxData 4DEC  
                           ?_I2C_MasterSendAck 0001                              _I2C_MasterStartRx 4E0C  
               __size_of_wr2RegCompleteHandler 002C                          ??_I2C_DO_ADDRESS_NACK 0010  
                __end_of_wr2RegCompleteHandler 4B72                    __size_of_EUSART_Receive_ISR 00BC  
                          _I2C_DO_RX_NACK_STOP 4DB4                          _rd1RegCompleteHandler 4B1A  
                           ?_I2C_MasterStartRx 0001                     __end_of_I2C_MasterSendNack 4DF8  
                             ?_I2C_WriteNBytes 0016                         I2C_WriteNBytes@address 001A  
                        _wr1RegCompleteHandler 4AC2                            ??_I2C_MasterSendAck 0005  
                     rd1RegCompleteHandler@ptr 000E                                        ?___flge 002C  
                ?_EUSART_SetTxInterruptHandler 0005                                        ?___fleq 0005  
             _EUSART_TxDefaultInterruptHandler 00FD                    __end_of_I2C_DO_SEND_RESTART 4DD4  
                              _I2C_DO_TX_EMPTY 438A                            I2C_SetBuffer@buffer 0005  
                                      ?___wmul 0005                                        ?_efgtoa 0044  
               __end_of_I2C_MasterWaitForEvent 4D12                            ??_I2C_MasterStartRx 0005  
                __size_of_I2C_DO_SEND_ADR_READ 0010                                        ?_floorf 001E  
                                      _BAUDCON 000FB8               __size_of_I2C_CallbackReturnReset 0004  
                 ??_EUSART_DefaultErrorHandler 0001                          ??_I2C_MasterOperation 0014  
                                      ?_printf 00B2                 I2C_SetDataCompleteCallback@ptr 000C  
                                      ?_strcpy 0005                                        ?_strlen 0005  
                     ??_I2C_DO_RX_NACK_RESTART 0005              __end_of_I2C_DO_SEND_RESTART_WRITE 4DDC  
                         ?_I2C_DO_RX_NACK_STOP 0001                                  _eusartRxCount 0056  
                                    ?___xxtofl 0005                             __size_of_vfpfcnvrt 0566  
                         __size_of_TLV493_Init 00DC                           __size_of_TLV493_Read 0018  
                __size_of_EUSART_RxDataHandler 002A                      __end_of_I2C_MasterSendAck 4DF2  
                                      _OSCTUNE 000F9B                                    _TempDataAnz 00E4  
                    TLV493_Y_GetValue@YDataAnz 0032                       ??_EUSART_SetErrorHandler 0007  
                                      _SSPCON1 000FC6                                        _SSPCON2 000FC5  
                                      _SSPSTAT 000FC7                      __end_of_I2C_MasterStartRx 4E10  
                         I2C_Close@returnValue 0005                   ?_I2C_SetDataCompleteCallback 000A  
                                    _I2C_DO_RX 41C0                                      _I2C_DO_TX 3CAC  
             __end_of_I2C_DO_SEND_RESTART_READ 4DE4                       TLV493_Temp_GetValue@temp 0046  
                                    _I2C_Close 4B72                        TLV493_X_GetValue@x_axis 0036  
                    ??_rdBlkRegCompleteHandler 0010                           _I2C_MasterDisableIrq 4E24  
                              ??_I2C_MasterFsm 0012                                        __Hparam 0000  
          __size_of_EUSART_DefaultErrorHandler 0006                                        __Lparam 0000  
                               _I2C_ReadNBytes 4838                            __end_of_I2C_DO_IDLE 4D56  
              TLV493_Temp_GetValue@TempDataAnz 0042                            __end_of_I2C_DO_RCEN 4D4A  
                                   _readBuffer 0168                                __size_of___flge 0104  
                              __size_of___fleq 00AA                                        ___fladd 227E  
                                      ___fldiv 2B68                                        ___awdiv 3BE8  
                                      ___flneg 49C0                                        ___awmod 4066  
                                      ___flmul 273E                                        ___flsub 47F2  
                                      ___fltol 3576                                ??_I2C_SetBuffer 0009  
                              __size_of___wmul 0026                                      ?_vfprintf 00AA  
                      I2C_SetBuffer@bufferSize 0007                                   __psmallconst 1000  
                              __size_of_efgtoa 0CA6                             I2C_ReadNBytes@data 0016  
                               _I2C_MasterRead 4DA4                                 _I2C_MasterOpen 4C3C  
                              __size_of_floorf 0212                                        __pcinit 4A96  
                               _I2C_MasterStop 4E18                                 _I2C_Initialize 4CEE  
                                      __ramtop 1000                      __size_of_I2C_DO_SEND_STOP 0008  
                                      __ptext0 3462                                        __ptext1 4B9E  
                                      __ptext2 45CC                                        __ptext3 1D18  
                                      __ptext4 396A                                        __ptext5 1072  
                                      __ptext6 4630                                        __ptext7 4988  
                                      __ptext8 4690                                        __ptext9 3B22  
                              __size_of_printf 002A                          ??_I2C_DO_RX_NACK_STOP 0005  
                              __size_of_strcpy 005E                                __size_of_strlen 0036  
                        _OSCILLATOR_Initialize 4D60                                   __size_of_pad 00C6  
                                      _isdigit 49F8                                     ??___xxtofl 0009  
                             ___awmod@dividend 0005                             I2C_SetCallback@idx 0009  
                     __size_of_I2C_MasterClose 0004                       ??_PIN_MANAGER_Initialize 0005  
                I2C_CallbackReturnReset@funPtr 000E                                        _isspace 47A0  
                           I2C_SetCallback@ptr 0007                       wr1RegCompleteHandler@ptr 000E  
                                      _isupper 4988                                        efgtoa@c 004A  
                                      efgtoa@d 0078                                        efgtoa@e 0090  
                                      efgtoa@f 0046                                        efgtoa@g 008C  
                                      efgtoa@h 0082                                        efgtoa@i 008A  
                                      efgtoa@l 0086                                        efgtoa@m 0072  
                                      efgtoa@n 0092                                        efgtoa@p 007C  
                                      efgtoa@t 006C                                        efgtoa@u 0094  
                                      efgtoa@w 007E                       fp__I2C_DO_SEND_ADR_WRITE 0000  
                     __size_of_I2C_MasterStart 0004                       __size_of_I2C_MasterWrite 0008  
                                      atoi@neg 0012                     __size_of_SYSTEM_Initialize 0016  
                                      _tolower 4630                                        _strncmp 396A  
                         end_of_initialization 4AB8                                        floorf@e 002C  
                                      floorf@m 0028                                        floorf@u 002E  
                                      floorf@x 001E                                     ?_I2C_DO_RX 0001  
                                   ?_I2C_DO_TX 0001          __end_of_EUSART_SetOverrunErrorHandler 4D88  
       __size_of_EUSART_SetOverrunErrorHandler 000A                  _EUSART_SetOverrunErrorHandler 4D7E  
                    __size_of_I2C_MasterIsNack 0014                                        fputc@fp 0009  
                                   ?_I2C_Close 0001                                        fputs@fp 0012  
                       ?_rd1RegCompleteHandler 000E                        __end_of_I2C_DO_TX_EMPTY 4406  
                    __size_of_I2C_MasterSetIrq 0004                          ?_I2C_MasterDisableIrq 0001  
                       __end_of_I2C_ReadNBytes 487E                              _EUSART_Initialize 4480  
                       ?_wr1RegCompleteHandler 000E                       fp__rd2RegCompleteHandler 0000  
                           ?_EUSART_Initialize 0001                       __size_of_I2C_SetCallback 007A  
                            __end_of_vfpfcnvrt 227E                                     efgtoa@mode 0081  
                                   efgtoa@sign 007A                                      _RCSTAbits 000FAB  
                      TLV493_Y_GetValue@y_axis 0036                                        postdec2 000FDD  
                       __end_of_I2C_MasterRead 4DAC                         __end_of_I2C_MasterOpen 4C5E  
                     fp__wr2RegCompleteHandler 0000                                        postinc0 000FEE  
                                      postinc1 000FE6                                        postinc2 000FDE  
                       __end_of_I2C_MasterStop 4E1C                         __end_of_I2C_Initialize 4D02  
                                   ??_vfprintf 0056                      fp__I2C_CallbackReturnStop 0000  
                                      strcpy@d 000D                                        strlen@a 0007  
                                      strcpy@s 000B                                        strlen@s 0005  
                          ??_EUSART_Initialize 0007                 ??_EUSART_SetTxInterruptHandler 0007  
              __end_of_rdBlkRegCompleteHandler 4988                           _I2C_MasterSendTxData 4DE4  
                              fp__I2C_DO_RESET 0000                __size_of_I2C_DO_RX_NACK_RESTART 0008  
                                  ___fladd@grs 003B                                  ___xxtofl@sign 000D  
                  ?_I2C_SetAddressNackCallback 000A                          __size_of_EUSART_Write 0058  
                   __size_of_I2C_MasterSendAck 0006                                    ___fldiv@grs 0018  
                                  ___fldiv@rem 0011                              __size_of_I2C_Open 008E  
                             _TLV493_Init$1550 001F                               _TLV493_Init$1551 0020  
                             _TLV493_Init$1548 001D                               _TLV493_Init$1549 001E  
              __size_of_EUSART_SetErrorHandler 000A                  __size_of_TLV493_Temp_GetValue 00EC  
                   __size_of_I2C_MasterStartRx 0004                                    ___flmul@grs 0021  
                    __end_of_EUSART_Initialize 44F6                                    _I2C_DO_IDLE 4D4A  
                                  _I2C_DO_RCEN 4D3E                     rdBlkRegCompleteHandler@ptr 000E  
                                    _TXSTAbits 000FAC                                ?_I2C_ReadNBytes 0016  
                      ?_I2C_CallbackReturnStop 000E                       _I2C_DO_SEND_RESTART_READ 4DDC  
                  fp__I2C_DO_SEND_RESTART_READ 0000                   I2C_CallbackReturnStop@funPtr 000E  
                              ?_I2C_MasterRead 0001                                ?_I2C_MasterOpen 0001  
                 __end_of_INTERRUPT_Initialize 4E34                                ?_I2C_MasterStop 0001  
                              ?_I2C_Initialize 0001                        _I2C_CallbackReturnReset 4E10  
                   fp__I2C_CallbackReturnReset 0000                                 __end_of___flge 3780  
                               __end_of___fleq 41C0             __end_of_EUSART_DefaultErrorHandler 4E04  
                   _EUSART_DefaultErrorHandler 4DFE                                    vfpfcnvrt@ap 0054  
                                  vfpfcnvrt@ct 00A6                                    vfpfcnvrt@fp 0050  
                               __end_of___wmul 4C18           __size_of_I2C_SetDataCompleteCallback 0018  
                               __end_of_efgtoa 1D18                                   _EUSART_Write 4748  
                               __end_of_floorf 3114                          ?_I2C_MasterSendTxData 0001  
                       ?_OSCILLATOR_Initialize 0001                                     floorf@F527 00DC  
                      TLV493_Z_GetValue@z_axis 0036                    ??_I2C_DO_SEND_RESTART_WRITE 0005  
                               __end_of_printf 4BC8                                 __end_of_strcpy 46EE  
                               __end_of_strlen 4A66                            start_initialization 4A96  
              __size_of_PIN_MANAGER_Initialize 0030                                    __end_of_pad 3BE8  
                                ?_I2C_DO_RESET 0001   EUSART_SetRxInterruptHandler@interruptHandler 0005  
 EUSART_SetTxInterruptHandler@interruptHandler 0005                                    putch@txData 0006  
                                  ??_I2C_DO_RX 0010                                    ??_I2C_DO_TX 0010  
                            ??_I2C_MasterClose 0005                         ??_I2C_MasterDisableIrq 0005  
                                  ??_I2C_Close 0005                              ??_I2C_MasterStart 0005  
                        __end_of___fpclassifyf 387E                              ??_I2C_MasterWrite 0016  
               __end_of_I2C_CallbackReturnStop 4E18                         _I2C_DO_RX_NACK_RESTART 4DAC  
                             ?_I2C_DO_TX_EMPTY 0001                             _I2C_MasterClearIrq 4E2C  
               ?_EUSART_SetOverrunErrorHandler 0005                                    vfprintf@fmt 00AC  
                   _EUSART_FramingErrorHandler 0180                                       ??___flge 0034  
                                     ??___fleq 000D                                       ??___wmul 0009  
                       _EUSART_SetErrorHandler 4D92                            ?_I2C_MasterClearIrq 0001  
                                     ??_efgtoa 004B                    __end_of_I2C_MasterGetRxData 4E0C  
                                     ??_floorf 0022                          __end_of_I2C_DO_RX_ACK 4DC4  
                             _I2C_DO_SEND_STOP 4DC4                              ??_I2C_SetCallback 0009  
                                     ??_printf 0056                            I2C_Open@returnValue 0006  
                                     ??_strcpy 0009                             _I2C_MasterSendNack 4DF2  
                                     ??_strlen 0007                       ?_I2C_MasterEnableRestart 0001  
                                    ___fladd@a 0030                                      ___fladd@b 002C  
                       fp__I2C_DO_SEND_RESTART 0000                                      ___fldiv@a 0009  
                                    ___fldiv@b 0005                    __end_of_EUSART_Transmit_ISR 4948  
                        _I2C_DO_SEND_ADR_WRITE 4D12                                      ___flmul@a 0017  
                                    ___flmul@b 0013                                    __pbssCOMRAM 0056  
                                    ___flsub@a 0040                                      ___flsub@b 003C  
                                __pcstackBANK0 0060                                  __pcstackBANK1 0184  
                               ??_I2C_DO_RESET 0005                            ?_I2C_MasterSendNack 0001  
                            __size_of___xxtofl 01B4                   __end_of_I2C_DO_SEND_ADR_READ 4D32  
                         ??_I2C_MasterClearIrq 0005                    __end_of_I2C_DO_ADDRESS_NACK 45CC  
                   __end_of_EUSART_Receive_ISR 4066                               _I2C_MasterIsNack 4CDA  
                   __size_of_EUSART_Initialize 0076                      _I2C_DO_SEND_RESTART_WRITE 4DD4  
             _EUSART_RxDefaultInterruptHandler 0182                               _I2C_MasterSetIrq 4E04  
                                    _atoi$2187 0014                                      _atoi$2188 0018  
                                    _atoi$2189 0016                                      __pnvBANK0 00FD  
                                    __pnvBANK1 017C                          _rd2RegCompleteHandler 4AEE  
                        __end_of_fsmStateTable 1021                                    _efgtoa$2123 0060  
                                  _efgtoa$2124 0062                                    _efgtoa$2133 0066  
                                  _efgtoa$2134 0068                                    _efgtoa$2135 006A  
                                  _efgtoa$2129 0064                   __end_of_EUSART_RxDataHandler 4BF2  
                       _PIN_MANAGER_Initialize 4A66                          _wr2RegCompleteHandler 4B46  
                    ??_I2C_CallbackReturnReset 0010                    __end_of_I2C_MasterOperation 4906  
                         ??_I2C_MasterSendNack 0005                       rd2RegCompleteHandler@ptr 000E  
                                    __pintcode 0008                                       ?___fladd 002C  
                                     ?___fldiv 0005                                       ?___awdiv 0005  
                                    __ptext101 4906                                      __ptext102 3FAA  
                                     ?___flneg 0005                                      __ptext103 4DF8  
                                    __ptext104 4E34                                      __ptext105 4DFE  
                                    __ptext106 4BC8                                      __ptext107 0000  
                                     ?___awmod 0005                                       ?___flmul 0013  
                                     ?___flsub 003C                                       ?___fltol 0005  
                                 _eusartRxHead 0058                                   _eusartTxHead 005A  
                                 _eusartRxTail 0057                         ??_I2C_MasterSendTxData 0005  
                                 _eusartTxTail 0059                   ??_INTERRUPT_InterruptManager 0001  
                     __size_of_I2C_WriteNBytes 005A                              __size_of_vfprintf 0064  
                                 fp__I2C_DO_RX 0000                                   fp__I2C_DO_TX 0000  
                      _eusartTxBufferRemaining 00FF                                  ??_TLV493_Init 001B  
                                ??_TLV493_Read 001B                   __size_of_I2C_DO_SEND_RESTART 0008  
                                  __smallconst 1000                                       ?_isdigit 0005  
                      I2C_MasterOperation@read 0014                                       _I2C_Open 42FC  
                                     ?_isspace 0005                                       ?_isupper 0005  
                            I2C_ReadNBytes@len 0018                                       ?_tolower 000B  
                    TLV493_Z_GetValue@ZDataAnz 0032                                 __size_of_fputc 0096  
                               __size_of_fputs 0044                        ??_rd1RegCompleteHandler 0010  
                                     ?_strncmp 0005                                 __size_of_putch 000A  
                         _INTERRUPT_Initialize 4E30                                 _eusartRxBuffer 0108  
                      ??_wr1RegCompleteHandler 0010                                 _eusartTxBuffer 0110  
                               ___wmul@product 0009         EUSART_SetErrorHandler@interruptHandler 0005  
                                     _PIE1bits 000F9D                              _eusartRxLastError 00FC  
          __size_of_INTERRUPT_InterruptManager 00A8                                       _PIR1bits 000F9E  
              ??_EUSART_SetFramingErrorHandler 0007                                       i2u610_48 0084  
                                     i2u610_49 0098                                       _PIR2bits 000FA1  
                                     i2u604_40 0028                                       i2u604_41 0024  
                                     i2u605_40 0036                                       i2u605_41 0032  
                                     i2u606_40 0044                                       i2u606_41 0040  
                                     i2u544_40 4BEA                                       i2u608_40 0070  
                                     i2u607_48 004A                                       i2u544_41 4BE6  
                                     i2u608_41 006C                                       i2u607_49 005E  
                                     i2u609_40 007E                                       i2u609_41 007A  
                                     i2u580_40 3FFE                                       i2u580_41 3FFA  
                                     i2u582_40 4042                                       i2u581_48 4014  
                                     i2u582_41 403E                                       i2u581_49 4026  
                                     i2u583_48 4048                                       i2u576_40 4918  
                                     i2u583_49 405C                                       i2u576_41 4914  
                                     i2u577_40 493A                                       i2u577_41 4936  
                                     i2u578_40 3FC8                                       i2u578_41 3FC4  
                                     i2u579_48 3FDE                                       i2u579_49 3FF0  
                        __end_of_I2C_MasterFsm 4566                                       _RCONbits 000FD0  
                  __end_of_I2C_DO_RX_NACK_STOP 4DBC           fp__EUSART_DefaultOverrunErrorHandler 0000  
    __end_of_EUSART_DefaultOverrunErrorHandler 4DFE     __size_of_EUSART_DefaultOverrunErrorHandler 0006  
          ??_EUSART_DefaultOverrunErrorHandler 0001             ?_EUSART_DefaultOverrunErrorHandler 0001  
            _EUSART_DefaultOverrunErrorHandler 4DF8                __end_of_I2C_MasterEnableRestart 4E20  
                               fp__I2C_DO_IDLE 0000                                 fp__I2C_DO_RCEN 0000  
                                    _vfpfcnvrt 1D18                          __end_of_I2C_SetBuffer 4C3C  
                            ___wmul@multiplier 0005                         ?_I2C_DO_SEND_ADR_WRITE 0001  
                     I2C_MasterSendTxData@data 0005                                       _XDataAnz 00F0  
                     wr2RegCompleteHandler@ptr 000E                                   _isspace$2218 000B  
                                     _YDataAnz 00EC                                       _ZDataAnz 00E8  
                                   vfpfcnvrt@c 00A9                                     vfpfcnvrt@f 00A2  
                          __end_of_TLV493_Init 3B22                            __end_of_TLV493_Read 4C94  
                                  _INTCON2bits 000FF1                     ??_I2C_DO_SEND_RESTART_READ 0005  
                        ?_INTERRUPT_Initialize 0001                       ?_rdBlkRegCompleteHandler 000E  
                             ??_I2C_ReadNBytes 001A                                     _I2C_Poller 4C5E  
                                   _I2C_Status 00B8                                   ?_I2C_DO_IDLE 0001  
                                 ?_I2C_DO_RCEN 0001                         ?_rd2RegCompleteHandler 000E  
                             ??_I2C_MasterRead 0016                          fp__EUSART_Receive_ISR 0000  
                          I2C_WriteNBytes@data 0016                               ??_I2C_MasterOpen 0005  
                       ?_wr2RegCompleteHandler 000E                               ??_I2C_MasterStop 0005  
                     ??_I2C_MasterWaitForEvent 0005                               ??_I2C_Initialize 0005  
                    fp__I2C_DO_RX_NACK_RESTART 0000                                       __Hrparam 0000  
                                   vfprintf@ap 00AE                                       __Lrparam 0000  
                                   vfprintf@fp 00AA                           __end_of_I2C_DO_RESET 4D3E  
                 __end_of_TLV493_Temp_GetValue 396A                        ??_OSCILLATOR_Initialize 0005  
                          _EUSART_ErrorHandler 017C                               __size_of___fladd 04C0  
                             __size_of___fldiv 039A                               __size_of___awdiv 00C4  
                         _I2C_DO_SEND_ADR_READ 4D22                               __size_of___flneg 0038  
                             __size_of___awmod 00B0                               __size_of___flmul 042A  
                             __size_of___flsub 0046                               __size_of___fltol 0106  
                  ?_EUSART_DefaultErrorHandler 0001                                     ?_vfpfcnvrt 0050  
                           ___fpclassifyf@F465 00E0                                _I2C_MasterClose 4E28  
                I2C_SetAddressNackCallback@ptr 000C                                I2C_Open@address 0005  
                                     ___xxtofl 3114                            fp__I2C_DO_SEND_STOP 0000  
                              _I2C_MasterStart 4E20                                _I2C_MasterWrite 4D9C  
                             __size_of_isdigit 0038                           _EUSART_RxDataHandler 4BC8  
                            ??_I2C_WriteNBytes 001A                               __size_of_isspace 0052  
                                     __ptext10 4A30                                       __ptext11 487E  
                                     __ptext20 367C                                       __ptext12 4266  
                                     __ptext21 4116                                       __ptext13 4D56  
                                     __ptext30 3EEE                                       __ptext22 2B68  
                                     __ptext14 4748                                       __ptext31 3D70  
                                     __ptext23 4066                                       __ptext15 2F02  
                                     __ptext40 4D9C                                       __ptext32 387E  
                                     __ptext24 3BE8                                       __ptext16 3780  
                                     __ptext41 4838                                       __ptext33 3114  
                                     __ptext25 32C8                                       __ptext17 3576  
                                     __ptext50 4D32                                       __ptext42 42FC  
                                     __ptext34 273E                                       __ptext26 47A0  
                                     __ptext18 47F2                                       __ptext51 4DAC  
                                     __ptext43 4C3C                                       __ptext35 227E  
                                     __ptext27 49F8                                       __ptext19 49C0  
                                     __ptext60 3CAC                                       __ptext52 4DB4  
                                     __ptext44 4DA4                                       __ptext36 4C7C  
                                     __ptext28 4BF2                                       __ptext61 4D12  
                                     __ptext53 4DBC                                       __ptext45 48C2  
                                     __ptext37 3A46                                       __ptext29 3E32  
                                     __ptext70 4DF2                                       __ptext62 4D22  
                                     __ptext54 4DC4                                       __ptext46 4C5E  
                                     __ptext38 46EE                                       __ptext71 4E0C  
                                     __ptext63 4D4A                                       __ptext55 4DCC  
                                     __ptext47 4D02                                       __ptext39 4C94  
                                     __ptext80 4406                                       __ptext72 4E10  
                                     __ptext64 438A                                       __ptext56 4DD4  
                                     __ptext48 44F6                                       __ptext81 4C18  
                                     __ptext73 4E14                                       __ptext65 4E04  
                                     __ptext57 4DDC                                       __ptext49 4566  
                                     __ptext90 4A66                                       __ptext82 4E18  
                                     __ptext74 4948                                       __ptext66 4CDA  
                                     __ptext58 4D3E                                       __ptext91 4D60  
                                     __ptext83 4E1C                                       __ptext75 4AC2  
                                     __ptext67 4DE4                                       __ptext59 41C0  
                                     __ptext92 4E30                                       __ptext84 4E20  
                                     __ptext76 4AEE                                       __ptext68 4DEC  
                                     __ptext93 4CEE                                       __ptext85 4B72  
                                     __ptext77 4B1A                                       __ptext69 4E08  
                                     __ptext94 4480                                       __ptext86 4E24  
                                     __ptext78 4B46                                       __ptext95 4D6A  
                                     __ptext87 4E28                                       __ptext79 4CAC  
                                     __ptext96 4D74                                       __ptext88 4E2C  
                                     __ptext97 4D7E                                       __ptext89 4CC4  
                                     __ptext98 4D88                                       __ptext99 4D92  
                             __size_of_isupper 0038            __end_of_I2C_SetDataCompleteCallback 4CC4  
                  _I2C_SetDataCompleteCallback 4CAC                        ?_I2C_DO_RX_NACK_RESTART 0001  
                             __size_of_tolower 0060                                     strcpy@dest 0005  
                             __size_of_strncmp 00DC                       __end_of_I2C_DO_SEND_STOP 4DCC  
                                __size_of_atoi 019A                                  __size_of_main 0114  
                      ?_EUSART_SetErrorHandler 0005                                _I2C_SetCallback 4406  
                ??_I2C_SetDataCompleteCallback 000E                                       efgtoa@fp 0044  
                                     efgtoa@ne 0070                                       efgtoa@pp 006E  
                                     efgtoa@ou 0074  EUSART_SetOverrunErrorHandler@interruptHandler 0005  
                                     isa$xinst 000000                                       int$flags 005B  
                        ?_I2C_DO_SEND_ADR_READ 0001                                       _vfprintf 45CC  
           __end_of_INTERRUPT_InterruptManager 00B0                     _INTERRUPT_InterruptManager 0008  
                                    printf@fmt 00B2          __end_of_EUSART_SetFramingErrorHandler 4D92  
       __size_of_EUSART_SetFramingErrorHandler 000A                  _EUSART_SetFramingErrorHandler 4D88  
                     __end_of_I2C_MasterIsNack 4CEE                       __end_of_I2C_MasterSetIrq 4E08  
                                  _TLV493_Init 3A46                                    _TLV493_Read 4C7C  
                               _vfpfcnvrt$2153 00A0                                 _vfpfcnvrt$2149 009E  
                                   _INTCONbits 000FF2                             I2C_WriteNBytes@len 0018  
                        ?_EUSART_RxDataHandler 0001                                       isdigit@c 0005  
                       ??_INTERRUPT_Initialize 0005                 __end_of_I2C_DO_RX_NACK_RESTART 4DB4  
                                     intlevel2 0000                                    ?_I2C_Poller 0001  
                       fp__EUSART_Transmit_ISR 0000               __size_of_I2C_MasterEnableRestart 0004  
                                     isspace@c 0005                        ?_PIN_MANAGER_Initialize 0001  
               __end_of_EUSART_SetErrorHandler 4D9C                            _I2C_DO_SEND_RESTART 4DCC  
                                    strcpy@src 0007                  __size_of_I2C_MasterDisableIrq 0004  
                                     isupper@c 0005                         fp__I2C_DO_ADDRESS_NACK 0000  
                                    strncmp@_l 0005                                      strncmp@_r 0007  
         __end_of_EUSART_SetRxInterruptHandler 4D7E          __size_of_EUSART_SetRxInterruptHandler 000A  
                 _EUSART_SetRxInterruptHandler 4D74                __size_of_I2C_MasterWaitForEvent 0010  
                                  efgtoa@nmode 0080                                       printf@ap 0184  
                           _EUSART_Receive_ISR 3FAA  EUSART_SetFramingErrorHandler@interruptHandler 0005  
                      __end_of_I2C_MasterClose 4E2C                       __size_of_I2C_DO_TX_EMPTY 007C  
                           fp__I2C_DO_TX_EMPTY 0000                                    ??_vfpfcnvrt 0098  
                      __end_of_I2C_MasterStart 4E24                        __end_of_I2C_MasterWrite 4DA4  
                         ?_I2C_DO_SEND_RESTART 0001                                       tolower@c 000B  
                          ?_EUSART_Receive_ISR 0001                         __size_of___fpclassifyf 00FE  
                fp__EUSART_DefaultErrorHandler 0000                   __size_of_I2C_MasterGetRxData 0004  
                                     strncmp@l 000C                                       strncmp@n 0009  
                                     strncmp@r 000E                                    _SSPCON1bits 000FC6  
                                  _SSPCON2bits 000FC5                                  ___fladd@signs 0038  
                  __size_of_I2C_MasterClearIrq 0004                           _TLV493_Temp_GetValue 387E  
                           EUSART_Write@txData 0005                   __size_of_EUSART_Transmit_ISR 0042  
                      __end_of_I2C_SetCallback 4480                 __end_of_PIN_MANAGER_Initialize 4A96  
               __size_of_rd1RegCompleteHandler 002C                  __end_of_rd1RegCompleteHandler 4B46  
                       __size_of_I2C_DO_RX_ACK 0008                               fp__I2C_DO_RX_ACK 0000  
                                 ___fladd@aexp 0039                                   ___fladd@bexp 003A  
               __size_of_wr1RegCompleteHandler 002C                           ??_EUSART_Receive_ISR 0001  
                        __size_of_I2C_DO_RESET 000C                  __end_of_wr1RegCompleteHandler 4AEE  
                 __size_of_I2C_DO_ADDRESS_NACK 0066                           __size_of_I2C_DO_IDLE 000C  
                         __size_of_I2C_DO_RCEN 000C                             __size_of_I2C_DO_RX 00A6  
                           __size_of_I2C_DO_TX 00C4  
